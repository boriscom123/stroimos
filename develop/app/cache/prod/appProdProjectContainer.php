<?php
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InactiveScopeException;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
class appProdProjectContainer extends Container
{
    private $parameters;
    private $targetDirs = array();
    public function __construct()
    {
        $dir = __DIR__;
        for ($i = 1; $i <= 5; ++$i) {
            $this->targetDirs[$i] = $dir = dirname($dir);
        }
        $this->parameters = $this->getDefaultParameters();
        $this->services =
        $this->scopedServices =
        $this->scopeStacks = array();
        $this->scopes = array('request' => 'container');
        $this->scopeChildren = array('request' => array());
        $this->methodMap = array(
            'admin.action_log' => 'getAdmin_ActionLogService',
            'admin.administrative_area' => 'getAdmin_AdministrativeAreaService',
            'admin.administrative_unit' => 'getAdmin_AdministrativeUnitService',
            'admin.announcement' => 'getAdmin_AnnouncementService',
            'admin.article_rubrics' => 'getAdmin_ArticleRubricsService',
            'admin.article_source' => 'getAdmin_ArticleSourceService',
            'admin.author' => 'getAdmin_AuthorService',
            'admin.category' => 'getAdmin_CategoryService',
            'admin.city_district' => 'getAdmin_CityDistrictService',
            'admin.comment' => 'getAdmin_CommentService',
            'admin.construction' => 'getAdmin_ConstructionService',
            'admin.construction_filter' => 'getAdmin_ConstructionFilterService',
            'admin.construction_parameter' => 'getAdmin_ConstructionParameterService',
            'admin.construction_parameter_value' => 'getAdmin_ConstructionParameterValueService',
            'admin.construction_type' => 'getAdmin_ConstructionTypeService',
            'admin.contact_person' => 'getAdmin_ContactPersonService',
            'admin.decision_document' => 'getAdmin_DecisionDocumentService',
            'admin.destruction' => 'getAdmin_DestructionService',
            'admin.document' => 'getAdmin_DocumentService',
            'admin.document_has_media' => 'getAdmin_DocumentHasMediaService',
            'admin.document_rubric' => 'getAdmin_DocumentRubricService',
            'admin.draft' => 'getAdmin_DraftService',
            'admin.draft_document' => 'getAdmin_DraftDocumentService',
            'admin.edit_locker' => 'getAdmin_EditLockerService',
            'admin.emai_subscription' => 'getAdmin_EmaiSubscriptionService',
            'admin.embedded_content.banner' => 'getAdmin_EmbeddedContent_BannerService',
            'admin.embedded_content.faq' => 'getAdmin_EmbeddedContent_FaqService',
            'admin.embedded_content.quote' => 'getAdmin_EmbeddedContent_QuoteService',
            'admin.embedded_content.text_block' => 'getAdmin_EmbeddedContent_TextBlockService',
            'admin.error_report' => 'getAdmin_ErrorReportService',
            'admin.extension.homepage_guard' => 'getAdmin_Extension_HomepageGuardService',
            'admin.extension.menu_guard' => 'getAdmin_Extension_MenuGuardService',
            'admin.extension.related_posts' => 'getAdmin_Extension_RelatedPostsService',
            'admin.extra_information' => 'getAdmin_ExtraInformationService',
            'admin.form.comment_status_type' => 'getAdmin_Form_CommentStatusTypeService',
            'admin.gallery' => 'getAdmin_GalleryService',
            'admin.gallery_media' => 'getAdmin_GalleryMediaService',
            'admin.gallery_newsletter' => 'getAdmin_GalleryNewsletterService',
            'admin.gallery_picks' => 'getAdmin_GalleryPicksService',
            'admin.hightlight_newsletter' => 'getAdmin_HightlightNewsletterService',
            'admin.infographics' => 'getAdmin_InfographicsService',
            'admin.infographoics_newsletter' => 'getAdmin_InfographoicsNewsletterService',
            'admin.law_document' => 'getAdmin_LawDocumentService',
            'admin.media_category' => 'getAdmin_MediaCategoryService',
            'admin.media_collection_contractor' => 'getAdmin_MediaCollectionContractorService',
            'admin.menu' => 'getAdmin_MenuService',
            'admin.menu_nodes' => 'getAdmin_MenuNodesService',
            'admin.metro_line' => 'getAdmin_MetroLineService',
            'admin.metro_station' => 'getAdmin_MetroStationService',
            'admin.metro_station_image' => 'getAdmin_MetroStationImageService',
            'admin.metro_timeline_year' => 'getAdmin_MetroTimelineYearService',
            'admin.newsletter' => 'getAdmin_NewsletterService',
            'admin.newsletter.unsubscribe_reason' => 'getAdmin_Newsletter_UnsubscribeReasonService',
            'admin.organization' => 'getAdmin_OrganizationService',
            'admin.organization_directory' => 'getAdmin_OrganizationDirectoryService',
            'admin.outgoing_agency' => 'getAdmin_OutgoingAgencyService',
            'admin.owner' => 'getAdmin_OwnerService',
            'admin.person' => 'getAdmin_PersonService',
            'admin.post' => 'getAdmin_PostService',
            'admin.post_attachment' => 'getAdmin_PostAttachmentService',
            'admin.post_newsletter' => 'getAdmin_PostNewsletterService',
            'admin.questions_and_answers' => 'getAdmin_QuestionsAndAnswersService',
            'admin.redirect' => 'getAdmin_RedirectService',
            'admin.road' => 'getAdmin_RoadService',
            'admin.road_parameter_value' => 'getAdmin_RoadParameterValueService',
            'admin.spotlight_item' => 'getAdmin_SpotlightItemService',
            'admin.status.comment_renderer' => 'getAdmin_Status_CommentRendererService',
            'admin.subordinate_socials' => 'getAdmin_SubordinateSocialsService',
            'admin.thread' => 'getAdmin_ThreadService',
            'admin.user_role' => 'getAdmin_UserRoleService',
            'admin.video' => 'getAdmin_VideoService',
            'admin.video_newsletter' => 'getAdmin_VideoNewsletterService',
            'admin.video_picks' => 'getAdmin_VideoPicksService',
            'amg_admin.autoadmin.fields_arranger' => 'getAmgAdmin_Autoadmin_FieldsArrangerService',
            'amg_admin.filter.data_range' => 'getAmgAdmin_Filter_DataRangeService',
            'amg_admin.lock.admin_extension' => 'getAmgAdmin_Lock_AdminExtensionService',
            'amg_admin.lock.entity_listener' => 'getAmgAdmin_Lock_EntityListenerService',
            'amg_form.type.date_range' => 'getAmgForm_Type_DateRangeService',
            'amg_form.type.elfinder' => 'getAmgForm_Type_ElfinderService',
            'amg_form.type.file' => 'getAmgForm_Type_FileService',
            'amg_form.type.filter_date_range' => 'getAmgForm_Type_FilterDateRangeService',
            'amg_page.admin.block' => 'getAmgPage_Admin_BlockService',
            'amg_page.admin.page' => 'getAmgPage_Admin_PageService',
            'amg_page.form.type.page' => 'getAmgPage_Form_Type_PageService',
            'amg_page.layout.manager' => 'getAmgPage_Layout_ManagerService',
            'amg_page.manager' => 'getAmgPage_ManagerService',
            'amg_page.menu.provider.page' => 'getAmgPage_Menu_Provider_PageService',
            'amg_page.menu.provider.sitemap' => 'getAmgPage_Menu_Provider_SitemapService',
            'amg_page.page.repository' => 'getAmgPage_Page_RepositoryService',
            'amg_page.param_converter.page' => 'getAmgPage_ParamConverter_PageService',
            'amg_page.router' => 'getAmgPage_RouterService',
            'amg_page.twig.page_extension' => 'getAmgPage_Twig_PageExtensionService',
            'amg_page.twig.page_menu_extension' => 'getAmgPage_Twig_PageMenuExtensionService',
            'amg_tag.admin.tag' => 'getAmgTag_Admin_TagService',
            'amg_tag.autoadmin.extension.tags' => 'getAmgTag_Autoadmin_Extension_TagsService',
            'amg_tag.manager' => 'getAmgTag_ManagerService',
            'amg_tag.twig.tag' => 'getAmgTag_Twig_TagService',
            'animated_banner' => 'getAnimatedBannerService',
            'annotation_reader' => 'getAnnotationReaderService',
            'annotations.reader' => 'getAnnotations_ReaderService',
            'announcement' => 'getAnnouncementService',
            'apibundle\\applicationlayer\\abstractcommand\\symfonycommandvalidator' => 'getApibundle_Applicationlayer_Abstractcommand_SymfonycommandvalidatorService',
            'apibundle\\applicationlayer\\changepostprioritycommand\\changepostprioritycommandvalidator' => 'getApibundle_Applicationlayer_Changepostprioritycommand_ChangepostprioritycommandvalidatorService',
            'apibundle\\applicationlayer\\changepostprioritycommand\\changepostpriorityhandler' => 'getApibundle_Applicationlayer_Changepostprioritycommand_ChangepostpriorityhandlerService',
            'apibundle\\applicationlayer\\createandsendserviceemailcommand\\createandsendserviceemailhandler' => 'getApibundle_Applicationlayer_Createandsendserviceemailcommand_CreateandsendserviceemailhandlerService',
            'apibundle\\applicationlayer\\createanimatedgifcommand\\createanimatedgifhandler' => 'getApibundle_Applicationlayer_Createanimatedgifcommand_CreateanimatedgifhandlerService',
            'apibundle\\applicationlayer\\emailsubscriptioncommands\\deletesubscriptioncommandhandler' => 'getApibundle_Applicationlayer_Emailsubscriptioncommands_DeletesubscriptioncommandhandlerService',
            'apibundle\\applicationlayer\\emailsubscriptioncommands\\deletesubscriptioncommandvalidator' => 'getApibundle_Applicationlayer_Emailsubscriptioncommands_DeletesubscriptioncommandvalidatorService',
            'apibundle\\applicationlayer\\emailsubscriptioncommands\\saveoptionscommandhandler' => 'getApibundle_Applicationlayer_Emailsubscriptioncommands_SaveoptionscommandhandlerService',
            'apibundle\\applicationlayer\\emailsubscriptioncommands\\saveoptionscommandvalidator' => 'getApibundle_Applicationlayer_Emailsubscriptioncommands_SaveoptionscommandvalidatorService',
            'apibundle\\infrastructurelayer\\datamapper\\datamapperrepository' => 'getApibundle_Infrastructurelayer_Datamapper_DatamapperrepositoryService',
            'apibundle\\infrastructurelayer\\datamapper\\report\\bannerdatamapper' => 'getApibundle_Infrastructurelayer_Datamapper_Report_BannerdatamapperService',
            'apibundle\\infrastructurelayer\\datamapper\\report\\documentdatamapper' => 'getApibundle_Infrastructurelayer_Datamapper_Report_DocumentdatamapperService',
            'apibundle\\infrastructurelayer\\datamapper\\report\\infographicdatamapper' => 'getApibundle_Infrastructurelayer_Datamapper_Report_InfographicdatamapperService',
            'apibundle\\infrastructurelayer\\datamapper\\report\\logentrydatamapper' => 'getApibundle_Infrastructurelayer_Datamapper_Report_LogentrydatamapperService',
            'apibundle\\infrastructurelayer\\datamapper\\report\\newsletterdatamapper' => 'getApibundle_Infrastructurelayer_Datamapper_Report_NewsletterdatamapperService',
            'apibundle\\infrastructurelayer\\datamapper\\report\\pagepersonaldatamapper' => 'getApibundle_Infrastructurelayer_Datamapper_Report_PagepersonaldatamapperService',
            'apibundle\\infrastructurelayer\\datamapper\\report\\postdatamapper' => 'getApibundle_Infrastructurelayer_Datamapper_Report_PostdatamapperService',
            'apibundle\\infrastructurelayer\\queryfactory\\post\\postqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Post_PostqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\queryfactoryrepository' => 'getApibundle_Infrastructurelayer_Queryfactory_QueryfactoryrepositoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\announcementqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_AnnouncementqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\articlequeryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_ArticlequeryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\bannerqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_BannerqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\documentqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_DocumentqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\embeddedbannerqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_EmbeddedbannerqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\faqqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_FaqqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\infographiccollagequeryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_InfographiccollagequeryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\infographicfrommediaqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_InfographicfrommediaqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\infographicqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_InfographicqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\interviewqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_InterviewqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\newscityqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_NewscityqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\newsletterqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_NewsletterqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\newsqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_NewsqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\pagebuildersciensequeryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_PagebuildersciensequeryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\pageconstructionqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_PageconstructionqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\pagemetroqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_PagemetroqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\pageorganisationqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_PageorganisationqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\pagepersonqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_PagepersonqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\pagephotoqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_PagephotoqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\pagequeryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_PagequeryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\pageroadqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_PageroadqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\photomediaqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_PhotomediaqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\photoqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_PhotoqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\pressreleasequeryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_PressreleasequeryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\shorthandqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_ShorthandqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\spotlightitemqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_SpotlightitemqueryfactoryService',
            'apibundle\\infrastructurelayer\\queryfactory\\report\\videoqueryfactory' => 'getApibundle_Infrastructurelayer_Queryfactory_Report_VideoqueryfactoryService',
            'apibundle\\infrastructurelayer\\service\\animatedgiffactory' => 'getApibundle_Infrastructurelayer_Service_AnimatedgiffactoryService',
            'apibundle\\infrastructurelayer\\service\\postservice' => 'getApibundle_Infrastructurelayer_Service_PostserviceService',
            'apibundle\\presentationlayer\\httpcontroller\\animatedgifgeneratorcontroller' => 'getApibundle_Presentationlayer_Httpcontroller_AnimatedgifgeneratorcontrollerService',
            'apibundle\\presentationlayer\\httpcontroller\\emailsubscriptioncontroller' => 'getApibundle_Presentationlayer_Httpcontroller_EmailsubscriptioncontrollerService',
            'apibundle\\presentationlayer\\httpcontroller\\gallerycontroller' => 'getApibundle_Presentationlayer_Httpcontroller_GallerycontrollerService',
            'apibundle\\presentationlayer\\httpcontroller\\postchangeprioritycontroller' => 'getApibundle_Presentationlayer_Httpcontroller_PostchangeprioritycontrollerService',
            'apibundle\\presentationlayer\\httpcontroller\\postcontroller' => 'getApibundle_Presentationlayer_Httpcontroller_PostcontrollerService',
            'apibundle\\presentationlayer\\httpcontroller\\reportcontroller' => 'getApibundle_Presentationlayer_Httpcontroller_ReportcontrollerService',
            'apibundle\\presentationlayer\\httpcontroller\\serviceemailsendercontroller' => 'getApibundle_Presentationlayer_Httpcontroller_ServiceemailsendercontrollerService',
            'apibundle\\presentationlayer\\view\\animatedgif\\apicreationresult' => 'getApibundle_Presentationlayer_View_Animatedgif_ApicreationresultService',
            'app.action_logger' => 'getApp_ActionLoggerService',
            'app.admin.appeal' => 'getApp_Admin_AppealService',
            'app.admin.extension.' => 'getApp_Admin_Extension_Service',
            'app.admin.extension.action_logger' => 'getApp_Admin_Extension_ActionLoggerService',
            'app.admin.extension.address' => 'getApp_Admin_Extension_AddressService',
            'app.admin.extension.api_cache_invalidation' => 'getApp_Admin_Extension_ApiCacheInvalidationService',
            'app.admin.extension.attachments' => 'getApp_Admin_Extension_AttachmentsService',
            'app.admin.extension.author' => 'getApp_Admin_Extension_AuthorService',
            'app.admin.extension.block_cache_invalidation' => 'getApp_Admin_Extension_BlockCacheInvalidationService',
            'app.admin.extension.categorized' => 'getApp_Admin_Extension_CategorizedService',
            'app.admin.extension.contact_info' => 'getApp_Admin_Extension_ContactInfoService',
            'app.admin.extension.contentful' => 'getApp_Admin_Extension_ContentfulService',
            'app.admin.extension.currently' => 'getApp_Admin_Extension_CurrentlyService',
            'app.admin.extension.draft' => 'getApp_Admin_Extension_DraftService',
            'app.admin.extension.entitled' => 'getApp_Admin_Extension_EntitledService',
            'app.admin.extension.extra_information' => 'getApp_Admin_Extension_ExtraInformationService',
            'app.admin.extension.feedable' => 'getApp_Admin_Extension_FeedableService',
            'app.admin.extension.file' => 'getApp_Admin_Extension_FileService',
            'app.admin.extension.image' => 'getApp_Admin_Extension_ImageService',
            'app.admin.extension.lead' => 'getApp_Admin_Extension_LeadService',
            'app.admin.extension.media_list' => 'getApp_Admin_Extension_MediaListService',
            'app.admin.extension.metadata' => 'getApp_Admin_Extension_MetadataService',
            'app.admin.extension.mobile_contentful' => 'getApp_Admin_Extension_MobileContentfulService',
            'app.admin.extension.owner' => 'getApp_Admin_Extension_OwnerService',
            'app.admin.extension.owners' => 'getApp_Admin_Extension_OwnersService',
            'app.admin.extension.panorama' => 'getApp_Admin_Extension_PanoramaService',
            'app.admin.extension.person_full_name' => 'getApp_Admin_Extension_PersonFullNameService',
            'app.admin.extension.position' => 'getApp_Admin_Extension_PositionService',
            'app.admin.extension.priority_position' => 'getApp_Admin_Extension_PriorityPositionService',
            'app.admin.extension.publishable' => 'getApp_Admin_Extension_PublishableService',
            'app.admin.extension.publishing_period' => 'getApp_Admin_Extension_PublishingPeriodService',
            'app.admin.extension.rubrics' => 'getApp_Admin_Extension_RubricsService',
            'app.admin.extension.show_last_news' => 'getApp_Admin_Extension_ShowLastNewsService',
            'app.admin.extension.source' => 'getApp_Admin_Extension_SourceService',
            'app.admin.extension.teasing' => 'getApp_Admin_Extension_TeasingService',
            'app.admin_locator' => 'getApp_AdminLocatorService',
            'app.construction.find_organization' => 'getApp_Construction_FindOrganizationService',
            'app.converterkendogridstatetodoctrinecriteria' => 'getApp_ConverterkendogridstatetodoctrinecriteriaService',
            'app.doctrine.filter.admin_configurator' => 'getApp_Doctrine_Filter_AdminConfiguratorService',
            'app.doctrine.filter.manager' => 'getApp_Doctrine_Filter_ManagerService',
            'app.email_manager' => 'getApp_EmailManagerService',
            'app.entity_listener.comment' => 'getApp_EntityListener_CommentService',
            'app.entity_listener.construction' => 'getApp_EntityListener_ConstructionService',
            'app.entity_url_generator' => 'getApp_EntityUrlGeneratorService',
            'app.exception_listener' => 'getApp_ExceptionListenerService',
            'app.filterconverter' => 'getApp_FilterconverterService',
            'app.form.extension.image_type' => 'getApp_Form_Extension_ImageTypeService',
            'app.form.type.address' => 'getApp_Form_Type_AddressService',
            'app.form.type.administrative_unit_choice' => 'getApp_Form_Type_AdministrativeUnitChoiceService',
            'app.form.type.ajax_autocomplete' => 'getApp_Form_Type_AjaxAutocompleteService',
            'app.form.type.collection_list' => 'getApp_Form_Type_CollectionListService',
            'app.form.type.construction_data_choice' => 'getApp_Form_Type_ConstructionDataChoiceService',
            'app.form.type.construction_data_geo_point' => 'getApp_Form_Type_ConstructionDataGeoPointService',
            'app.form.type.construction_data_geo_polygon' => 'getApp_Form_Type_ConstructionDataGeoPolygonService',
            'app.form.type.construction_data_text' => 'getApp_Form_Type_ConstructionDataTextService',
            'app.form.type.construction_status' => 'getApp_Form_Type_ConstructionStatusService',
            'app.form.type.contact_information' => 'getApp_Form_Type_ContactInformationService',
            'app.form.type.copy_content_button' => 'getApp_Form_Type_CopyContentButtonService',
            'app.form.type.entity_reference' => 'getApp_Form_Type_EntityReferenceService',
            'app.form.type.error_report' => 'getApp_Form_Type_ErrorReportService',
            'app.form.type.geopoint' => 'getApp_Form_Type_GeopointService',
            'app.form.type.gif_generator' => 'getApp_Form_Type_GifGeneratorService',
            'app.form.type.hyperlink' => 'getApp_Form_Type_HyperlinkService',
            'app.form.type.media_category_tree' => 'getApp_Form_Type_MediaCategoryTreeService',
            'app.form.type.media_collection' => 'getApp_Form_Type_MediaCollectionService',
            'app.form.type.media_list' => 'getApp_Form_Type_MediaListService',
            'app.form.type.menu_tree' => 'getApp_Form_Type_MenuTreeService',
            'app.form.type.metro_video_tour_item' => 'getApp_Form_Type_MetroVideoTourItemService',
            'app.form.type.re_captcha' => 'getApp_Form_Type_ReCaptchaService',
            'app.form.type.road_type' => 'getApp_Form_Type_RoadTypeService',
            'app.inforgaphicsxlsx' => 'getApp_InforgaphicsxlsxService',
            'app.kernal.listener.seo' => 'getApp_Kernal_Listener_SeoService',
            'app.make_trait_relations_bidirectional_subscriber' => 'getApp_MakeTraitRelationsBidirectionalSubscriberService',
            'app.menu.factory_extension.linked_entity' => 'getApp_Menu_FactoryExtension_LinkedEntityService',
            'app.menu.matcher_voter.subroute' => 'getApp_Menu_MatcherVoter_SubrouteService',
            'app.menu.provider.gsk' => 'getApp_Menu_Provider_GskService',
            'app.mobile.embeddable.gallery' => 'getApp_Mobile_Embeddable_GalleryService',
            'app.mobile.embedder' => 'getApp_Mobile_EmbedderService',
            'app.mobile.routing_loader.posts_list' => 'getApp_Mobile_RoutingLoader_PostsListService',
            'app.mobile.twig.embedder' => 'getApp_Mobile_Twig_EmbedderService',
            'app.post_view.kernel_listener' => 'getApp_PostView_KernelListenerService',
            'app.preview.hash_generator' => 'getApp_Preview_HashGeneratorService',
            'app.publication_catalogue' => 'getApp_PublicationCatalogueService',
            'app.recent_page_manager' => 'getApp_RecentPageManagerService',
            'app.redirect.kernel_listener' => 'getApp_Redirect_KernelListenerService',
            'app.report_builder' => 'getApp_ReportBuilderService',
            'app.request.kernel_listener' => 'getApp_Request_KernelListenerService',
            'app.response.kernel_listener.text_block_replace_listerner' => 'getApp_Response_KernelListener_TextBlockReplaceListernerService',
            'app.routing_loader.posts_list' => 'getApp_RoutingLoader_PostsListService',
            'app.routing_loader.subordinate' => 'getApp_RoutingLoader_SubordinateService',
            'app.search.base' => 'getApp_Search_BaseService',
            'app.search.construction_object' => 'getApp_Search_ConstructionObjectService',
            'app.search.metro_stations' => 'getApp_Search_MetroStationsService',
            'app.search.suggester' => 'getApp_Search_SuggesterService',
            'app.security.authentucation_logger' => 'getApp_Security_AuthentucationLoggerService',
            'app.serializer.listener.construction_object' => 'getApp_Serializer_Listener_ConstructionObjectService',
            'app.sitemap_listener' => 'getApp_SitemapListenerService',
            'app.sortconverter' => 'getApp_SortconverterService',
            'app.validator.newsletter_post_collection' => 'getApp_Validator_NewsletterPostCollectionService',
            'app.validator.on_main_page' => 'getApp_Validator_OnMainPageService',
            'appbundle\\admin\\newsletter\\postssincepreviousnewsletterprovider' => 'getAppbundle_Admin_Newsletter_PostssincepreviousnewsletterproviderService',
            'appbundle\\eventsubscriber\\textblockusagedoctrinesubscriber' => 'getAppbundle_Eventsubscriber_TextblockusagedoctrinesubscriberService',
            'appbundle\\form\\extension\\yandexcaptcha' => 'getAppbundle_Form_Extension_YandexcaptchaService',
            'appbundle\\service\\textblockservice' => 'getAppbundle_Service_TextblockserviceService',
            'assetic.asset_factory' => 'getAssetic_AssetFactoryService',
            'assetic.asset_manager' => 'getAssetic_AssetManagerService',
            'assetic.filter.cssrewrite' => 'getAssetic_Filter_CssrewriteService',
            'assetic.filter.lessphp' => 'getAssetic_Filter_LessphpService',
            'assetic.filter_manager' => 'getAssetic_FilterManagerService',
            'assets._version__default' => 'getAssets_VersionDefaultService',
            'assets.context' => 'getAssets_ContextService',
            'assets.packages' => 'getAssets_PackagesService',
            'audit_reader' => 'getAuditReaderService',
            'banner_announcements_dk' => 'getBannerAnnouncementsDkService',
            'cache_clearer' => 'getCacheClearerService',
            'cache_warmer' => 'getCacheWarmerService',
            'category_repository' => 'getCategoryRepositoryService',
            'cmf_routing.route_type_form_type' => 'getCmfRouting_RouteTypeFormTypeService',
            'cmf_routing.router' => 'getCmfRouting_RouterService',
            'construction_list' => 'getConstructionListService',
            'contact_person_list' => 'getContactPersonListService',
            'controller_name_converter' => 'getControllerNameConverterService',
            'crawler_detect' => 'getCrawlerDetectService',
            'debug.debug_handlers_listener' => 'getDebug_DebugHandlersListenerService',
            'debug.stopwatch' => 'getDebug_StopwatchService',
            'destruction_banner' => 'getDestructionBannerService',
            'doctrine' => 'getDoctrineService',
            'doctrine.dbal.connection_factory' => 'getDoctrine_Dbal_ConnectionFactoryService',
            'doctrine.dbal.default_connection' => 'getDoctrine_Dbal_DefaultConnectionService',
            'doctrine.orm.default_entity_listener_resolver' => 'getDoctrine_Orm_DefaultEntityListenerResolverService',
            'doctrine.orm.default_entity_manager' => 'getDoctrine_Orm_DefaultEntityManagerService',
            'doctrine.orm.default_listeners.attach_entity_listeners' => 'getDoctrine_Orm_DefaultListeners_AttachEntityListenersService',
            'doctrine.orm.default_manager_configurator' => 'getDoctrine_Orm_DefaultManagerConfiguratorService',
            'doctrine.orm.validator.unique' => 'getDoctrine_Orm_Validator_UniqueService',
            'doctrine.orm.validator_initializer' => 'getDoctrine_Orm_ValidatorInitializerService',
            'doctrine_apc_cache' => 'getDoctrineApcCacheService',
            'doctrine_cache.providers.doctrine.orm.default_metadata_cache' => 'getDoctrineCache_Providers_Doctrine_Orm_DefaultMetadataCacheService',
            'doctrine_cache.providers.doctrine.orm.default_query_cache' => 'getDoctrineCache_Providers_Doctrine_Orm_DefaultQueryCacheService',
            'doctrine_cache.providers.doctrine.orm.default_result_cache' => 'getDoctrineCache_Providers_Doctrine_Orm_DefaultResultCacheService',
            'document_list' => 'getDocumentListService',
            'email_subscription_form_block' => 'getEmailSubscriptionFormBlockService',
            'embeddable_banner' => 'getEmbeddableBannerService',
            'embeddable_block' => 'getEmbeddableBlockService',
            'embeddable_faq_block' => 'getEmbeddableFaqBlockService',
            'embeddable_gallery' => 'getEmbeddableGalleryService',
            'embeddable_infographics' => 'getEmbeddableInfographicsService',
            'embeddable_quote' => 'getEmbeddableQuoteService',
            'embedder' => 'getEmbedderService',
            'event_dispatcher' => 'getEventDispatcherService',
            'file_locator' => 'getFileLocatorService',
            'filesystem' => 'getFilesystemService',
            'form.csrf_provider' => 'getForm_CsrfProviderService',
            'form.factory' => 'getForm_FactoryService',
            'form.registry' => 'getForm_RegistryService',
            'form.resolved_type_factory' => 'getForm_ResolvedTypeFactoryService',
            'form.type.birthday' => 'getForm_Type_BirthdayService',
            'form.type.button' => 'getForm_Type_ButtonService',
            'form.type.checkbox' => 'getForm_Type_CheckboxService',
            'form.type.choice' => 'getForm_Type_ChoiceService',
            'form.type.collection' => 'getForm_Type_CollectionService',
            'form.type.country' => 'getForm_Type_CountryService',
            'form.type.currency' => 'getForm_Type_CurrencyService',
            'form.type.date' => 'getForm_Type_DateService',
            'form.type.datetime' => 'getForm_Type_DatetimeService',
            'form.type.email' => 'getForm_Type_EmailService',
            'form.type.entity' => 'getForm_Type_EntityService',
            'form.type.file' => 'getForm_Type_FileService',
            'form.type.form' => 'getForm_Type_FormService',
            'form.type.hidden' => 'getForm_Type_HiddenService',
            'form.type.integer' => 'getForm_Type_IntegerService',
            'form.type.language' => 'getForm_Type_LanguageService',
            'form.type.locale' => 'getForm_Type_LocaleService',
            'form.type.money' => 'getForm_Type_MoneyService',
            'form.type.number' => 'getForm_Type_NumberService',
            'form.type.password' => 'getForm_Type_PasswordService',
            'form.type.percent' => 'getForm_Type_PercentService',
            'form.type.radio' => 'getForm_Type_RadioService',
            'form.type.repeated' => 'getForm_Type_RepeatedService',
            'form.type.reset' => 'getForm_Type_ResetService',
            'form.type.search' => 'getForm_Type_SearchService',
            'form.type.submit' => 'getForm_Type_SubmitService',
            'form.type.text' => 'getForm_Type_TextService',
            'form.type.textarea' => 'getForm_Type_TextareaService',
            'form.type.time' => 'getForm_Type_TimeService',
            'form.type.timezone' => 'getForm_Type_TimezoneService',
            'form.type.url' => 'getForm_Type_UrlService',
            'form.type_extension.csrf' => 'getForm_TypeExtension_CsrfService',
            'form.type_extension.form.http_foundation' => 'getForm_TypeExtension_Form_HttpFoundationService',
            'form.type_extension.form.validator' => 'getForm_TypeExtension_Form_ValidatorService',
            'form.type_extension.repeated.validator' => 'getForm_TypeExtension_Repeated_ValidatorService',
            'form.type_extension.submit.validator' => 'getForm_TypeExtension_Submit_ValidatorService',
            'form.type_guesser.doctrine' => 'getForm_TypeGuesser_DoctrineService',
            'form.type_guesser.validator' => 'getForm_TypeGuesser_ValidatorService',
            'fos_elastica.alias_processor' => 'getFosElastica_AliasProcessorService',
            'fos_elastica.client.default' => 'getFosElastica_Client_DefaultService',
            'fos_elastica.config_manager' => 'getFosElastica_ConfigManagerService',
            'fos_elastica.data_collector' => 'getFosElastica_DataCollectorService',
            'fos_elastica.elastica_to_model_transformer.app.administrative_unit' => 'getFosElastica_ElasticaToModelTransformer_App_AdministrativeUnitService',
            'fos_elastica.elastica_to_model_transformer.app.construction' => 'getFosElastica_ElasticaToModelTransformer_App_ConstructionService',
            'fos_elastica.elastica_to_model_transformer.app.decision_document' => 'getFosElastica_ElasticaToModelTransformer_App_DecisionDocumentService',
            'fos_elastica.elastica_to_model_transformer.app.draft_document' => 'getFosElastica_ElasticaToModelTransformer_App_DraftDocumentService',
            'fos_elastica.elastica_to_model_transformer.app.gallery' => 'getFosElastica_ElasticaToModelTransformer_App_GalleryService',
            'fos_elastica.elastica_to_model_transformer.app.infographics' => 'getFosElastica_ElasticaToModelTransformer_App_InfographicsService',
            'fos_elastica.elastica_to_model_transformer.app.law_document' => 'getFosElastica_ElasticaToModelTransformer_App_LawDocumentService',
            'fos_elastica.elastica_to_model_transformer.app.metro' => 'getFosElastica_ElasticaToModelTransformer_App_MetroService',
            'fos_elastica.elastica_to_model_transformer.app.page' => 'getFosElastica_ElasticaToModelTransformer_App_PageService',
            'fos_elastica.elastica_to_model_transformer.app.post' => 'getFosElastica_ElasticaToModelTransformer_App_PostService',
            'fos_elastica.elastica_to_model_transformer.app.road' => 'getFosElastica_ElasticaToModelTransformer_App_RoadService',
            'fos_elastica.elastica_to_model_transformer.app.subordinate_publication' => 'getFosElastica_ElasticaToModelTransformer_App_SubordinatePublicationService',
            'fos_elastica.elastica_to_model_transformer.app.video' => 'getFosElastica_ElasticaToModelTransformer_App_VideoService',
            'fos_elastica.elastica_to_model_transformer.collection.app' => 'getFosElastica_ElasticaToModelTransformer_Collection_AppService',
            'fos_elastica.finder.app' => 'getFosElastica_Finder_AppService',
            'fos_elastica.finder.app.administrative_unit' => 'getFosElastica_Finder_App_AdministrativeUnitService',
            'fos_elastica.finder.app.construction' => 'getFosElastica_Finder_App_ConstructionService',
            'fos_elastica.finder.app.decision_document' => 'getFosElastica_Finder_App_DecisionDocumentService',
            'fos_elastica.finder.app.draft_document' => 'getFosElastica_Finder_App_DraftDocumentService',
            'fos_elastica.finder.app.gallery' => 'getFosElastica_Finder_App_GalleryService',
            'fos_elastica.finder.app.infographics' => 'getFosElastica_Finder_App_InfographicsService',
            'fos_elastica.finder.app.law_document' => 'getFosElastica_Finder_App_LawDocumentService',
            'fos_elastica.finder.app.metro' => 'getFosElastica_Finder_App_MetroService',
            'fos_elastica.finder.app.page' => 'getFosElastica_Finder_App_PageService',
            'fos_elastica.finder.app.post' => 'getFosElastica_Finder_App_PostService',
            'fos_elastica.finder.app.road' => 'getFosElastica_Finder_App_RoadService',
            'fos_elastica.finder.app.subordinate_publication' => 'getFosElastica_Finder_App_SubordinatePublicationService',
            'fos_elastica.finder.app.video' => 'getFosElastica_Finder_App_VideoService',
            'fos_elastica.index.app' => 'getFosElastica_Index_AppService',
            'fos_elastica.index.app.administrative_unit' => 'getFosElastica_Index_App_AdministrativeUnitService',
            'fos_elastica.index.app.construction' => 'getFosElastica_Index_App_ConstructionService',
            'fos_elastica.index.app.decision_document' => 'getFosElastica_Index_App_DecisionDocumentService',
            'fos_elastica.index.app.draft_document' => 'getFosElastica_Index_App_DraftDocumentService',
            'fos_elastica.index.app.gallery' => 'getFosElastica_Index_App_GalleryService',
            'fos_elastica.index.app.infographics' => 'getFosElastica_Index_App_InfographicsService',
            'fos_elastica.index.app.law_document' => 'getFosElastica_Index_App_LawDocumentService',
            'fos_elastica.index.app.metro' => 'getFosElastica_Index_App_MetroService',
            'fos_elastica.index.app.page' => 'getFosElastica_Index_App_PageService',
            'fos_elastica.index.app.post' => 'getFosElastica_Index_App_PostService',
            'fos_elastica.index.app.road' => 'getFosElastica_Index_App_RoadService',
            'fos_elastica.index.app.subordinate_publication' => 'getFosElastica_Index_App_SubordinatePublicationService',
            'fos_elastica.index.app.video' => 'getFosElastica_Index_App_VideoService',
            'fos_elastica.index_manager' => 'getFosElastica_IndexManagerService',
            'fos_elastica.indexable' => 'getFosElastica_IndexableService',
            'fos_elastica.logger' => 'getFosElastica_LoggerService',
            'fos_elastica.manager.orm' => 'getFosElastica_Manager_OrmService',
            'fos_elastica.mapping_builder' => 'getFosElastica_MappingBuilderService',
            'fos_elastica.object_persister.app.administrative_unit' => 'getFosElastica_ObjectPersister_App_AdministrativeUnitService',
            'fos_elastica.object_persister.app.construction' => 'getFosElastica_ObjectPersister_App_ConstructionService',
            'fos_elastica.object_persister.app.decision_document' => 'getFosElastica_ObjectPersister_App_DecisionDocumentService',
            'fos_elastica.object_persister.app.draft_document' => 'getFosElastica_ObjectPersister_App_DraftDocumentService',
            'fos_elastica.object_persister.app.gallery' => 'getFosElastica_ObjectPersister_App_GalleryService',
            'fos_elastica.object_persister.app.infographics' => 'getFosElastica_ObjectPersister_App_InfographicsService',
            'fos_elastica.object_persister.app.law_document' => 'getFosElastica_ObjectPersister_App_LawDocumentService',
            'fos_elastica.object_persister.app.metro' => 'getFosElastica_ObjectPersister_App_MetroService',
            'fos_elastica.object_persister.app.page' => 'getFosElastica_ObjectPersister_App_PageService',
            'fos_elastica.object_persister.app.post' => 'getFosElastica_ObjectPersister_App_PostService',
            'fos_elastica.object_persister.app.road' => 'getFosElastica_ObjectPersister_App_RoadService',
            'fos_elastica.object_persister.app.subordinate_publication' => 'getFosElastica_ObjectPersister_App_SubordinatePublicationService',
            'fos_elastica.object_persister.app.video' => 'getFosElastica_ObjectPersister_App_VideoService',
            'fos_elastica.paginator.subscriber' => 'getFosElastica_Paginator_SubscriberService',
            'fos_elastica.property_accessor' => 'getFosElastica_PropertyAccessorService',
            'fos_elastica.provider.app.administrative_unit' => 'getFosElastica_Provider_App_AdministrativeUnitService',
            'fos_elastica.provider.app.construction' => 'getFosElastica_Provider_App_ConstructionService',
            'fos_elastica.provider.app.decision_document' => 'getFosElastica_Provider_App_DecisionDocumentService',
            'fos_elastica.provider.app.draft_document' => 'getFosElastica_Provider_App_DraftDocumentService',
            'fos_elastica.provider.app.gallery' => 'getFosElastica_Provider_App_GalleryService',
            'fos_elastica.provider.app.infographics' => 'getFosElastica_Provider_App_InfographicsService',
            'fos_elastica.provider.app.law_document' => 'getFosElastica_Provider_App_LawDocumentService',
            'fos_elastica.provider.app.metro' => 'getFosElastica_Provider_App_MetroService',
            'fos_elastica.provider.app.page' => 'getFosElastica_Provider_App_PageService',
            'fos_elastica.provider.app.post' => 'getFosElastica_Provider_App_PostService',
            'fos_elastica.provider.app.road' => 'getFosElastica_Provider_App_RoadService',
            'fos_elastica.provider.app.subordinate_publication' => 'getFosElastica_Provider_App_SubordinatePublicationService',
            'fos_elastica.provider.app.video' => 'getFosElastica_Provider_App_VideoService',
            'fos_elastica.provider_registry' => 'getFosElastica_ProviderRegistryService',
            'fos_elastica.resetter' => 'getFosElastica_ResetterService',
            'fos_elastica.slice_fetcher.orm' => 'getFosElastica_SliceFetcher_OrmService',
            'fos_user.change_password.form' => 'getFosUser_ChangePassword_FormService',
            'fos_user.change_password.form.handler.default' => 'getFosUser_ChangePassword_Form_Handler_DefaultService',
            'fos_user.change_password.form.type' => 'getFosUser_ChangePassword_Form_TypeService',
            'fos_user.entity_manager' => 'getFosUser_EntityManagerService',
            'fos_user.group.form' => 'getFosUser_Group_FormService',
            'fos_user.group.form.handler' => 'getFosUser_Group_Form_HandlerService',
            'fos_user.group.form.type' => 'getFosUser_Group_Form_TypeService',
            'fos_user.group_manager' => 'getFosUser_GroupManagerService',
            'fos_user.mailer' => 'getFosUser_MailerService',
            'fos_user.profile.form' => 'getFosUser_Profile_FormService',
            'fos_user.profile.form.handler' => 'getFosUser_Profile_Form_HandlerService',
            'fos_user.profile.form.type' => 'getFosUser_Profile_Form_TypeService',
            'fos_user.registration.form' => 'getFosUser_Registration_FormService',
            'fos_user.registration.form.handler' => 'getFosUser_Registration_Form_HandlerService',
            'fos_user.registration.form.type' => 'getFosUser_Registration_Form_TypeService',
            'fos_user.resetting.form' => 'getFosUser_Resetting_FormService',
            'fos_user.resetting.form.handler' => 'getFosUser_Resetting_Form_HandlerService',
            'fos_user.resetting.form.type' => 'getFosUser_Resetting_Form_TypeService',
            'fos_user.security.interactive_login_listener' => 'getFosUser_Security_InteractiveLoginListenerService',
            'fos_user.security.login_manager' => 'getFosUser_Security_LoginManagerService',
            'fos_user.user_manager' => 'getFosUser_UserManagerService',
            'fos_user.username_form_type' => 'getFosUser_UsernameFormTypeService',
            'fos_user.util.email_canonicalizer' => 'getFosUser_Util_EmailCanonicalizerService',
            'fos_user.util.token_generator' => 'getFosUser_Util_TokenGeneratorService',
            'fos_user.util.user_manipulator' => 'getFosUser_Util_UserManipulatorService',
            'fragment.handler' => 'getFragment_HandlerService',
            'fragment.listener' => 'getFragment_ListenerService',
            'fragment.renderer.esi' => 'getFragment_Renderer_EsiService',
            'fragment.renderer.hinclude' => 'getFragment_Renderer_HincludeService',
            'fragment.renderer.inline' => 'getFragment_Renderer_InlineService',
            'fragment.renderer.ssi' => 'getFragment_Renderer_SsiService',
            'gallery_list' => 'getGalleryListService',
            'gallery_pick' => 'getGalleryPickService',
            'header_search_filters' => 'getHeaderSearchFiltersService',
            'homepage_news' => 'getHomepageNewsService',
            'hot_news_block' => 'getHotNewsBlockService',
            'http_kernel' => 'getHttpKernelService',
            'import\\helper\\fileloader' => 'getImport_Helper_FileloaderService',
            'import\\helper\\mediabuilder' => 'getImport_Helper_MediabuilderService',
            'infographics_list' => 'getInfographicsListService',
            'infographics_picks' => 'getInfographicsPicksService',
            'ivory_ck_editor.config_manager' => 'getIvoryCkEditor_ConfigManagerService',
            'ivory_ck_editor.form.type' => 'getIvoryCkEditor_Form_TypeService',
            'ivory_ck_editor.plugin_manager' => 'getIvoryCkEditor_PluginManagerService',
            'ivory_ck_editor.styles_set_manager' => 'getIvoryCkEditor_StylesSetManagerService',
            'ivory_ck_editor.template_manager' => 'getIvoryCkEditor_TemplateManagerService',
            'ivory_ck_editor.templating.helper' => 'getIvoryCkEditor_Templating_HelperService',
            'ivory_ck_editor.twig_extension' => 'getIvoryCkEditor_TwigExtensionService',
            'jms_serializer' => 'getJmsSerializerService',
            'jms_serializer.array_collection_handler' => 'getJmsSerializer_ArrayCollectionHandlerService',
            'jms_serializer.constraint_violation_handler' => 'getJmsSerializer_ConstraintViolationHandlerService',
            'jms_serializer.datetime_handler' => 'getJmsSerializer_DatetimeHandlerService',
            'jms_serializer.doctrine_proxy_subscriber' => 'getJmsSerializer_DoctrineProxySubscriberService',
            'jms_serializer.form_error_handler' => 'getJmsSerializer_FormErrorHandlerService',
            'jms_serializer.handler_registry' => 'getJmsSerializer_HandlerRegistryService',
            'jms_serializer.json_deserialization_visitor' => 'getJmsSerializer_JsonDeserializationVisitorService',
            'jms_serializer.json_serialization_visitor' => 'getJmsSerializer_JsonSerializationVisitorService',
            'jms_serializer.metadata_driver' => 'getJmsSerializer_MetadataDriverService',
            'jms_serializer.metadata_factory' => 'getJmsSerializer_MetadataFactoryService',
            'jms_serializer.naming_strategy' => 'getJmsSerializer_NamingStrategyService',
            'jms_serializer.object_constructor' => 'getJmsSerializer_ObjectConstructorService',
            'jms_serializer.php_collection_handler' => 'getJmsSerializer_PhpCollectionHandlerService',
            'jms_serializer.templating.helper.serializer' => 'getJmsSerializer_Templating_Helper_SerializerService',
            'jms_serializer.unserialize_object_constructor' => 'getJmsSerializer_UnserializeObjectConstructorService',
            'jms_serializer.xml_deserialization_visitor' => 'getJmsSerializer_XmlDeserializationVisitorService',
            'jms_serializer.xml_serialization_visitor' => 'getJmsSerializer_XmlSerializationVisitorService',
            'jms_serializer.yaml_serialization_visitor' => 'getJmsSerializer_YamlSerializationVisitorService',
            'kernel' => 'getKernelService',
            'knp_menu.factory' => 'getKnpMenu_FactoryService',
            'knp_menu.helper' => 'getKnpMenu_HelperService',
            'knp_menu.listener.voters' => 'getKnpMenu_Listener_VotersService',
            'knp_menu.matcher' => 'getKnpMenu_MatcherService',
            'knp_menu.menu_provider' => 'getKnpMenu_MenuProviderService',
            'knp_menu.renderer.list' => 'getKnpMenu_Renderer_ListService',
            'knp_menu.renderer.twig' => 'getKnpMenu_Renderer_TwigService',
            'knp_menu.renderer_provider' => 'getKnpMenu_RendererProviderService',
            'knp_menu.voter.router' => 'getKnpMenu_Voter_RouterService',
            'last_posts' => 'getLastPostsService',
            'liip_imagine' => 'getLiipImagineService',
            'liip_imagine.binary.loader.default' => 'getLiipImagine_Binary_Loader_DefaultService',
            'liip_imagine.binary.loader.prototype.filesystem' => 'getLiipImagine_Binary_Loader_Prototype_FilesystemService',
            'liip_imagine.binary.loader.prototype.stream' => 'getLiipImagine_Binary_Loader_Prototype_StreamService',
            'liip_imagine.binary.loader.web_root' => 'getLiipImagine_Binary_Loader_WebRootService',
            'liip_imagine.binary.mime_type_guesser' => 'getLiipImagine_Binary_MimeTypeGuesserService',
            'liip_imagine.cache.manager' => 'getLiipImagine_Cache_ManagerService',
            'liip_imagine.cache.resolver.default' => 'getLiipImagine_Cache_Resolver_DefaultService',
            'liip_imagine.cache.resolver.no_cache_web_path' => 'getLiipImagine_Cache_Resolver_NoCacheWebPathService',
            'liip_imagine.cache.signer' => 'getLiipImagine_Cache_SignerService',
            'liip_imagine.controller' => 'getLiipImagine_ControllerService',
            'liip_imagine.data.manager' => 'getLiipImagine_Data_ManagerService',
            'liip_imagine.extension_guesser' => 'getLiipImagine_ExtensionGuesserService',
            'liip_imagine.filter.configuration' => 'getLiipImagine_Filter_ConfigurationService',
            'liip_imagine.filter.loader.auto_rotate' => 'getLiipImagine_Filter_Loader_AutoRotateService',
            'liip_imagine.filter.loader.background' => 'getLiipImagine_Filter_Loader_BackgroundService',
            'liip_imagine.filter.loader.crop' => 'getLiipImagine_Filter_Loader_CropService',
            'liip_imagine.filter.loader.interlace' => 'getLiipImagine_Filter_Loader_InterlaceService',
            'liip_imagine.filter.loader.paste' => 'getLiipImagine_Filter_Loader_PasteService',
            'liip_imagine.filter.loader.relative_resize' => 'getLiipImagine_Filter_Loader_RelativeResizeService',
            'liip_imagine.filter.loader.resize' => 'getLiipImagine_Filter_Loader_ResizeService',
            'liip_imagine.filter.loader.rotate' => 'getLiipImagine_Filter_Loader_RotateService',
            'liip_imagine.filter.loader.strip' => 'getLiipImagine_Filter_Loader_StripService',
            'liip_imagine.filter.loader.thumbnail' => 'getLiipImagine_Filter_Loader_ThumbnailService',
            'liip_imagine.filter.loader.upscale' => 'getLiipImagine_Filter_Loader_UpscaleService',
            'liip_imagine.filter.loader.watermark' => 'getLiipImagine_Filter_Loader_WatermarkService',
            'liip_imagine.filter.manager' => 'getLiipImagine_Filter_ManagerService',
            'liip_imagine.filter.post_processor.jpegoptim' => 'getLiipImagine_Filter_PostProcessor_JpegoptimService',
            'liip_imagine.form.type.image' => 'getLiipImagine_Form_Type_ImageService',
            'liip_imagine.mime_type_guesser' => 'getLiipImagine_MimeTypeGuesserService',
            'liip_imagine.templating.helper' => 'getLiipImagine_Templating_HelperService',
            'locale_listener' => 'getLocaleListenerService',
            'logger' => 'getLoggerService',
            'markdown.parser' => 'getMarkdown_ParserService',
            'material_owner_link' => 'getMaterialOwnerLinkService',
            'metro_constructed_stations_block' => 'getMetroConstructedStationsBlockService',
            'metro_vitdeo_tour' => 'getMetroVitdeoTourService',
            'mobile_block_construction_list' => 'getMobileBlockConstructionListService',
            'mobile_block_post_list' => 'getMobileBlockPostListService',
            'monolog.handler.buffered' => 'getMonolog_Handler_BufferedService',
            'monolog.handler.grouped' => 'getMonolog_Handler_GroupedService',
            'monolog.handler.main' => 'getMonolog_Handler_MainService',
            'monolog.handler.main.not_found_strategy' => 'getMonolog_Handler_Main_NotFoundStrategyService',
            'monolog.handler.streamed' => 'getMonolog_Handler_StreamedService',
            'monolog.handler.swift' => 'getMonolog_Handler_SwiftService',
            'monolog.handler.swift.mail_prototype' => 'getMonolog_Handler_Swift_MailPrototypeService',
            'monolog.logger.assetic' => 'getMonolog_Logger_AsseticService',
            'monolog.logger.doctrine' => 'getMonolog_Logger_DoctrineService',
            'monolog.logger.elastica' => 'getMonolog_Logger_ElasticaService',
            'monolog.logger.php' => 'getMonolog_Logger_PhpService',
            'monolog.logger.request' => 'getMonolog_Logger_RequestService',
            'monolog.logger.router' => 'getMonolog_Logger_RouterService',
            'monolog.logger.security' => 'getMonolog_Logger_SecurityService',
            'monolog.logger.snc_redis' => 'getMonolog_Logger_SncRedisService',
            'monolog.logger.translation' => 'getMonolog_Logger_TranslationService',
            'more_like_this' => 'getMoreLikeThisService',
            'news_of_the_day' => 'getNewsOfTheDayService',
            'organization_list' => 'getOrganizationListService',
            'post_list' => 'getPostListService',
            'presta_sitemap.dumper_default' => 'getPrestaSitemap_DumperDefaultService',
            'presta_sitemap.generator_default' => 'getPrestaSitemap_GeneratorDefaultService',
            'property_accessor' => 'getPropertyAccessorService',
            'recaptcha\\recaptcha' => 'getRecaptcha_RecaptchaService',
            'recent_page' => 'getRecentPageService',
            'renovation_banner' => 'getRenovationBannerService',
            'repository.lock' => 'getRepository_LockService',
            'request' => 'getRequestService',
            'request_stack' => 'getRequestStackService',
            'response_listener' => 'getResponseListenerService',
            'road_construction_map_banner' => 'getRoadConstructionMapBannerService',
            'road_interchange_banner' => 'getRoadInterchangeBannerService',
            'router.default' => 'getRouter_DefaultService',
            'router.request_context' => 'getRouter_RequestContextService',
            'router_listener' => 'getRouterListenerService',
            'routing.loader' => 'getRouting_LoaderService',
            'rss_builder.mailru' => 'getRssBuilder_MailruService',
            'rss_builder.rss' => 'getRssBuilder_RssService',
            'rss_builder.wifi_rss' => 'getRssBuilder_WifiRssService',
            'rss_builder.world_is_small_rss' => 'getRssBuilder_WorldIsSmallRssService',
            'rss_builder.ya_geo_rss' => 'getRssBuilder_YaGeoRssService',
            'rss_builder.ya_zen_rss' => 'getRssBuilder_YaZenRssService',
            'rss_builder.yarss' => 'getRssBuilder_YarssService',
            'rubrics_list' => 'getRubricsListService',
            'security.access.decision_manager' => 'getSecurity_Access_DecisionManagerService',
            'security.access_listener' => 'getSecurity_AccessListenerService',
            'security.access_map' => 'getSecurity_AccessMapService',
            'security.authentication.manager' => 'getSecurity_Authentication_ManagerService',
            'security.authentication.session_strategy' => 'getSecurity_Authentication_SessionStrategyService',
            'security.authentication.trust_resolver' => 'getSecurity_Authentication_TrustResolverService',
            'security.authentication_utils' => 'getSecurity_AuthenticationUtilsService',
            'security.authorization_checker' => 'getSecurity_AuthorizationCheckerService',
            'security.channel_listener' => 'getSecurity_ChannelListenerService',
            'security.context' => 'getSecurity_ContextService',
            'security.context_listener.0' => 'getSecurity_ContextListener_0Service',
            'security.csrf.token_manager' => 'getSecurity_Csrf_TokenManagerService',
            'security.encoder_factory' => 'getSecurity_EncoderFactoryService',
            'security.firewall' => 'getSecurity_FirewallService',
            'security.firewall.map.context.admin' => 'getSecurity_Firewall_Map_Context_AdminService',
            'security.firewall.map.context.dev' => 'getSecurity_Firewall_Map_Context_DevService',
            'security.firewall.map.context.main' => 'getSecurity_Firewall_Map_Context_MainService',
            'security.http_utils' => 'getSecurity_HttpUtilsService',
            'security.logout_url_generator' => 'getSecurity_LogoutUrlGeneratorService',
            'security.password_encoder' => 'getSecurity_PasswordEncoderService',
            'security.rememberme.response_listener' => 'getSecurity_Rememberme_ResponseListenerService',
            'security.role_hierarchy' => 'getSecurity_RoleHierarchyService',
            'security.secure_random' => 'getSecurity_SecureRandomService',
            'security.token_storage' => 'getSecurity_TokenStorageService',
            'security.user_checker' => 'getSecurity_UserCheckerService',
            'security.validator.user_password' => 'getSecurity_Validator_UserPasswordService',
            'sensio_framework_extra.cache.listener' => 'getSensioFrameworkExtra_Cache_ListenerService',
            'sensio_framework_extra.controller.listener' => 'getSensioFrameworkExtra_Controller_ListenerService',
            'sensio_framework_extra.converter.datetime' => 'getSensioFrameworkExtra_Converter_DatetimeService',
            'sensio_framework_extra.converter.doctrine.orm' => 'getSensioFrameworkExtra_Converter_Doctrine_OrmService',
            'sensio_framework_extra.converter.listener' => 'getSensioFrameworkExtra_Converter_ListenerService',
            'sensio_framework_extra.converter.manager' => 'getSensioFrameworkExtra_Converter_ManagerService',
            'sensio_framework_extra.security.listener' => 'getSensioFrameworkExtra_Security_ListenerService',
            'sensio_framework_extra.view.guesser' => 'getSensioFrameworkExtra_View_GuesserService',
            'sensio_framework_extra.view.listener' => 'getSensioFrameworkExtra_View_ListenerService',
            'sentry.client' => 'getSentry_ClientService',
            'sentry.exception_listener' => 'getSentry_ExceptionListenerService',
            'service_banner' => 'getServiceBannerService',
            'service_container' => 'getServiceContainerService',
            'session' => 'getSessionService',
            'session.handler.memcached' => 'getSession_Handler_MemcachedService',
            'session.memcached' => 'getSession_MemcachedService',
            'session.save_listener' => 'getSession_SaveListenerService',
            'session.storage.filesystem' => 'getSession_Storage_FilesystemService',
            'session.storage.metadata_bag' => 'getSession_Storage_MetadataBagService',
            'session.storage.native' => 'getSession_Storage_NativeService',
            'session.storage.php_bridge' => 'getSession_Storage_PhpBridgeService',
            'session_listener' => 'getSessionListenerService',
            'set_private_response_listener' => 'getSetPrivateResponseListenerService',
            'simple_template' => 'getSimpleTemplateService',
            'simplethings_entityaudit.config' => 'getSimplethingsEntityaudit_ConfigService',
            'simplethings_entityaudit.create_schema_listener' => 'getSimplethingsEntityaudit_CreateSchemaListenerService',
            'simplethings_entityaudit.log_revisions_listener' => 'getSimplethingsEntityaudit_LogRevisionsListenerService',
            'simplethings_entityaudit.manager' => 'getSimplethingsEntityaudit_ManagerService',
            'simplethings_entityaudit.reader' => 'getSimplethingsEntityaudit_ReaderService',
            'simplethings_entityaudit.request.current_user_listener' => 'getSimplethingsEntityaudit_Request_CurrentUserListenerService',
            'snc_redis.api_cache' => 'getSncRedis_ApiCacheService',
            'snc_redis.default' => 'getSncRedis_DefaultService',
            'snc_redis.logger' => 'getSncRedis_LoggerService',
            'sonata.admin.audit.manager' => 'getSonata_Admin_Audit_ManagerService',
            'sonata.admin.audit.orm.reader' => 'getSonata_Admin_Audit_Orm_ReaderService',
            'sonata.admin.block.admin_list' => 'getSonata_Admin_Block_AdminListService',
            'sonata.admin.block.search_result' => 'getSonata_Admin_Block_SearchResultService',
            'sonata.admin.builder.filter.factory' => 'getSonata_Admin_Builder_Filter_FactoryService',
            'sonata.admin.builder.orm_datagrid' => 'getSonata_Admin_Builder_OrmDatagridService',
            'sonata.admin.builder.orm_form' => 'getSonata_Admin_Builder_OrmFormService',
            'sonata.admin.builder.orm_list' => 'getSonata_Admin_Builder_OrmListService',
            'sonata.admin.builder.orm_show' => 'getSonata_Admin_Builder_OrmShowService',
            'sonata.admin.controller.admin' => 'getSonata_Admin_Controller_AdminService',
            'sonata.admin.doctrine_orm.form.type.choice_field_mask' => 'getSonata_Admin_DoctrineOrm_Form_Type_ChoiceFieldMaskService',
            'sonata.admin.event.extension' => 'getSonata_Admin_Event_ExtensionService',
            'sonata.admin.exporter' => 'getSonata_Admin_ExporterService',
            'sonata.admin.form.extension.field' => 'getSonata_Admin_Form_Extension_FieldService',
            'sonata.admin.form.extension.field.mopa' => 'getSonata_Admin_Form_Extension_Field_MopaService',
            'sonata.admin.form.filter.type.choice' => 'getSonata_Admin_Form_Filter_Type_ChoiceService',
            'sonata.admin.form.filter.type.date' => 'getSonata_Admin_Form_Filter_Type_DateService',
            'sonata.admin.form.filter.type.daterange' => 'getSonata_Admin_Form_Filter_Type_DaterangeService',
            'sonata.admin.form.filter.type.datetime' => 'getSonata_Admin_Form_Filter_Type_DatetimeService',
            'sonata.admin.form.filter.type.datetime_range' => 'getSonata_Admin_Form_Filter_Type_DatetimeRangeService',
            'sonata.admin.form.filter.type.default' => 'getSonata_Admin_Form_Filter_Type_DefaultService',
            'sonata.admin.form.filter.type.number' => 'getSonata_Admin_Form_Filter_Type_NumberService',
            'sonata.admin.form.type.admin' => 'getSonata_Admin_Form_Type_AdminService',
            'sonata.admin.form.type.collection' => 'getSonata_Admin_Form_Type_CollectionService',
            'sonata.admin.form.type.model_autocomplete' => 'getSonata_Admin_Form_Type_ModelAutocompleteService',
            'sonata.admin.form.type.model_choice' => 'getSonata_Admin_Form_Type_ModelChoiceService',
            'sonata.admin.form.type.model_hidden' => 'getSonata_Admin_Form_Type_ModelHiddenService',
            'sonata.admin.form.type.model_list' => 'getSonata_Admin_Form_Type_ModelListService',
            'sonata.admin.form.type.model_reference' => 'getSonata_Admin_Form_Type_ModelReferenceService',
            'sonata.admin.guesser.orm_datagrid' => 'getSonata_Admin_Guesser_OrmDatagridService',
            'sonata.admin.guesser.orm_datagrid_chain' => 'getSonata_Admin_Guesser_OrmDatagridChainService',
            'sonata.admin.guesser.orm_list' => 'getSonata_Admin_Guesser_OrmListService',
            'sonata.admin.guesser.orm_list_chain' => 'getSonata_Admin_Guesser_OrmListChainService',
            'sonata.admin.guesser.orm_show' => 'getSonata_Admin_Guesser_OrmShowService',
            'sonata.admin.guesser.orm_show_chain' => 'getSonata_Admin_Guesser_OrmShowChainService',
            'sonata.admin.helper' => 'getSonata_Admin_HelperService',
            'sonata.admin.label.strategy.bc' => 'getSonata_Admin_Label_Strategy_BcService',
            'sonata.admin.label.strategy.form_component' => 'getSonata_Admin_Label_Strategy_FormComponentService',
            'sonata.admin.label.strategy.native' => 'getSonata_Admin_Label_Strategy_NativeService',
            'sonata.admin.label.strategy.noop' => 'getSonata_Admin_Label_Strategy_NoopService',
            'sonata.admin.label.strategy.underscore' => 'getSonata_Admin_Label_Strategy_UnderscoreService',
            'sonata.admin.manager.orm' => 'getSonata_Admin_Manager_OrmService',
            'sonata.admin.manipulator.acl.admin' => 'getSonata_Admin_Manipulator_Acl_AdminService',
            'sonata.admin.manipulator.acl.object.orm' => 'getSonata_Admin_Manipulator_Acl_Object_OrmService',
            'sonata.admin.object.manipulator.acl.admin' => 'getSonata_Admin_Object_Manipulator_Acl_AdminService',
            'sonata.admin.orm.filter.type.boolean' => 'getSonata_Admin_Orm_Filter_Type_BooleanService',
            'sonata.admin.orm.filter.type.callback' => 'getSonata_Admin_Orm_Filter_Type_CallbackService',
            'sonata.admin.orm.filter.type.choice' => 'getSonata_Admin_Orm_Filter_Type_ChoiceService',
            'sonata.admin.orm.filter.type.class' => 'getSonata_Admin_Orm_Filter_Type_ClassService',
            'sonata.admin.orm.filter.type.date' => 'getSonata_Admin_Orm_Filter_Type_DateService',
            'sonata.admin.orm.filter.type.date_range' => 'getSonata_Admin_Orm_Filter_Type_DateRangeService',
            'sonata.admin.orm.filter.type.datetime' => 'getSonata_Admin_Orm_Filter_Type_DatetimeService',
            'sonata.admin.orm.filter.type.datetime_range' => 'getSonata_Admin_Orm_Filter_Type_DatetimeRangeService',
            'sonata.admin.orm.filter.type.model' => 'getSonata_Admin_Orm_Filter_Type_ModelService',
            'sonata.admin.orm.filter.type.number' => 'getSonata_Admin_Orm_Filter_Type_NumberService',
            'sonata.admin.orm.filter.type.string' => 'getSonata_Admin_Orm_Filter_Type_StringService',
            'sonata.admin.orm.filter.type.time' => 'getSonata_Admin_Orm_Filter_Type_TimeService',
            'sonata.admin.pool' => 'getSonata_Admin_PoolService',
            'sonata.admin.route.cache' => 'getSonata_Admin_Route_CacheService',
            'sonata.admin.route.cache_warmup' => 'getSonata_Admin_Route_CacheWarmupService',
            'sonata.admin.route.default_generator' => 'getSonata_Admin_Route_DefaultGeneratorService',
            'sonata.admin.route.path_info' => 'getSonata_Admin_Route_PathInfoService',
            'sonata.admin.route.query_string' => 'getSonata_Admin_Route_QueryStringService',
            'sonata.admin.route_loader' => 'getSonata_Admin_RouteLoaderService',
            'sonata.admin.search.handler' => 'getSonata_Admin_Search_HandlerService',
            'sonata.admin.security.handler' => 'getSonata_Admin_Security_HandlerService',
            'sonata.admin.twig.extension' => 'getSonata_Admin_Twig_ExtensionService',
            'sonata.admin.validator.inline' => 'getSonata_Admin_Validator_InlineService',
            'sonata.admin_doctrine_orm.block.audit' => 'getSonata_AdminDoctrineOrm_Block_AuditService',
            'sonata.block.cache.handler.default' => 'getSonata_Block_Cache_Handler_DefaultService',
            'sonata.block.cache.handler.noop' => 'getSonata_Block_Cache_Handler_NoopService',
            'sonata.block.context_manager.default' => 'getSonata_Block_ContextManager_DefaultService',
            'sonata.block.exception.filter.debug_only' => 'getSonata_Block_Exception_Filter_DebugOnlyService',
            'sonata.block.exception.filter.ignore_block_exception' => 'getSonata_Block_Exception_Filter_IgnoreBlockExceptionService',
            'sonata.block.exception.filter.keep_all' => 'getSonata_Block_Exception_Filter_KeepAllService',
            'sonata.block.exception.filter.keep_none' => 'getSonata_Block_Exception_Filter_KeepNoneService',
            'sonata.block.exception.renderer.inline' => 'getSonata_Block_Exception_Renderer_InlineService',
            'sonata.block.exception.renderer.inline_debug' => 'getSonata_Block_Exception_Renderer_InlineDebugService',
            'sonata.block.exception.renderer.throw' => 'getSonata_Block_Exception_Renderer_ThrowService',
            'sonata.block.exception.strategy.manager' => 'getSonata_Block_Exception_Strategy_ManagerService',
            'sonata.block.form.type.block' => 'getSonata_Block_Form_Type_BlockService',
            'sonata.block.form.type.container_template' => 'getSonata_Block_Form_Type_ContainerTemplateService',
            'sonata.block.loader.chain' => 'getSonata_Block_Loader_ChainService',
            'sonata.block.loader.service' => 'getSonata_Block_Loader_ServiceService',
            'sonata.block.manager' => 'getSonata_Block_ManagerService',
            'sonata.block.renderer.default' => 'getSonata_Block_Renderer_DefaultService',
            'sonata.block.service.container' => 'getSonata_Block_Service_ContainerService',
            'sonata.block.service.empty' => 'getSonata_Block_Service_EmptyService',
            'sonata.block.service.menu' => 'getSonata_Block_Service_MenuService',
            'sonata.block.service.rss' => 'getSonata_Block_Service_RssService',
            'sonata.block.service.template' => 'getSonata_Block_Service_TemplateService',
            'sonata.block.service.text' => 'getSonata_Block_Service_TextService',
            'sonata.block.templating.helper' => 'getSonata_Block_Templating_HelperService',
            'sonata.block.twig.global' => 'getSonata_Block_Twig_GlobalService',
            'sonata.cache.invalidation.simple' => 'getSonata_Cache_Invalidation_SimpleService',
            'sonata.cache.manager' => 'getSonata_Cache_ManagerService',
            'sonata.cache.memcached' => 'getSonata_Cache_MemcachedService',
            'sonata.cache.model_identifier' => 'getSonata_Cache_ModelIdentifierService',
            'sonata.cache.noop' => 'getSonata_Cache_NoopService',
            'sonata.cache.orm.event_subscriber' => 'getSonata_Cache_Orm_EventSubscriberService',
            'sonata.cache.orm.event_subscriber.default' => 'getSonata_Cache_Orm_EventSubscriber_DefaultService',
            'sonata.cache.recorder' => 'getSonata_Cache_RecorderService',
            'sonata.core.date.moment_format_converter' => 'getSonata_Core_Date_MomentFormatConverterService',
            'sonata.core.flashmessage.manager' => 'getSonata_Core_Flashmessage_ManagerService',
            'sonata.core.flashmessage.twig.extension' => 'getSonata_Core_Flashmessage_Twig_ExtensionService',
            'sonata.core.form.type.array' => 'getSonata_Core_Form_Type_ArrayService',
            'sonata.core.form.type.boolean' => 'getSonata_Core_Form_Type_BooleanService',
            'sonata.core.form.type.collection' => 'getSonata_Core_Form_Type_CollectionService',
            'sonata.core.form.type.color_selector' => 'getSonata_Core_Form_Type_ColorSelectorService',
            'sonata.core.form.type.date_picker' => 'getSonata_Core_Form_Type_DatePickerService',
            'sonata.core.form.type.date_range' => 'getSonata_Core_Form_Type_DateRangeService',
            'sonata.core.form.type.date_range_picker' => 'getSonata_Core_Form_Type_DateRangePickerService',
            'sonata.core.form.type.datetime_picker' => 'getSonata_Core_Form_Type_DatetimePickerService',
            'sonata.core.form.type.datetime_range' => 'getSonata_Core_Form_Type_DatetimeRangeService',
            'sonata.core.form.type.datetime_range_picker' => 'getSonata_Core_Form_Type_DatetimeRangePickerService',
            'sonata.core.form.type.equal' => 'getSonata_Core_Form_Type_EqualService',
            'sonata.core.form.type.translatable_choice' => 'getSonata_Core_Form_Type_TranslatableChoiceService',
            'sonata.core.model.adapter.chain' => 'getSonata_Core_Model_Adapter_ChainService',
            'sonata.core.slugify.cocur' => 'getSonata_Core_Slugify_CocurService',
            'sonata.core.slugify.native' => 'getSonata_Core_Slugify_NativeService',
            'sonata.core.twig.extension.text' => 'getSonata_Core_Twig_Extension_TextService',
            'sonata.core.twig.extension.wrapping' => 'getSonata_Core_Twig_Extension_WrappingService',
            'sonata.core.twig.status_extension' => 'getSonata_Core_Twig_StatusExtensionService',
            'sonata.core.twig.template_extension' => 'getSonata_Core_Twig_TemplateExtensionService',
            'sonata.core.validator.inline' => 'getSonata_Core_Validator_InlineService',
            'sonata.easy_extends.doctrine.mapper' => 'getSonata_EasyExtends_Doctrine_MapperService',
            'sonata.easy_extends.generator.bundle' => 'getSonata_EasyExtends_Generator_BundleService',
            'sonata.easy_extends.generator.odm' => 'getSonata_EasyExtends_Generator_OdmService',
            'sonata.easy_extends.generator.orm' => 'getSonata_EasyExtends_Generator_OrmService',
            'sonata.easy_extends.generator.phpcr' => 'getSonata_EasyExtends_Generator_PhpcrService',
            'sonata.easy_extends.generator.serializer' => 'getSonata_EasyExtends_Generator_SerializerService',
            'sonata.formatter.block.formatter' => 'getSonata_Formatter_Block_FormatterService',
            'sonata.formatter.ckeditor.extension' => 'getSonata_Formatter_Ckeditor_ExtensionService',
            'sonata.formatter.form.type.selector' => 'getSonata_Formatter_Form_Type_SelectorService',
            'sonata.formatter.pool' => 'getSonata_Formatter_PoolService',
            'sonata.formatter.text.markdown' => 'getSonata_Formatter_Text_MarkdownService',
            'sonata.formatter.text.raw' => 'getSonata_Formatter_Text_RawService',
            'sonata.formatter.text.text' => 'getSonata_Formatter_Text_TextService',
            'sonata.formatter.text.twigengine' => 'getSonata_Formatter_Text_TwigengineService',
            'sonata.formatter.twig.control_flow' => 'getSonata_Formatter_Twig_ControlFlowService',
            'sonata.formatter.twig.gist' => 'getSonata_Formatter_Twig_GistService',
            'sonata.formatter.validator.formatter' => 'getSonata_Formatter_Validator_FormatterService',
            'sonata.intl.locale_detector.request' => 'getSonata_Intl_LocaleDetector_RequestService',
            'sonata.intl.templating.helper.datetime' => 'getSonata_Intl_Templating_Helper_DatetimeService',
            'sonata.intl.templating.helper.locale' => 'getSonata_Intl_Templating_Helper_LocaleService',
            'sonata.intl.templating.helper.number' => 'getSonata_Intl_Templating_Helper_NumberService',
            'sonata.intl.timezone_detector.chain' => 'getSonata_Intl_TimezoneDetector_ChainService',
            'sonata.intl.timezone_detector.locale' => 'getSonata_Intl_TimezoneDetector_LocaleService',
            'sonata.intl.timezone_detector.user' => 'getSonata_Intl_TimezoneDetector_UserService',
            'sonata.media.adapter.filesystem.local' => 'getSonata_Media_Adapter_Filesystem_LocalService',
            'sonata.media.adapter.image.gd' => 'getSonata_Media_Adapter_Image_GdService',
            'sonata.media.adapter.image.gmagick' => 'getSonata_Media_Adapter_Image_GmagickService',
            'sonata.media.adapter.image.imagick' => 'getSonata_Media_Adapter_Image_ImagickService',
            'sonata.media.adapter.service.s3' => 'getSonata_Media_Adapter_Service_S3Service',
            'sonata.media.admin.gallery' => 'getSonata_Media_Admin_GalleryService',
            'sonata.media.admin.gallery_has_media' => 'getSonata_Media_Admin_GalleryHasMediaService',
            'sonata.media.admin.media' => 'getSonata_Media_Admin_MediaService',
            'sonata.media.admin.media.manager' => 'getSonata_Media_Admin_Media_ManagerService',
            'sonata.media.api.form.type.doctrine.media' => 'getSonata_Media_Api_Form_Type_Doctrine_MediaService',
            'sonata.media.api.form.type.gallery' => 'getSonata_Media_Api_Form_Type_GalleryService',
            'sonata.media.api.form.type.gallery_has_media' => 'getSonata_Media_Api_Form_Type_GalleryHasMediaService',
            'sonata.media.api.form.type.media' => 'getSonata_Media_Api_Form_Type_MediaService',
            'sonata.media.block.breadcrumb_index' => 'getSonata_Media_Block_BreadcrumbIndexService',
            'sonata.media.block.breadcrumb_view' => 'getSonata_Media_Block_BreadcrumbViewService',
            'sonata.media.block.breadcrumb_view_media' => 'getSonata_Media_Block_BreadcrumbViewMediaService',
            'sonata.media.block.feature_media' => 'getSonata_Media_Block_FeatureMediaService',
            'sonata.media.block.gallery' => 'getSonata_Media_Block_GalleryService',
            'sonata.media.block.media' => 'getSonata_Media_Block_MediaService',
            'sonata.media.buzz.browser' => 'getSonata_Media_Buzz_BrowserService',
            'sonata.media.buzz.connector.curl' => 'getSonata_Media_Buzz_Connector_CurlService',
            'sonata.media.buzz.connector.file_get_contents' => 'getSonata_Media_Buzz_Connector_FileGetContentsService',
            'sonata.media.cdn.server' => 'getSonata_Media_Cdn_ServerService',
            'sonata.media.doctrine.event_subscriber' => 'getSonata_Media_Doctrine_EventSubscriberService',
            'sonata.media.editable_format.manager' => 'getSonata_Media_EditableFormat_ManagerService',
            'sonata.media.filesystem.local' => 'getSonata_Media_Filesystem_LocalService',
            'sonata.media.form.type.media' => 'getSonata_Media_Form_Type_MediaService',
            'sonata.media.formatter.twig' => 'getSonata_Media_Formatter_TwigService',
            'sonata.media.generator.default' => 'getSonata_Media_Generator_DefaultService',
            'sonata.media.manager.gallery' => 'getSonata_Media_Manager_GalleryService',
            'sonata.media.manager.media' => 'getSonata_Media_Manager_MediaService',
            'sonata.media.metadata.amazon' => 'getSonata_Media_Metadata_AmazonService',
            'sonata.media.metadata.noop' => 'getSonata_Media_Metadata_NoopService',
            'sonata.media.metadata.proxy' => 'getSonata_Media_Metadata_ProxyService',
            'sonata.media.pool' => 'getSonata_Media_PoolService',
            'sonata.media.provider.dailymotion' => 'getSonata_Media_Provider_DailymotionService',
            'sonata.media.provider.external_image' => 'getSonata_Media_Provider_ExternalImageService',
            'sonata.media.provider.file' => 'getSonata_Media_Provider_FileService',
            'sonata.media.provider.image' => 'getSonata_Media_Provider_ImageService',
            'sonata.media.provider.video' => 'getSonata_Media_Provider_VideoService',
            'sonata.media.provider.vimeo' => 'getSonata_Media_Provider_VimeoService',
            'sonata.media.provider.youtube' => 'getSonata_Media_Provider_YoutubeService',
            'sonata.media.resizer.simple' => 'getSonata_Media_Resizer_SimpleService',
            'sonata.media.resizer.square' => 'getSonata_Media_Resizer_SquareService',
            'sonata.media.security.connected_strategy' => 'getSonata_Media_Security_ConnectedStrategyService',
            'sonata.media.security.forbidden_strategy' => 'getSonata_Media_Security_ForbiddenStrategyService',
            'sonata.media.security.public_strategy' => 'getSonata_Media_Security_PublicStrategyService',
            'sonata.media.security.superadmin_strategy' => 'getSonata_Media_Security_SuperadminStrategyService',
            'sonata.media.serializer.handler.gallery' => 'getSonata_Media_Serializer_Handler_GalleryService',
            'sonata.media.serializer.handler.media' => 'getSonata_Media_Serializer_Handler_MediaService',
            'sonata.media.thumbnail.format' => 'getSonata_Media_Thumbnail_FormatService',
            'sonata.media.thumbnail.liip_imagine' => 'getSonata_Media_Thumbnail_LiipImagineService',
            'sonata.media.twig.extension' => 'getSonata_Media_Twig_ExtensionService',
            'sonata.media.twig.global' => 'getSonata_Media_Twig_GlobalService',
            'sonata.media.validator.format' => 'getSonata_Media_Validator_FormatService',
            'sonata.seo.block.breadcrumb.homepage' => 'getSonata_Seo_Block_Breadcrumb_HomepageService',
            'sonata.seo.block.email.share_button' => 'getSonata_Seo_Block_Email_ShareButtonService',
            'sonata.seo.block.facebook.like_box' => 'getSonata_Seo_Block_Facebook_LikeBoxService',
            'sonata.seo.block.facebook.like_button' => 'getSonata_Seo_Block_Facebook_LikeButtonService',
            'sonata.seo.block.facebook.send_button' => 'getSonata_Seo_Block_Facebook_SendButtonService',
            'sonata.seo.block.facebook.share_button' => 'getSonata_Seo_Block_Facebook_ShareButtonService',
            'sonata.seo.block.pinterest.pin_button' => 'getSonata_Seo_Block_Pinterest_PinButtonService',
            'sonata.seo.block.twitter.embed' => 'getSonata_Seo_Block_Twitter_EmbedService',
            'sonata.seo.block.twitter.follow_button' => 'getSonata_Seo_Block_Twitter_FollowButtonService',
            'sonata.seo.block.twitter.hashtag_button' => 'getSonata_Seo_Block_Twitter_HashtagButtonService',
            'sonata.seo.block.twitter.mention_button' => 'getSonata_Seo_Block_Twitter_MentionButtonService',
            'sonata.seo.block.twitter.share_button' => 'getSonata_Seo_Block_Twitter_ShareButtonService',
            'sonata.seo.event.breadcrumb' => 'getSonata_Seo_Event_BreadcrumbService',
            'sonata.seo.page.default' => 'getSonata_Seo_Page_DefaultService',
            'sonata.seo.sitemap.manager' => 'getSonata_Seo_Sitemap_ManagerService',
            'sonata.user.admin.group' => 'getSonata_User_Admin_GroupService',
            'sonata.user.admin.user' => 'getSonata_User_Admin_UserService',
            'sonata.user.block.account' => 'getSonata_User_Block_AccountService',
            'sonata.user.block.breadcrumb_index' => 'getSonata_User_Block_BreadcrumbIndexService',
            'sonata.user.block.breadcrumb_profile' => 'getSonata_User_Block_BreadcrumbProfileService',
            'sonata.user.block.menu' => 'getSonata_User_Block_MenuService',
            'sonata.user.editable_role_builder' => 'getSonata_User_EditableRoleBuilderService',
            'sonata.user.form.gender_list' => 'getSonata_User_Form_GenderListService',
            'sonata.user.form.type.security_roles' => 'getSonata_User_Form_Type_SecurityRolesService',
            'sonata.user.manager.user' => 'getSonata_User_Manager_UserService',
            'sonata.user.profile.form' => 'getSonata_User_Profile_FormService',
            'sonata.user.profile.form.handler' => 'getSonata_User_Profile_Form_HandlerService',
            'sonata.user.profile.form.type' => 'getSonata_User_Profile_Form_TypeService',
            'sonata.user.profile.menu_builder' => 'getSonata_User_Profile_MenuBuilderService',
            'sonata.user.registration.form' => 'getSonata_User_Registration_FormService',
            'sonata.user.registration.form.handler' => 'getSonata_User_Registration_Form_HandlerService',
            'sonata.user.registration.form.type' => 'getSonata_User_Registration_Form_TypeService',
            'sonata.user.serializer.handler.user' => 'getSonata_User_Serializer_Handler_UserService',
            'sonata.user.twig.global' => 'getSonata_User_Twig_GlobalService',
            'stof_doctrine_extensions.event_listener.logger' => 'getStofDoctrineExtensions_EventListener_LoggerService',
            'stof_doctrine_extensions.listener.loggable' => 'getStofDoctrineExtensions_Listener_LoggableService',
            'stof_doctrine_extensions.uploadable.manager' => 'getStofDoctrineExtensions_Uploadable_ManagerService',
            'streamed_response_listener' => 'getStreamedResponseListenerService',
            'subordinate_direction' => 'getSubordinateDirectionService',
            'subordinate_header' => 'getSubordinateHeaderService',
            'subordinate_homepage_posts' => 'getSubordinateHomepagePostsService',
            'subordinate_media' => 'getSubordinateMediaService',
            'subordinate_publications_list' => 'getSubordinatePublicationsListService',
            'subordinate_smi' => 'getSubordinateSmiService',
            'swiftmailer.email_sender.listener' => 'getSwiftmailer_EmailSender_ListenerService',
            'swiftmailer.mailer.default' => 'getSwiftmailer_Mailer_DefaultService',
            'swiftmailer.mailer.default.spool' => 'getSwiftmailer_Mailer_Default_SpoolService',
            'swiftmailer.mailer.default.transport' => 'getSwiftmailer_Mailer_Default_TransportService',
            'swiftmailer.mailer.default.transport.eventdispatcher' => 'getSwiftmailer_Mailer_Default_Transport_EventdispatcherService',
            'swiftmailer.mailer.default.transport.real' => 'getSwiftmailer_Mailer_Default_Transport_RealService',
            'swiftmailer.plugin.impersonate' => 'getSwiftmailer_Plugin_ImpersonateService',
            'templating' => 'getTemplatingService',
            'templating.filename_parser' => 'getTemplating_FilenameParserService',
            'templating.helper.assets' => 'getTemplating_Helper_AssetsService',
            'templating.helper.logout_url' => 'getTemplating_Helper_LogoutUrlService',
            'templating.helper.router' => 'getTemplating_Helper_RouterService',
            'templating.helper.security' => 'getTemplating_Helper_SecurityService',
            'templating.loader' => 'getTemplating_LoaderService',
            'templating.locator' => 'getTemplating_LocatorService',
            'templating.name_parser' => 'getTemplating_NameParserService',
            'translation.dumper.csv' => 'getTranslation_Dumper_CsvService',
            'translation.dumper.ini' => 'getTranslation_Dumper_IniService',
            'translation.dumper.json' => 'getTranslation_Dumper_JsonService',
            'translation.dumper.mo' => 'getTranslation_Dumper_MoService',
            'translation.dumper.php' => 'getTranslation_Dumper_PhpService',
            'translation.dumper.po' => 'getTranslation_Dumper_PoService',
            'translation.dumper.qt' => 'getTranslation_Dumper_QtService',
            'translation.dumper.res' => 'getTranslation_Dumper_ResService',
            'translation.dumper.xliff' => 'getTranslation_Dumper_XliffService',
            'translation.dumper.yml' => 'getTranslation_Dumper_YmlService',
            'translation.extractor' => 'getTranslation_ExtractorService',
            'translation.extractor.php' => 'getTranslation_Extractor_PhpService',
            'translation.loader' => 'getTranslation_LoaderService',
            'translation.loader.csv' => 'getTranslation_Loader_CsvService',
            'translation.loader.dat' => 'getTranslation_Loader_DatService',
            'translation.loader.ini' => 'getTranslation_Loader_IniService',
            'translation.loader.json' => 'getTranslation_Loader_JsonService',
            'translation.loader.mo' => 'getTranslation_Loader_MoService',
            'translation.loader.php' => 'getTranslation_Loader_PhpService',
            'translation.loader.po' => 'getTranslation_Loader_PoService',
            'translation.loader.qt' => 'getTranslation_Loader_QtService',
            'translation.loader.res' => 'getTranslation_Loader_ResService',
            'translation.loader.xliff' => 'getTranslation_Loader_XliffService',
            'translation.loader.yml' => 'getTranslation_Loader_YmlService',
            'translation.writer' => 'getTranslation_WriterService',
            'translator.default' => 'getTranslator_DefaultService',
            'translator_listener' => 'getTranslatorListenerService',
            'twig' => 'getTwigService',
            'twig.block' => 'getTwig_BlockService',
            'twig.breadcrumbs' => 'getTwig_BreadcrumbsService',
            'twig.construction' => 'getTwig_ConstructionService',
            'twig.controller.exception' => 'getTwig_Controller_ExceptionService',
            'twig.controller.preview_error' => 'getTwig_Controller_PreviewErrorService',
            'twig.darken_hex' => 'getTwig_DarkenHexService',
            'twig.diff' => 'getTwig_DiffService',
            'twig.distance' => 'getTwig_DistanceService',
            'twig.embedder' => 'getTwig_EmbedderService',
            'twig.entity' => 'getTwig_EntityService',
            'twig.entity_manager_helper' => 'getTwig_EntityManagerHelperService',
            'twig.exception_listener' => 'getTwig_ExceptionListenerService',
            'twig.extension.sortbyfield' => 'getTwig_Extension_SortbyfieldService',
            'twig.html' => 'getTwig_HtmlService',
            'twig.image_generator' => 'getTwig_ImageGeneratorService',
            'twig.loader' => 'getTwig_LoaderService',
            'twig.media_helper' => 'getTwig_MediaHelperService',
            'twig.newsletter_post_text_crop' => 'getTwig_NewsletterPostTextCropService',
            'twig.profile' => 'getTwig_ProfileService',
            'twig.sonata_admin' => 'getTwig_SonataAdminService',
            'twig.translation.extractor' => 'getTwig_Translation_ExtractorService',
            'twig.url_hash_utm_fix' => 'getTwig_UrlHashUtmFixService',
            'uri_signer' => 'getUriSignerService',
            'validator' => 'getValidatorService',
            'validator.builder' => 'getValidator_BuilderService',
            'validator.email' => 'getValidator_EmailService',
            'validator.expression' => 'getValidator_ExpressionService',
            'validator.validator_factory' => 'getValidator_ValidatorFactoryService',
            'video_list' => 'getVideoListService',
            'video_picks' => 'getVideoPicksService',
        );
        $this->aliases = array(
            'database_connection' => 'doctrine.dbal.default_connection',
            'doctrine.orm.default_metadata_cache' => 'doctrine_cache.providers.doctrine.orm.default_metadata_cache',
            'doctrine.orm.default_query_cache' => 'doctrine_cache.providers.doctrine.orm.default_query_cache',
            'doctrine.orm.default_result_cache' => 'doctrine_cache.providers.doctrine.orm.default_result_cache',
            'doctrine.orm.entity_manager' => 'doctrine.orm.default_entity_manager',
            'fos_elastica.client' => 'fos_elastica.client.default',
            'fos_elastica.index' => 'fos_elastica.index.app',
            'fos_elastica.manager' => 'fos_elastica.manager.orm',
            'fos_user.change_password.form.handler' => 'fos_user.change_password.form.handler.default',
            'fos_user.util.username_canonicalizer' => 'fos_user.util.email_canonicalizer',
            'mailer' => 'swiftmailer.mailer.default',
            'presta_sitemap.dumper' => 'presta_sitemap.dumper_default',
            'presta_sitemap.generator' => 'presta_sitemap.generator_default',
            'router' => 'cmf_routing.router',
            'rss_builder.ramrss' => 'rss_builder.rss',
            'serializer' => 'jms_serializer',
            'session.handler' => 'session.handler.memcached',
            'session.storage' => 'session.storage.native',
            'snc_redis.api_cache_client' => 'snc_redis.api_cache',
            'snc_redis.default_client' => 'snc_redis.default',
            'sonata.block.cache.handler' => 'sonata.block.cache.handler.default',
            'sonata.block.context_manager' => 'sonata.block.context_manager.default',
            'sonata.block.renderer' => 'sonata.block.renderer.default',
            'sonata.intl.locale_detector' => 'sonata.intl.locale_detector.request',
            'sonata.intl.timezone_detector' => 'sonata.intl.timezone_detector.chain',
            'sonata.seo.page' => 'sonata.seo.page.default',
            'sonata.user.authentication.form' => 'fos_user.profile.form',
            'sonata.user.authentication.form_handler' => 'fos_user.profile.form.handler',
            'sonata.user.group_manager' => 'fos_user.group_manager',
            'sonata.user.user_manager' => 'fos_user.user_manager',
            'swiftmailer.mailer' => 'swiftmailer.mailer.default',
            'swiftmailer.spool' => 'swiftmailer.mailer.default.spool',
            'swiftmailer.transport' => 'swiftmailer.mailer.default.transport',
            'swiftmailer.transport.real' => 'swiftmailer.mailer.default.transport.real',
            'translator' => 'translator.default',
        );
    }
    public function compile()
    {
        throw new LogicException('You cannot compile a dumped frozen container.');
    }
    protected function getAdmin_ActionLogService()
    {
        $instance = new \AppBundle\Admin\ActionLogAdmin('admin.action_log', 'AppBundle\\Entity\\ActionLog', 'SonataAdminBundle:CRUD');
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Учет действий');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_AdministrativeAreaService()
    {
        $instance = new \AppBundle\Admin\AdministrativeAreaAdmin('admin.administrative_area', 'AppBundle\\Entity\\AdministrativeArea', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Административный округ');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_AdministrativeUnitService()
    {
        $instance = new \AppBundle\Admin\AdministrativeUnitAdmin('admin.administrative_unit', 'AppBundle\\Entity\\AdministrativeUnit', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Административная единица');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_AnnouncementService()
    {
        $instance = new \AppBundle\Admin\AnnouncementAdmin('admin.announcement', 'AppBundle\\Entity\\Announcement', 'AppBundle:Admin/AnnouncementAdminCRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Анонсы');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.block_cache_invalidation'));
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.publishing_period'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        $instance->addExtension($this->get('amg_admin.lock.admin_extension'));
        return $instance;
    }
    protected function getAdmin_ArticleRubricsService()
    {
        $instance = new \AppBundle\Admin\RubricsAdmin('admin.article_rubrics', 'AppBundle\\Entity\\Rubric', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Рубрики');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_ArticleSourceService()
    {
        $instance = new \AppBundle\Admin\ArticleSourceAdmin('admin.article_source', 'AppBundle\\Entity\\ArticleSource', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Ведомства');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_AuthorService()
    {
        $instance = new \AppBundle\Admin\AuthorAdmin('admin.author', 'AppBundle\\Entity\\Author', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Авторы');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_CategoryService()
    {
        $instance = new \AppBundle\Admin\CategoryAdmin('admin.category', 'AppBundle\\Entity\\Category', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Категории');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_CityDistrictService()
    {
        $instance = new \AppBundle\Admin\CityDistrictAdmin('admin.city_district', 'AppBundle\\Entity\\CityDistrict', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Район');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_CommentService()
    {
        $instance = new \AppBundle\Admin\CommentAdmin('admin.comment', 'Application\\FOS\\CommentBundle\\Entity\\Comment', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Комментарии');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_ConstructionService()
    {
        $a = $this->get('translator.default');
        $instance = new \AppBundle\Admin\ConstructionAdmin('admin.construction', 'AppBundle\\Entity\\Construction', 'AppBundle:Admin\\ConstructionCRUD', $a);
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($a);
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Объект строительства');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => ':Construction:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.api_cache_invalidation'));
        $instance->addExtension($this->get('admin.extension.menu_guard'));
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.draft'));
        $instance->addExtension($this->get('admin.extension.related_posts'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.panorama'));
        $instance->addExtension($this->get('app.admin.extension.teasing'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.mobile_contentful'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.extra_information'));
        $instance->addExtension($this->get('app.admin.extension.metadata'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        $instance->addExtension($this->get('amg_admin.lock.admin_extension'));
        return $instance;
    }
    protected function getAdmin_ConstructionFilterService()
    {
        $instance = new \AppBundle\Admin\ImportFiltersAdmin('admin.construction_filter', 'AppBundle\\Entity\\ImportFilter', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Фильтры импорта');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_ConstructionParameterService()
    {
        $instance = new \AppBundle\Admin\ConstructionParameterAdmin('admin.construction_parameter', 'AppBundle\\Entity\\ConstructionParameter', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Характеристики');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_ConstructionParameterValueService()
    {
        $instance = new \AppBundle\Admin\ConstructionParameterValueAdmin('admin.construction_parameter_value', 'AppBundle\\Entity\\ConstructionParameterValue', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Значения характеристик');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_ConstructionTypeService()
    {
        $instance = new \AppBundle\Admin\ConstructionTypeAdmin('admin.construction_type', 'AppBundle\\Entity\\ConstructionType', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Разделы');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_ContactPersonService()
    {
        $instance = new \AppBundle\Admin\ContactPersonAdmin('admin.contact_person', 'AppBundle\\Entity\\ContactPerson', 'AppBundle:Admin/Browsable');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Контакты');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.person_full_name'));
        $instance->addExtension($this->get('app.admin.extension.contact_info'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_DecisionDocumentService()
    {
        $instance = new \AppBundle\Admin\DecisionDocumentAdmin('admin.decision_document', 'AppBundle\\Entity\\DecisionDocument', 'AppBundle:Admin/BaseAdmin');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Решения об утверждении проектной документации');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('admin.extension.related_posts'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.publishing_period'));
        $instance->addExtension($this->get('app.admin.extension.owners'));
        $instance->addExtension($this->get('app.admin.extension.metadata'));
        $instance->addExtension($this->get('amg_tag.autoadmin.extension.tags'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_DestructionService()
    {
        $instance = new \AppBundle\Admin\DestructionAdmin('admin.destruction', 'AppBundle\\Entity\\Destruction', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Снос пятиэтажек');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_DocumentService()
    {
        $instance = new \AppBundle\Admin\DocumentBaseAdmin('admin.document', 'AppBundle\\Entity\\Document', 'AppBundle:Admin/BaseAdmin');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Документ');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('admin.extension.related_posts'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.publishing_period'));
        $instance->addExtension($this->get('app.admin.extension.owners'));
        $instance->addExtension($this->get('app.admin.extension.metadata'));
        $instance->addExtension($this->get('amg_tag.autoadmin.extension.tags'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_DocumentHasMediaService()
    {
        $instance = new \AppBundle\Admin\DocumentHasMediaAdmin('admin.document_has_media', 'AppBundle\\Entity\\DocumentHasMedia', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Файлы документов');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.file'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.position'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_DocumentRubricService()
    {
        $instance = new \AppBundle\Admin\DocumentRubricsAdmin('admin.document_rubric', 'AppBundle\\Entity\\DocumentRubric', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Рубрики');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_DraftService()
    {
        $instance = new \AppBundle\Admin\DraftAdmin('admin.draft', 'AppBundle\\Entity\\Draft', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Черновики');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_DraftDocumentService()
    {
        $instance = new \AppBundle\Admin\DraftDocumentAdmin('admin.draft_document', 'AppBundle\\Entity\\DraftDocument', 'AppBundle:Admin/BaseAdmin');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Проекты правовых нормативных актов');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('admin.extension.related_posts'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.publishing_period'));
        $instance->addExtension($this->get('app.admin.extension.owners'));
        $instance->addExtension($this->get('app.admin.extension.metadata'));
        $instance->addExtension($this->get('amg_tag.autoadmin.extension.tags'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_EditLockerService()
    {
        return $this->services['admin.edit_locker'] = new \Amg\Bundle\AdminBundle\Admin\EditLocker\EditLocker($this->get('security.context'), $this->get('repository.lock'));
    }
    protected function getAdmin_EmaiSubscriptionService()
    {
        $instance = new \AppBundle\Admin\EmailSubscriptionAdmin('admin.emai_subscription', 'AppBundle\\Entity\\EmailSubscription', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Подписчики');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_EmbeddedContent_BannerService()
    {
        $instance = new \AppBundle\Admin\EmbeddedContent\BannerAdmin('admin.embedded_content.banner', 'AppBundle\\Entity\\EmbeddedContent\\Banner', 'AppBundle:Admin\\EmbeddableContentAdmin');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Баннеры');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => ':EmbeddedContent/Banner:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        $instance->addExtension($this->get('amg_admin.lock.admin_extension'));
        return $instance;
    }
    protected function getAdmin_EmbeddedContent_FaqService()
    {
        $instance = new \AppBundle\Admin\EmbeddedContent\Faq\FaqBlockAdmin('admin.embedded_content.faq', 'AppBundle\\Entity\\EmbeddedContent\\Faq\\FaqBlock', 'AppBundle:Admin\\EmbeddableContentAdmin');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Блоки вопрос-ответ');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => ':EmbeddedContent/Faq:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('amg_tag.autoadmin.extension.tags'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        $instance->addExtension($this->get('amg_admin.lock.admin_extension'));
        return $instance;
    }
    protected function getAdmin_EmbeddedContent_QuoteService()
    {
        $instance = new \AppBundle\Admin\EmbeddedContent\QuoteAdmin('admin.embedded_content.quote', 'AppBundle\\Entity\\EmbeddedContent\\Quote', 'AppBundle:Admin\\EmbeddableContentAdmin');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Цитаты');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => ':EmbeddedContent/Quote:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        $instance->addExtension($this->get('amg_admin.lock.admin_extension'));
        return $instance;
    }
    protected function getAdmin_EmbeddedContent_TextBlockService()
    {
        $instance = new \AppBundle\Admin\EmbeddedContent\TextBlockAdmin('admin.embedded_content.text_block', 'AppBundle\\Entity\\EmbeddedContent\\TextBlock\\TextBlock', 'AppBundle:Admin\\EmbeddableContentAdmin');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Текстовые блоки');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => ':EmbeddedContent/Banner:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_ErrorReportService()
    {
        $instance = new \AppBundle\Admin\ErrorReportAdmin('admin.error_report', 'AppBundle\\Entity\\ErrorReport', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Отчеты об ошибках');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_Extension_HomepageGuardService()
    {
        return $this->services['admin.extension.homepage_guard'] = new \AppBundle\Admin\Extension\HomepageGuardExtension();
    }
    protected function getAdmin_Extension_MenuGuardService()
    {
        return $this->services['admin.extension.menu_guard'] = new \AppBundle\Admin\Extension\MenuGuardExtension();
    }
    protected function getAdmin_Extension_RelatedPostsService()
    {
        return $this->services['admin.extension.related_posts'] = new \AppBundle\Admin\Extension\RelatedExtension();
    }
    protected function getAdmin_ExtraInformationService()
    {
        $instance = new \AppBundle\Admin\ExtraInformationAdmin('admin.extra_information', 'AppBundle\\Entity\\ExtraInformation', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Дополнительная информация');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        $instance->addExtension($this->get('amg_admin.lock.admin_extension'));
        return $instance;
    }
    protected function getAdmin_Form_CommentStatusTypeService()
    {
        return $this->services['admin.form.comment_status_type'] = new \Sonata\CoreBundle\Form\Type\StatusType('Application\\FOS\\CommentBundle\\Entity\\Comment', 'getStateList', 'sonata_comment_status');
    }
    protected function getAdmin_GalleryService()
    {
        $instance = new \AppBundle\Admin\GalleryAdmin('admin.gallery', 'AppBundle\\Entity\\Gallery', 'AppBundle:Admin\\CKeditorGalleryAdmin');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('admin.media_collection_contractor'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Фотогалереи');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => ':Gallery:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('admin.extension.homepage_guard'));
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('admin.extension.related_posts'));
        $instance->addExtension($this->get('app.admin.extension.priority_position'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.teasing'));
        $instance->addExtension($this->get('app.admin.extension.feedable'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.publishing_period'));
        $instance->addExtension($this->get('app.admin.extension.rubrics'));
        $instance->addExtension($this->get('app.admin.extension.owners'));
        $instance->addExtension($this->get('app.admin.extension.metadata'));
        $instance->addExtension($this->get('amg_tag.autoadmin.extension.tags'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        $instance->addExtension($this->get('amg_admin.lock.admin_extension'));
        return $instance;
    }
    protected function getAdmin_GalleryMediaService()
    {
        $instance = new \AppBundle\Admin\GalleryMediaAdmin('admin.gallery_media', 'AppBundle\\Entity\\GalleryMedia', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Элемент галереи');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.teasing'));
        $instance->addExtension($this->get('app.admin.extension.position'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.metadata'));
        $instance->addExtension($this->get('amg_tag.autoadmin.extension.tags'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_GalleryNewsletterService()
    {
        $instance = new \AppBundle\Admin\Newsletter\GalleryNewsletterAdmin('admin.gallery_newsletter', 'AppBundle\\Entity\\NewsletterItem\\GalleryNewsletter', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('gallery');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_GalleryPicksService()
    {
        $instance = new \AppBundle\Admin\GalleryPicksAdmin('admin.gallery_picks', 'AppBundle\\Entity\\GalleryPicks', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Фото на главной');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_HightlightNewsletterService()
    {
        $instance = new \AppBundle\Admin\Newsletter\HighlightNewsletterAdmin('admin.hightlight_newsletter', 'AppBundle\\Entity\\NewsletterItem\\HighlightNewsletter', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Блоки');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_InfographicsService()
    {
        $instance = new \AppBundle\Admin\InfographicsAdmin('admin.infographics', 'AppBundle\\Entity\\Infographics', 'AppBundle:Admin\\CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Инфографика');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => ':Infographics:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('admin.extension.related_posts'));
        $instance->addExtension($this->get('app.admin.extension.priority_position'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.lead'));
        $instance->addExtension($this->get('app.admin.extension.teasing'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.feedable'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.publishing_period'));
        $instance->addExtension($this->get('app.admin.extension.author'));
        $instance->addExtension($this->get('app.admin.extension.source'));
        $instance->addExtension($this->get('app.admin.extension.rubrics'));
        $instance->addExtension($this->get('app.admin.extension.metadata'));
        $instance->addExtension($this->get('amg_tag.autoadmin.extension.tags'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        $instance->addExtension($this->get('amg_admin.lock.admin_extension'));
        return $instance;
    }
    protected function getAdmin_InfographoicsNewsletterService()
    {
        $instance = new \AppBundle\Admin\Newsletter\InfographicsNewsletterAdmin('admin.infographoics_newsletter', 'AppBundle\\Entity\\NewsletterItem\\InfographicsNewsletter', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('infographics');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_LawDocumentService()
    {
        $instance = new \AppBundle\Admin\LawDocumentAdmin('admin.law_document', 'AppBundle\\Entity\\LawDocument', 'AppBundle:Admin/BaseAdmin');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Законы указы постановления распоряжения');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('admin.extension.related_posts'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.publishing_period'));
        $instance->addExtension($this->get('app.admin.extension.rubrics'));
        $instance->addExtension($this->get('app.admin.extension.owners'));
        $instance->addExtension($this->get('app.admin.extension.metadata'));
        $instance->addExtension($this->get('amg_tag.autoadmin.extension.tags'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_MediaCategoryService()
    {
        $instance = new \Application\Sonata\MediaBundle\Admin\MediaCategoryAdmin('admin.media_category', 'AppBundle\\Entity\\MediaCategory', 'AmgPageBundle:Admin\\Page');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Категории');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_MediaCollectionContractorService()
    {
        return $this->services['admin.media_collection_contractor'] = new \AppBundle\Admin\Form\MediaCollectionContractor($this->get('form.factory'));
    }
    protected function getAdmin_MenuService()
    {
        $a = $this->get('sonata.admin.label.strategy.underscore');
        $b = $this->get('sonata.admin.manager.orm');
        $c = $this->get('sonata.admin.builder.orm_form');
        $d = $this->get('sonata.admin.builder.orm_show');
        $e = $this->get('sonata.admin.builder.orm_list');
        $f = $this->get('sonata.admin.builder.orm_datagrid');
        $g = $this->get('translator.default');
        $h = $this->get('sonata.admin.pool');
        $i = $this->get('sonata.admin.route.default_generator');
        $j = $this->get('validator');
        $k = $this->get('sonata.admin.security.handler');
        $l = $this->get('knp_menu.factory');
        $m = $this->get('sonata.admin.route.path_info');
        $n = $this->get('app.admin.extension.action_logger');
        $o = $this->get('sonata.admin.event.extension');
        $p = new \AppBundle\Admin\MenuNodesAdmin('admin.menu_nodes', 'AppBundle\\Entity\\MenuNode', 'AmgPageBundle:Admin\\Page');
        $p->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $p->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $p->setLabelTranslatorStrategy($a);
        $p->setManagerType('orm');
        $p->setModelManager($b);
        $p->setFormContractor($c);
        $p->setShowBuilder($d);
        $p->setListBuilder($e);
        $p->setDatagridBuilder($f);
        $p->setTranslator($g);
        $p->setConfigurationPool($h);
        $p->setRouteGenerator($i);
        $p->setValidator($j);
        $p->setSecurityHandler($k);
        $p->setMenuFactory($l);
        $p->setRouteBuilder($m);
        $p->setLabel('Меню');
        $p->setPersistFilters(false);
        $p->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $p->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $p->initialize();
        $p->addExtension($n);
        $p->addExtension($o);
        $instance = new \AppBundle\Admin\MenuAdmin('admin.menu', 'AppBundle\\Entity\\Menu', 'SonataAdminBundle:CRUD');
        $instance->addChild($p);
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($a);
        $instance->setManagerType('orm');
        $instance->setModelManager($b);
        $instance->setFormContractor($c);
        $instance->setShowBuilder($d);
        $instance->setListBuilder($e);
        $instance->setDatagridBuilder($f);
        $instance->setTranslator($g);
        $instance->setConfigurationPool($h);
        $instance->setRouteGenerator($i);
        $instance->setValidator($j);
        $instance->setSecurityHandler($k);
        $instance->setMenuFactory($l);
        $instance->setRouteBuilder($m);
        $instance->setLabel('Меню');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($n);
        $instance->addExtension($o);
        return $instance;
    }
    protected function getAdmin_MenuNodesService()
    {
        $instance = new \AppBundle\Admin\MenuNodesAdmin('admin.menu_nodes', 'AppBundle\\Entity\\MenuNode', 'AmgPageBundle:Admin\\Page');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Меню');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_MetroLineService()
    {
        $instance = new \AppBundle\Admin\MetroLineAdmin('admin.metro_line', 'AppBundle\\Entity\\MetroLine', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Линии метро');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.teasing'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.mobile_contentful'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.extra_information'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_MetroStationService()
    {
        $instance = new \AppBundle\Admin\MetroStationAdmin('admin.metro_station', 'AppBundle\\Entity\\MetroStation', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Станции метро');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => ':Metro:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.api_cache_invalidation'));
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.currently'));
        $instance->addExtension($this->get('app.admin.extension.panorama'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.teasing'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.mobile_contentful'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.extra_information'));
        $instance->addExtension($this->get('app.admin.extension.address'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_MetroStationImageService()
    {
        $instance = new \AppBundle\Admin\MetroStationImageAdmin('admin.metro_station_image', 'AppBundle\\Entity\\MetroStationImage', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Изображения станции метро');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.teasing'));
        $instance->addExtension($this->get('app.admin.extension.position'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.metadata'));
        $instance->addExtension($this->get('amg_tag.autoadmin.extension.tags'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_MetroTimelineYearService()
    {
        $instance = new \AppBundle\Admin\MetroTimelineYearAdmin('admin.metro_timeline_year', 'AppBundle\\Entity\\MetroTimelineYear', 'AppBundle:Admin\\MetroTimelineYearCRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Таймлайн метро');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'Admin/MetroTimelineYear/list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'Admin/MetroTimelineYear/edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.publishing_period'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_NewsletterService()
    {
        $instance = new \AppBundle\Admin\NewsletterAdmin('admin.newsletter', 'AppBundle\\Entity\\Newsletter', 'AppBundle:Admin/NewsletterCRUD', $this->get('appbundle\admin\newsletter\postssincepreviousnewsletterprovider'));
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('admin.media_collection_contractor'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Формирование');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => ':NewsletterAdmin/CRUD:edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_Newsletter_UnsubscribeReasonService()
    {
        $instance = new \AppBundle\Admin\UnsubscribeReasonAdmin('admin.newsletter.unsubscribe_reason', 'AppBundle\\Entity\\UnsubscribeReason', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Причины отказа');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_OrganizationService()
    {
        $instance = new \AppBundle\Admin\OrganizationAdmin('admin.organization', 'AppBundle\\Entity\\Organization', 'AppBundle:Admin/Browsable');
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Организации');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.contact_info'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_OrganizationDirectoryService()
    {
        $instance = new \AppBundle\Admin\OrganizationDirectoryAdmin('admin.organization_directory', 'AppBundle\\Entity\\OrganizationDirectory', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Справочники');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_OutgoingAgencyService()
    {
        $instance = new \AppBundle\Admin\OutgoingAgencyAdmin('admin.outgoing_agency', 'AppBundle\\Entity\\OutgoingAgency', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Исходящий орган');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_OwnerService()
    {
        $instance = new \AppBundle\Admin\OwnerAdmin('admin.owner', 'AppBundle\\Entity\\Owner', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Департаменты и комитеты');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_PersonService()
    {
        $instance = new \AppBundle\Admin\PersonAdmin('admin.person', 'AppBundle\\Entity\\Person', 'AppBundle:Admin/BaseAdmin');
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Персоны');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.person_full_name'));
        $instance->addExtension($this->get('app.admin.extension.priority_position'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.teasing'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.publishing_period'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_PostService()
    {
        $instance = new \AppBundle\Admin\PostAdmin('admin.post', 'AppBundle\\Entity\\Post', 'AppBundle:Admin\\PostCRUD');
        $instance->setCategoryRepository($this->get('category_repository'));
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Публикации');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => ':Post:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('admin.extension.menu_guard'));
        $instance->addExtension($this->get('admin.extension.homepage_guard'));
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.draft'));
        $instance->addExtension($this->get('admin.extension.related_posts'));
        $instance->addExtension($this->get('app.admin.extension.categorized'));
        $instance->addExtension($this->get('app.admin.extension.priority_position'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.attachments'));
        $instance->addExtension($this->get('app.admin.extension.'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.lead'));
        $instance->addExtension($this->get('app.admin.extension.teasing'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.mobile_contentful'));
        $instance->addExtension($this->get('app.admin.extension.feedable'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.publishing_period'));
        $instance->addExtension($this->get('app.admin.extension.author'));
        $instance->addExtension($this->get('app.admin.extension.source'));
        $instance->addExtension($this->get('app.admin.extension.rubrics'));
        $instance->addExtension($this->get('app.admin.extension.owners'));
        $instance->addExtension($this->get('app.admin.extension.metadata'));
        $instance->addExtension($this->get('app.admin.extension.address'));
        $instance->addExtension($this->get('amg_tag.autoadmin.extension.tags'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        $instance->addExtension($this->get('amg_admin.lock.admin_extension'));
        return $instance;
    }
    protected function getAdmin_PostAttachmentService()
    {
        $instance = new \AppBundle\Admin\PostAttachmentAdmin('admin.post_attachment', 'AppBundle\\Entity\\PostAttachment', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Прикреплённый файл');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.file'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.position'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_PostNewsletterService()
    {
        $instance = new \AppBundle\Admin\Newsletter\PostNewsletterAdmin('admin.post_newsletter', 'AppBundle\\Entity\\NewsletterItem\\PostNewsletter', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('post');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_QuestionsAndAnswersService()
    {
        $instance = new \AppBundle\Admin\EmbeddedContent\Faq\QuestionAnswerAdmin('admin.questions_and_answers', 'AppBundle\\Entity\\EmbeddedContent\\Faq\\QuestionAnswer', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Вопросы и ответы');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_RedirectService()
    {
        $instance = new \AppBundle\Admin\RedirectAdmin('admin.redirect', 'AppBundle\\Entity\\Redirect', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.native'));
        $instance->setLabel('Redirects');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_RoadService()
    {
        $instance = new \AppBundle\Admin\RoadAdmin('admin.road', 'AppBundle\\Entity\\Road', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Дороги');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => ':Road:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.api_cache_invalidation'));
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.priority_position'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.currently'));
        $instance->addExtension($this->get('app.admin.extension.panorama'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.teasing'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.mobile_contentful'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.extra_information'));
        $instance->addExtension($this->get('app.admin.extension.address'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_RoadParameterValueService()
    {
        $instance = new \AppBundle\Admin\ConstructionParameterValueAdmin('admin.road_parameter_value', 'AppBundle\\Entity\\RoadParameterValue', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Значения характеристик');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_SpotlightItemService()
    {
        $instance = new \AppBundle\Admin\SpotlightItemAdmin('admin.spotlight_item', 'AppBundle\\Entity\\SpotlightItem', 'AppBundle:Admin\\SpotlightItemCRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('В центре внимания');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_Status_CommentRendererService()
    {
        return $this->services['admin.status.comment_renderer'] = new \AppBundle\Renderer\CommentStatusRenderer();
    }
    protected function getAdmin_SubordinateSocialsService()
    {
        $instance = new \AppBundle\Admin\SubordinateSocialsAdmin('admin.subordinate_socials', 'AppBundle\\Entity\\SubordinateSocials', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Соцсети ДК');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.owner'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAdmin_ThreadService()
    {
        $a = $this->get('sonata.admin.label.strategy.underscore');
        $b = $this->get('sonata.admin.manager.orm');
        $c = $this->get('sonata.admin.builder.orm_form');
        $d = $this->get('sonata.admin.builder.orm_show');
        $e = $this->get('sonata.admin.builder.orm_list');
        $f = $this->get('sonata.admin.builder.orm_datagrid');
        $g = $this->get('translator.default');
        $h = $this->get('sonata.admin.pool');
        $i = $this->get('sonata.admin.route.default_generator');
        $j = $this->get('validator');
        $k = $this->get('sonata.admin.security.handler');
        $l = $this->get('knp_menu.factory');
        $m = $this->get('sonata.admin.route.path_info');
        $n = $this->get('app.admin.extension.action_logger');
        $o = $this->get('sonata.admin.event.extension');
        $p = new \AppBundle\Admin\CommentAdmin('admin.comment', 'Application\\FOS\\CommentBundle\\Entity\\Comment', 'SonataAdminBundle:CRUD');
        $p->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $p->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $p->setLabelTranslatorStrategy($a);
        $p->setManagerType('orm');
        $p->setModelManager($b);
        $p->setFormContractor($c);
        $p->setShowBuilder($d);
        $p->setListBuilder($e);
        $p->setDatagridBuilder($f);
        $p->setTranslator($g);
        $p->setConfigurationPool($h);
        $p->setRouteGenerator($i);
        $p->setValidator($j);
        $p->setSecurityHandler($k);
        $p->setMenuFactory($l);
        $p->setRouteBuilder($m);
        $p->setLabel('Комментарии');
        $p->setPersistFilters(false);
        $p->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $p->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $p->initialize();
        $p->addExtension($n);
        $p->addExtension($o);
        $instance = new \AppBundle\Admin\ThreadAdmin('admin.thread', 'Application\\FOS\\CommentBundle\\Entity\\Thread', 'AppBundle:Admin/ThreadCRUD');
        $instance->addChild($p);
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($a);
        $instance->setManagerType('orm');
        $instance->setModelManager($b);
        $instance->setFormContractor($c);
        $instance->setShowBuilder($d);
        $instance->setListBuilder($e);
        $instance->setDatagridBuilder($f);
        $instance->setTranslator($g);
        $instance->setConfigurationPool($h);
        $instance->setRouteGenerator($i);
        $instance->setValidator($j);
        $instance->setSecurityHandler($k);
        $instance->setMenuFactory($l);
        $instance->setRouteBuilder($m);
        $instance->setLabel('Комментарии');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($n);
        $instance->addExtension($o);
        return $instance;
    }
    protected function getAdmin_UserRoleService()
    {
        $instance = new \AppBundle\Admin\UserRoleAdmin('admin.user_role', 'AppBundle\\Entity\\UserRole', 'SonataAdminBundle:CRUD');
        $instance->setRolesBuilder($this->get('sonata.user.editable_role_builder'));
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Описания ролей');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_VideoService()
    {
        $instance = new \AppBundle\Admin\VideoAdmin('admin.video', 'AppBundle\\Entity\\Video', 'AppBundle:Admin/BaseAdmin');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Видеоклипы');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => ':Video:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('admin.extension.homepage_guard'));
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('admin.extension.related_posts'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.feedable'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.publishing_period'));
        $instance->addExtension($this->get('app.admin.extension.author'));
        $instance->addExtension($this->get('app.admin.extension.source'));
        $instance->addExtension($this->get('app.admin.extension.rubrics'));
        $instance->addExtension($this->get('app.admin.extension.owners'));
        $instance->addExtension($this->get('app.admin.extension.metadata'));
        $instance->addExtension($this->get('amg_tag.autoadmin.extension.tags'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        $instance->addExtension($this->get('amg_admin.lock.admin_extension'));
        return $instance;
    }
    protected function getAdmin_VideoNewsletterService()
    {
        $instance = new \AppBundle\Admin\Newsletter\VideoNewsletterAdmin('admin.video_newsletter', 'AppBundle\\Entity\\NewsletterItem\\VideoNewsletter', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('video');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAdmin_VideoPicksService()
    {
        $instance = new \AppBundle\Admin\VideoPicksAdmin('admin.video_picks', 'AppBundle\\Entity\\VideoPicks', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Видео на главной');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAmgAdmin_Autoadmin_FieldsArrangerService()
    {
        $this->services['amg_admin.autoadmin.fields_arranger'] = $instance = new \Amg\Bundle\AdminBundle\Admin\Extension\FieldsArrangerExtension();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getAmgAdmin_Filter_DataRangeService()
    {
        return new \Amg\Bundle\AdminBundle\Filter\DataRangeFilter();
    }
    protected function getAmgAdmin_Lock_AdminExtensionService()
    {
        $this->services['amg_admin.lock.admin_extension'] = $instance = new \Amg\Bundle\AdminBundle\Admin\Extension\LockExtension();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getAmgAdmin_Lock_EntityListenerService()
    {
        $this->services['amg_admin.lock.entity_listener'] = $instance = new \Amg\Bundle\AdminBundle\Entity\Listener\EntityLockListener();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getAmgForm_Type_DateRangeService()
    {
        return $this->services['amg_form.type.date_range'] = new \Amg\Bundle\FormBundle\Form\Type\DateRangeType($this->get('translator.default'));
    }
    protected function getAmgForm_Type_ElfinderService()
    {
        return $this->services['amg_form.type.elfinder'] = new \Amg\Bundle\FormBundle\Form\Type\ElFinderType();
    }
    protected function getAmgForm_Type_FileService()
    {
        return $this->services['amg_form.type.file'] = new \Amg\Bundle\FormBundle\Form\Type\FileType();
    }
    protected function getAmgForm_Type_FilterDateRangeService()
    {
        return $this->services['amg_form.type.filter_date_range'] = new \Amg\Bundle\FormBundle\Form\Type\FilterDateRangeType($this->get('translator.default'));
    }
    protected function getAmgPage_Admin_BlockService()
    {
        $instance = new \Amg\Bundle\PageBundle\Admin\BlockAdmin('amg_page.admin.block', 'AppBundle\\Entity\\Block', 'AmgPageBundle:Admin\\Block');
        $instance->setBlockManager($this->get('sonata.block.manager'));
        $instance->setLayoutManager($this->get('amg_page.layout.manager'));
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Блоки');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getAmgPage_Admin_PageService()
    {
        $a = $this->get('amg_page.layout.manager');
        $b = $this->get('sonata.admin.label.strategy.underscore');
        $c = $this->get('sonata.admin.manager.orm');
        $d = $this->get('sonata.admin.builder.orm_form');
        $e = $this->get('sonata.admin.builder.orm_show');
        $f = $this->get('sonata.admin.builder.orm_list');
        $g = $this->get('sonata.admin.builder.orm_datagrid');
        $h = $this->get('translator.default');
        $i = $this->get('sonata.admin.pool');
        $j = $this->get('sonata.admin.route.default_generator');
        $k = $this->get('validator');
        $l = $this->get('sonata.admin.security.handler');
        $m = $this->get('knp_menu.factory');
        $n = $this->get('sonata.admin.route.path_info');
        $o = $this->get('app.admin.extension.action_logger');
        $p = $this->get('sonata.admin.event.extension');
        $q = new \Amg\Bundle\PageBundle\Admin\BlockAdmin('amg_page.admin.block', 'AppBundle\\Entity\\Block', 'AmgPageBundle:Admin\\Block');
        $q->setBlockManager($this->get('sonata.block.manager'));
        $q->setLayoutManager($a);
        $q->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $q->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $q->setLabelTranslatorStrategy($b);
        $q->setManagerType('orm');
        $q->setModelManager($c);
        $q->setFormContractor($d);
        $q->setShowBuilder($e);
        $q->setListBuilder($f);
        $q->setDatagridBuilder($g);
        $q->setTranslator($h);
        $q->setConfigurationPool($i);
        $q->setRouteGenerator($j);
        $q->setValidator($k);
        $q->setSecurityHandler($l);
        $q->setMenuFactory($m);
        $q->setRouteBuilder($n);
        $q->setLabel('Блоки');
        $q->setPersistFilters(false);
        $q->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $q->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $q->initialize();
        $q->addExtension($o);
        $q->addExtension($p);
        $instance = new \Amg\Bundle\PageBundle\Admin\PageAdmin('amg_page.admin.page', 'AppBundle\\Entity\\Page', 'AmgPageBundle:Admin\\Page');
        $instance->setLayoutManager($a);
        $instance->addChild($q);
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($b);
        $instance->setManagerType('orm');
        $instance->setModelManager($c);
        $instance->setFormContractor($d);
        $instance->setShowBuilder($e);
        $instance->setListBuilder($f);
        $instance->setDatagridBuilder($g);
        $instance->setTranslator($h);
        $instance->setConfigurationPool($i);
        $instance->setRouteGenerator($j);
        $instance->setValidator($k);
        $instance->setSecurityHandler($l);
        $instance->setMenuFactory($m);
        $instance->setRouteBuilder($n);
        $instance->setLabel('Страницы');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($o);
        $instance->addExtension($p);
        $instance->addExtension($this->get('app.admin.extension.draft'));
        $instance->addExtension($this->get('app.admin.extension.image'));
        $instance->addExtension($this->get('app.admin.extension.currently'));
        $instance->addExtension($this->get('app.admin.extension.show_last_news'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('app.admin.extension.contentful'));
        $instance->addExtension($this->get('app.admin.extension.mobile_contentful'));
        $instance->addExtension($this->get('app.admin.extension.publishable'));
        $instance->addExtension($this->get('app.admin.extension.owner'));
        $instance->addExtension($this->get('app.admin.extension.metadata'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        $instance->addExtension($this->get('amg_admin.lock.admin_extension'));
        return $instance;
    }
    protected function getAmgPage_Form_Type_PageService()
    {
        return $this->services['amg_page.form.type.page'] = new \Amg\Bundle\PageBundle\Form\Type\PageType($this->get('doctrine'));
    }
    protected function getAmgPage_Layout_ManagerService()
    {
        return $this->services['amg_page.layout.manager'] = new \Amg\Bundle\PageBundle\Layout\LayoutManager(array('default' => array('title' => 'Стандартный', 'template' => ':Page:default.html.twig', 'containers' => array('hidden' => 'Без привязки', 'content' => 'Контент')), 'news_blocks_page' => array('title' => 'С новостными блоками', 'template' => ':Page:news_blocks_page.html.twig', 'containers' => array('hidden' => 'Без привязки', 'content' => 'Контент')), 'map_page' => array('title' => 'С картой', 'template' => ':Page:map_page.html.twig', 'containers' => array('hidden' => 'Без привязки', 'content' => 'Контент')), 'dk_direction' => array('title' => 'Для страниц ДК: с блоком руководство', 'template' => 'Subordinate/Page/dk_direction.html.twig', 'containers' => array('hidden' => 'Без привязки', 'content' => 'Контент'))));
    }
    protected function getAmgPage_ManagerService()
    {
        return $this->services['amg_page.manager'] = new \Amg\Bundle\PageBundle\Model\PageManager('AppBundle\\Entity\\Page', 'AmgPageBundle:Page:page', $this->get('doctrine.orm.default_entity_manager'), $this->get('amg_page.layout.manager'));
    }
    protected function getAmgPage_Menu_Provider_PageService()
    {
        return $this->services['amg_page.menu.provider.page'] = new \Amg\Bundle\PageBundle\Menu\Provider\PageMenuProvider($this->get('knp_menu.factory'), $this->get('amg_page.page.repository'));
    }
    protected function getAmgPage_Menu_Provider_SitemapService()
    {
        return $this->services['amg_page.menu.provider.sitemap'] = new \Amg\Bundle\PageBundle\Menu\Provider\SitemapMenuProvider($this->get('knp_menu.factory'), $this->get('amg_page.page.repository'));
    }
    protected function getAmgPage_Page_RepositoryService()
    {
        return $this->services['amg_page.page.repository'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('AppBundle\\Entity\\Page');
    }
    protected function getAmgPage_ParamConverter_PageService()
    {
        return $this->services['amg_page.param_converter.page'] = new \Amg\Bundle\PageBundle\ParamConverter\PageParamConverter('AppBundle\\Entity\\Page', 'page', $this->get('amg_page.manager'));
    }
    protected function getAmgPage_RouterService()
    {
        return $this->services['amg_page.router'] = new \Amg\Bundle\PageBundle\Router\PageRouter('page', 'AmgPageBundle:Page:page', $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getAmgPage_Twig_PageExtensionService()
    {
        return $this->services['amg_page.twig.page_extension'] = new \Amg\Bundle\PageBundle\Twig\PageExtension($this->get('amg_page.layout.manager'), $this->get('doctrine.orm.default_entity_manager'), 'AppBundle\\Entity\\Page');
    }
    protected function getAmgPage_Twig_PageMenuExtensionService()
    {
        return $this->services['amg_page.twig.page_menu_extension'] = new \Amg\Bundle\PageBundle\Twig\PageMenuExtension($this->get('knp_menu.helper'), $this->get('knp_menu.menu_provider'));
    }
    protected function getAmgTag_Admin_TagService()
    {
        $instance = new \Amg\Bundle\TagBundle\Admin\TagAdmin('amg_tag.admin.tag', 'Amg\\Bundle\\TagBundle\\Entity\\Tag', 'AmgTagBundle:Admin\\Tag');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('Теги');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'AmgTagBundle:Admin:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'AmgTagBundle:Admin:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->addExtension($this->get('app.admin.extension.entitled'));
        $instance->addExtension($this->get('amg_admin.autoadmin.fields_arranger'));
        return $instance;
    }
    protected function getAmgTag_Autoadmin_Extension_TagsService()
    {
        return $this->services['amg_tag.autoadmin.extension.tags'] = new \Amg\Bundle\TagBundle\Admin\Extension\TagsExtension();
    }
    protected function getAmgTag_ManagerService()
    {
        return $this->services['amg_tag.manager'] = new \Amg\Bundle\TagBundle\Model\TagManager($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getAmgTag_Twig_TagService()
    {
        $this->services['amg_tag.twig.tag'] = $instance = new \Amg\Bundle\TagBundle\Twig\TagTwigExtension();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getAnimatedBannerService()
    {
        $this->services['animated_banner'] = $instance = new \AppBundle\Block\AnimatedBannerBlock('animated_banner', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        return $instance;
    }
    protected function getAnnotationReaderService()
    {
        return $this->services['annotation_reader'] = new \Doctrine\Common\Annotations\FileCacheReader($this->get('annotations.reader'), (__DIR__.'/annotations'), false);
    }
    protected function getAnnouncementService()
    {
        $this->services['announcement'] = $instance = new \AppBundle\Block\AnnouncementBlock('announcement', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        return $instance;
    }
    protected function getApibundle_Applicationlayer_Abstractcommand_SymfonycommandvalidatorService()
    {
        return $this->services['apibundle\applicationlayer\abstractcommand\symfonycommandvalidator'] = new \ApiBundle\ApplicationLayer\AbstractCommand\SymfonyCommandValidator($this->get('validator'));
    }
    protected function getApibundle_Applicationlayer_Changepostprioritycommand_ChangepostprioritycommandvalidatorService()
    {
        return $this->services['apibundle\applicationlayer\changepostprioritycommand\changepostprioritycommandvalidator'] = new \ApiBundle\ApplicationLayer\ChangePostPriorityCommand\ChangePostPriorityCommandValidator($this->get('validator'));
    }
    protected function getApibundle_Applicationlayer_Changepostprioritycommand_ChangepostpriorityhandlerService()
    {
        return $this->services['apibundle\applicationlayer\changepostprioritycommand\changepostpriorityhandler'] = new \ApiBundle\ApplicationLayer\ChangePostPriorityCommand\ChangePostPriorityHandler($this->get('apibundle\applicationlayer\changepostprioritycommand\changepostprioritycommandvalidator'), $this->get('apibundle\infrastructurelayer\service\postservice'), $this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getApibundle_Applicationlayer_Createandsendserviceemailcommand_CreateandsendserviceemailhandlerService()
    {
        return $this->services['apibundle\applicationlayer\createandsendserviceemailcommand\createandsendserviceemailhandler'] = new \ApiBundle\ApplicationLayer\CreateAndSendServiceEmailCommand\CreateAndSendServiceEmailHandler('ApiBundle\\ApplicationLayer\\CreateAndSendServiceEmailCommand\\CreatedAndSendServiceEmailCommandDto', $this->get('apibundle\applicationlayer\abstractcommand\symfonycommandvalidator'), $this->get('templating'), $this->get('swiftmailer.mailer.default'), 'info-stroi@mos.ru', 'stroi.mos.ru');
    }
    protected function getApibundle_Applicationlayer_Createanimatedgifcommand_CreateanimatedgifhandlerService()
    {
        return $this->services['apibundle\applicationlayer\createanimatedgifcommand\createanimatedgifhandler'] = new \ApiBundle\ApplicationLayer\CreateAnimatedGifCommand\CreateAnimatedGifHandler('ApiBundle\\ApplicationLayer\\CreateAnimatedGifCommand\\CreatedAnimatedGifCommandDto', $this->get('apibundle\applicationlayer\abstractcommand\symfonycommandvalidator'), $this->get('doctrine.orm.default_entity_manager'), $this->get('apibundle\infrastructurelayer\service\animatedgiffactory'), $this->get('import\helper\mediabuilder'));
    }
    protected function getApibundle_Applicationlayer_Emailsubscriptioncommands_DeletesubscriptioncommandhandlerService()
    {
        return $this->services['apibundle\applicationlayer\emailsubscriptioncommands\deletesubscriptioncommandhandler'] = new \ApiBundle\ApplicationLayer\EmailSubscriptionCommands\DeleteSubscriptionCommandHandler($this->get('apibundle\applicationlayer\emailsubscriptioncommands\deletesubscriptioncommandvalidator'), $this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getApibundle_Applicationlayer_Emailsubscriptioncommands_DeletesubscriptioncommandvalidatorService()
    {
        return $this->services['apibundle\applicationlayer\emailsubscriptioncommands\deletesubscriptioncommandvalidator'] = new \ApiBundle\ApplicationLayer\EmailSubscriptionCommands\DeleteSubscriptionCommandValidator($this->get('validator'));
    }
    protected function getApibundle_Applicationlayer_Emailsubscriptioncommands_SaveoptionscommandhandlerService()
    {
        return $this->services['apibundle\applicationlayer\emailsubscriptioncommands\saveoptionscommandhandler'] = new \ApiBundle\ApplicationLayer\EmailSubscriptionCommands\SaveOptionsCommandHandler($this->get('apibundle\applicationlayer\emailsubscriptioncommands\saveoptionscommandvalidator'), $this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getApibundle_Applicationlayer_Emailsubscriptioncommands_SaveoptionscommandvalidatorService()
    {
        return $this->services['apibundle\applicationlayer\emailsubscriptioncommands\saveoptionscommandvalidator'] = new \ApiBundle\ApplicationLayer\EmailSubscriptionCommands\SaveOptionsCommandValidator($this->get('validator'));
    }
    protected function getApibundle_Infrastructurelayer_Datamapper_DatamapperrepositoryService()
    {
        $a = $this->get('apibundle\infrastructurelayer\datamapper\report\infographicdatamapper');
        $b = $this->get('apibundle\infrastructurelayer\datamapper\report\documentdatamapper');
        $c = $this->get('apibundle\infrastructurelayer\datamapper\report\postdatamapper');
        return $this->services['apibundle\infrastructurelayer\datamapper\datamapperrepository'] = new \ApiBundle\InfrastructureLayer\DataMapper\DataMapperRepository(array('infographic-collage' => $a, 'infographic-from-media' => $a, 'infographic' => $b, 'news' => $c, 'news-city' => $c, 'article' => $c, 'page-photo-lines' => $c, 'interview' => $c, 'press-release' => $c, 'shorthand-report' => $c, 'document' => $b, 'photo-media' => $a, 'video' => $c, 'photo' => $a, 'banner' => $this->get('apibundle\infrastructurelayer\datamapper\report\bannerdatamapper'), 'embedded-banner' => $b, 'spotlightitem-banner' => $this->get('apibundle\infrastructurelayer\datamapper\report\logentrydatamapper'), 'page-builder-sciense' => $c, 'page-construction' => $b, 'page-metro' => $b, 'page-organisation' => $b, 'page-personal' => $this->get('apibundle\infrastructurelayer\datamapper\report\pagepersonaldatamapper'), 'page' => $b, 'page-road' => $b, 'page-faq' => $b, 'announcement' => $b, 'newsletter' => $this->get('apibundle\infrastructurelayer\datamapper\report\newsletterdatamapper')));
    }
    protected function getApibundle_Infrastructurelayer_Datamapper_Report_BannerdatamapperService()
    {
        return $this->services['apibundle\infrastructurelayer\datamapper\report\bannerdatamapper'] = new \ApiBundle\InfrastructureLayer\DataMapper\Report\BannerDataMapper($this->get('router.default'), $this->get('request_stack'));
    }
    protected function getApibundle_Infrastructurelayer_Datamapper_Report_DocumentdatamapperService()
    {
        return $this->services['apibundle\infrastructurelayer\datamapper\report\documentdatamapper'] = new \ApiBundle\InfrastructureLayer\DataMapper\Report\DocumentDataMapper($this->get('app.admin_locator'), $this->get('request_stack'));
    }
    protected function getApibundle_Infrastructurelayer_Datamapper_Report_InfographicdatamapperService()
    {
        $a = new \Application\Sonata\MediaBundle\Admin\MediaAdmin('sonata.media.admin.media', 'Application\\Sonata\\MediaBundle\\Entity\\Media', 'ApplicationSonataMediaBundle:MediaAdmin', $this->get('sonata.media.pool'));
        $a->setModelManager($this->get('sonata.media.admin.media.manager'));
        $a->setTranslationDomain('SonataMediaBundle');
        $a->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $a->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $a->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $a->setManagerType('orm');
        $a->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $a->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $a->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $a->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $a->setTranslator($this->get('translator.default'));
        $a->setConfigurationPool($this->get('sonata.admin.pool'));
        $a->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $a->setValidator($this->get('validator'));
        $a->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $a->setMenuFactory($this->get('knp_menu.factory'));
        $a->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $a->setLabel('media');
        $a->setPersistFilters(false);
        $a->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataMediaBundle:MediaAdmin:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'SonataMediaBundle:MediaAdmin:edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => 'SonataMediaBundle:MediaAdmin:inner_row_media.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_flat_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $a->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $a->initialize();
        $a->addExtension($this->get('app.admin.extension.media_list'));
        $a->addExtension($this->get('sonata.formatter.ckeditor.extension'));
        $a->addExtension($this->get('app.admin.extension.action_logger'));
        $a->addExtension($this->get('sonata.admin.event.extension'));
        $a->setTemplate('short_object_description', 'ApplicationSonataMediaBundle::short_object_description.html.twig');
        return $this->services['apibundle\infrastructurelayer\datamapper\report\infographicdatamapper'] = new \ApiBundle\InfrastructureLayer\DataMapper\Report\InfographicDataMapper($a, $this->get('request_stack'));
    }
    protected function getApibundle_Infrastructurelayer_Datamapper_Report_LogentrydatamapperService()
    {
        return $this->services['apibundle\infrastructurelayer\datamapper\report\logentrydatamapper'] = new \ApiBundle\InfrastructureLayer\DataMapper\Report\LogEntryDataMapper();
    }
    protected function getApibundle_Infrastructurelayer_Datamapper_Report_NewsletterdatamapperService()
    {
        return $this->services['apibundle\infrastructurelayer\datamapper\report\newsletterdatamapper'] = new \ApiBundle\InfrastructureLayer\DataMapper\Report\NewsletterDataMapper($this->get('app.admin_locator'), $this->get('request_stack'));
    }
    protected function getApibundle_Infrastructurelayer_Datamapper_Report_PagepersonaldatamapperService()
    {
        return $this->services['apibundle\infrastructurelayer\datamapper\report\pagepersonaldatamapper'] = new \ApiBundle\InfrastructureLayer\DataMapper\Report\PagePersonalDataMapper($this->get('app.admin_locator'), $this->get('request_stack'));
    }
    protected function getApibundle_Infrastructurelayer_Datamapper_Report_PostdatamapperService()
    {
        return $this->services['apibundle\infrastructurelayer\datamapper\report\postdatamapper'] = new \ApiBundle\InfrastructureLayer\DataMapper\Report\PostDataMapper($this->get('app.admin_locator'), $this->get('request_stack'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Post_PostqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\post\postqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Post\PostQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_QueryfactoryrepositoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\queryfactoryrepository'] = new \ApiBundle\InfrastructureLayer\QueryFactory\QueryFactoryRepository(array('infographic-collage' => $this->get('apibundle\infrastructurelayer\queryfactory\report\infographiccollagequeryfactory'), 'infographic-from-media' => $this->get('apibundle\infrastructurelayer\queryfactory\report\infographicfrommediaqueryfactory'), 'infographic' => $this->get('apibundle\infrastructurelayer\queryfactory\report\infographicqueryfactory'), 'news' => $this->get('apibundle\infrastructurelayer\queryfactory\report\newsqueryfactory'), 'news-city' => $this->get('apibundle\infrastructurelayer\queryfactory\report\newscityqueryfactory'), 'article' => $this->get('apibundle\infrastructurelayer\queryfactory\report\articlequeryfactory'), 'page-photo-lines' => $this->get('apibundle\infrastructurelayer\queryfactory\report\pagephotoqueryfactory'), 'interview' => $this->get('apibundle\infrastructurelayer\queryfactory\report\interviewqueryfactory'), 'press-release' => $this->get('apibundle\infrastructurelayer\queryfactory\report\pressreleasequeryfactory'), 'shorthand-report' => $this->get('apibundle\infrastructurelayer\queryfactory\report\shorthandqueryfactory'), 'document' => $this->get('apibundle\infrastructurelayer\queryfactory\report\documentqueryfactory'), 'photo-media' => $this->get('apibundle\infrastructurelayer\queryfactory\report\photomediaqueryfactory'), 'video' => $this->get('apibundle\infrastructurelayer\queryfactory\report\videoqueryfactory'), 'photo' => $this->get('apibundle\infrastructurelayer\queryfactory\report\photoqueryfactory'), 'banner' => $this->get('apibundle\infrastructurelayer\queryfactory\report\bannerqueryfactory'), 'embedded-banner' => $this->get('apibundle\infrastructurelayer\queryfactory\report\embeddedbannerqueryfactory'), 'spotlightitem-banner' => $this->get('apibundle\infrastructurelayer\queryfactory\report\spotlightitemqueryfactory'), 'page-builder-sciense' => $this->get('apibundle\infrastructurelayer\queryfactory\report\pagebuildersciensequeryfactory'), 'page-construction' => $this->get('apibundle\infrastructurelayer\queryfactory\report\pageconstructionqueryfactory'), 'page-metro' => $this->get('apibundle\infrastructurelayer\queryfactory\report\pagemetroqueryfactory'), 'page-organisation' => $this->get('apibundle\infrastructurelayer\queryfactory\report\pageorganisationqueryfactory'), 'page-personal' => $this->get('apibundle\infrastructurelayer\queryfactory\report\pagepersonqueryfactory'), 'page' => $this->get('apibundle\infrastructurelayer\queryfactory\report\pagequeryfactory'), 'page-road' => $this->get('apibundle\infrastructurelayer\queryfactory\report\pageroadqueryfactory'), 'page-faq' => $this->get('apibundle\infrastructurelayer\queryfactory\report\faqqueryfactory'), 'announcement' => $this->get('apibundle\infrastructurelayer\queryfactory\report\announcementqueryfactory'), 'newsletter' => $this->get('apibundle\infrastructurelayer\queryfactory\report\newsletterqueryfactory')));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_AnnouncementqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\announcementqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\AnnouncementQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_ArticlequeryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\articlequeryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\ArticleQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_BannerqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\bannerqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\BannerQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_DocumentqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\documentqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\DocumentQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_EmbeddedbannerqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\embeddedbannerqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\EmbeddedBannerQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_FaqqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\faqqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\FaqQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_InfographiccollagequeryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\infographiccollagequeryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\InfographicCollageQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_InfographicfrommediaqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\infographicfrommediaqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\InfographicFromMediaQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_InfographicqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\infographicqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\InfographicQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_InterviewqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\interviewqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\InterviewQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_NewscityqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\newscityqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\NewsCityQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_NewsletterqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\newsletterqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\NewsletterQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_NewsqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\newsqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\NewsQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_PagebuildersciensequeryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\pagebuildersciensequeryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\PageBuilderScienseQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_PageconstructionqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\pageconstructionqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\PageConstructionQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_PagemetroqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\pagemetroqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\PageMetroQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_PageorganisationqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\pageorganisationqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\PageOrganisationQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_PagepersonqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\pagepersonqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\PagePersonQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_PagephotoqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\pagephotoqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\PagePhotoQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_PagequeryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\pagequeryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\PageQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_PageroadqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\pageroadqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\PageRoadQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_PhotomediaqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\photomediaqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\PhotoMediaQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_PhotoqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\photoqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\PhotoQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_PressreleasequeryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\pressreleasequeryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\PressReleaseQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_ShorthandqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\shorthandqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\ShortHandQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_SpotlightitemqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\spotlightitemqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\SpotlightItemQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Queryfactory_Report_VideoqueryfactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\queryfactory\report\videoqueryfactory'] = new \ApiBundle\InfrastructureLayer\QueryFactory\Report\VideoQueryFactory($this->get('doctrine.orm.default_entity_manager'), $this->get('app.converterkendogridstatetodoctrinecriteria'));
    }
    protected function getApibundle_Infrastructurelayer_Service_AnimatedgiffactoryService()
    {
        return $this->services['apibundle\infrastructurelayer\service\animatedgiffactory'] = new \ApiBundle\InfrastructureLayer\Service\AnimatedGifFactory($this->get('sonata.media.provider.image'), ($this->targetDirs[2].'/../web/'));
    }
    protected function getApibundle_Infrastructurelayer_Service_PostserviceService()
    {
        return $this->services['apibundle\infrastructurelayer\service\postservice'] = new \ApiBundle\InfrastructureLayer\Service\PostService($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getApibundle_Presentationlayer_Httpcontroller_AnimatedgifgeneratorcontrollerService()
    {
        return $this->services['apibundle\presentationlayer\httpcontroller\animatedgifgeneratorcontroller'] = new \ApiBundle\PresentationLayer\HttpController\AnimatedGifGeneratorController($this->get('apibundle\applicationlayer\createanimatedgifcommand\createanimatedgifhandler'), $this->get('apibundle\presentationlayer\view\animatedgif\apicreationresult'));
    }
    protected function getApibundle_Presentationlayer_Httpcontroller_EmailsubscriptioncontrollerService()
    {
        return $this->services['apibundle\presentationlayer\httpcontroller\emailsubscriptioncontroller'] = new \ApiBundle\PresentationLayer\HttpController\EmailSubscriptionController($this->get('apibundle\applicationlayer\emailsubscriptioncommands\deletesubscriptioncommandhandler'), $this->get('apibundle\applicationlayer\emailsubscriptioncommands\saveoptionscommandhandler'), $this);
    }
    protected function getApibundle_Presentationlayer_Httpcontroller_GallerycontrollerService()
    {
        $this->services['apibundle\presentationlayer\httpcontroller\gallerycontroller'] = $instance = new \ApiBundle\PresentationLayer\HttpController\GalleryController($this->get('doctrine.orm.default_entity_manager'), $this->get('router.default'), $this->get('sonata.media.provider.image'), $this->get('snc_redis.api_cache'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getApibundle_Presentationlayer_Httpcontroller_PostchangeprioritycontrollerService()
    {
        return $this->services['apibundle\presentationlayer\httpcontroller\postchangeprioritycontroller'] = new \ApiBundle\PresentationLayer\HttpController\PostChangePriorityController($this->get('apibundle\applicationlayer\changepostprioritycommand\changepostpriorityhandler'), $this->get('apibundle\infrastructurelayer\datamapper\report\postdatamapper'));
    }
    protected function getApibundle_Presentationlayer_Httpcontroller_PostcontrollerService()
    {
        return $this->services['apibundle\presentationlayer\httpcontroller\postcontroller'] = new \ApiBundle\PresentationLayer\HttpController\PostController($this->get('apibundle\infrastructurelayer\queryfactory\post\postqueryfactory'), $this->get('apibundle\infrastructurelayer\datamapper\report\postdatamapper'));
    }
    protected function getApibundle_Presentationlayer_Httpcontroller_ReportcontrollerService()
    {
        return $this->services['apibundle\presentationlayer\httpcontroller\reportcontroller'] = new \ApiBundle\PresentationLayer\HttpController\ReportController($this->get('apibundle\infrastructurelayer\queryfactory\queryfactoryrepository'), $this->get('apibundle\infrastructurelayer\datamapper\datamapperrepository'));
    }
    protected function getApibundle_Presentationlayer_Httpcontroller_ServiceemailsendercontrollerService()
    {
        return $this->services['apibundle\presentationlayer\httpcontroller\serviceemailsendercontroller'] = new \ApiBundle\PresentationLayer\HttpController\ServiceEmailSenderController($this->get('apibundle\applicationlayer\createandsendserviceemailcommand\createandsendserviceemailhandler'), $this->get('jms_serializer'));
    }
    protected function getApibundle_Presentationlayer_View_Animatedgif_ApicreationresultService()
    {
        return $this->services['apibundle\presentationlayer\view\animatedgif\apicreationresult'] = new \ApiBundle\PresentationLayer\View\AnimatedGif\ApiCreationResult($this->get('sonata.media.provider.image'), $this->get('request_stack'));
    }
    protected function getApp_ActionLoggerService()
    {
        $this->services['app.action_logger'] = $instance = new \AppBundle\ActionLogger\ActionLogger();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getApp_Admin_AppealService()
    {
        $instance = new \AppBundle\Admin\AppealAdmin('app.admin.appeal', 'AppBundle\\Entity\\Appeal', 'SonataAdminBundle:CRUD');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.native'));
        $instance->setLabel('Обращения');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getApp_Admin_Extension_Service()
    {
        return $this->services['app.admin.extension.'] = new \Amg\Bundle\AdminBundle\Admin\Extension\LeadExtension();
    }
    protected function getApp_Admin_Extension_ActionLoggerService()
    {
        return $this->services['app.admin.extension.action_logger'] = new \AppBundle\ActionLogger\ActionLoggerExtension($this->get('app.action_logger'), $this->get('audit_reader'));
    }
    protected function getApp_Admin_Extension_AddressService()
    {
        return $this->services['app.admin.extension.address'] = new \Amg\Bundle\AdminBundle\Admin\Extension\AddressExtension();
    }
    protected function getApp_Admin_Extension_ApiCacheInvalidationService()
    {
        return $this->services['app.admin.extension.api_cache_invalidation'] = new \AppBundle\Cache\ApiCacheInvalidation($this->get('snc_redis.api_cache'));
    }
    protected function getApp_Admin_Extension_AttachmentsService()
    {
        return $this->services['app.admin.extension.attachments'] = new \Amg\Bundle\AdminBundle\Admin\Extension\AttachmentsExtension();
    }
    protected function getApp_Admin_Extension_AuthorService()
    {
        return $this->services['app.admin.extension.author'] = new \Amg\Bundle\AdminBundle\Admin\Extension\AuthorExtension();
    }
    protected function getApp_Admin_Extension_BlockCacheInvalidationService()
    {
        return $this->services['app.admin.extension.block_cache_invalidation'] = new \AppBundle\Cache\BlockCacheInvalidation($this->get('sonata.cache.memcached'));
    }
    protected function getApp_Admin_Extension_CategorizedService()
    {
        return $this->services['app.admin.extension.categorized'] = new \AppBundle\Admin\Extension\CategorizedExtension();
    }
    protected function getApp_Admin_Extension_ContactInfoService()
    {
        return $this->services['app.admin.extension.contact_info'] = new \Amg\Bundle\AdminBundle\Admin\Extension\ContactInformationExtension();
    }
    protected function getApp_Admin_Extension_ContentfulService()
    {
        return $this->services['app.admin.extension.contentful'] = new \Amg\Bundle\AdminBundle\Admin\Extension\ContentfulExtension();
    }
    protected function getApp_Admin_Extension_CurrentlyService()
    {
        return $this->services['app.admin.extension.currently'] = new \AppBundle\Admin\Extension\CurrentlyExtension();
    }
    protected function getApp_Admin_Extension_DraftService()
    {
        return $this->services['app.admin.extension.draft'] = new \AppBundle\Admin\Extension\DraftExtension();
    }
    protected function getApp_Admin_Extension_EntitledService()
    {
        return $this->services['app.admin.extension.entitled'] = new \Amg\Bundle\AdminBundle\Admin\Extension\EntitledExtension();
    }
    protected function getApp_Admin_Extension_ExtraInformationService()
    {
        return $this->services['app.admin.extension.extra_information'] = new \AppBundle\Admin\Extension\ExtraInformationExtension();
    }
    protected function getApp_Admin_Extension_FeedableService()
    {
        return $this->services['app.admin.extension.feedable'] = new \Amg\Bundle\AdminBundle\Admin\Extension\FeedableExtension();
    }
    protected function getApp_Admin_Extension_FileService()
    {
        return $this->services['app.admin.extension.file'] = new \Amg\Bundle\AdminBundle\Admin\Extension\FileExtension();
    }
    protected function getApp_Admin_Extension_ImageService()
    {
        return $this->services['app.admin.extension.image'] = new \Amg\Bundle\AdminBundle\Admin\Extension\ImageExtension(array('default' => array('image' => array('context' => 'main_image', 'lock_context' => array(0 => 'main_image', 1 => 'gallery_media'))), 'AppBundle\\Entity\\Post' => array('image' => array('context' => 'gallery_media', 'editable_formats' => array(0 => 'page_header_700', 1 => 'thumb210', 2 => 'thumb300', 3 => 'thumb960x470', 4 => 'thumb465x548', 5 => 'thumb340x340', 6 => 'thumb271x125', 7 => 'thumb295x345'), 'lock_context' => array(0 => 'main_image', 1 => 'gallery_media'), 'image_admin_extra_key' => 'page_header_700'), 'heroImage' => array('context' => 'gallery_media', 'help' => 'Требуется только если изображение на странице публикации должно отличаться от основного изображения', 'editable_formats' => array(0 => 'page_header_700', 1 => 'thumb465x548'), 'lock_context' => array(0 => 'main_image', 1 => 'gallery_media'), 'image_admin_extra_key' => 'page_header_700')), 'AppBundle\\Entity\\EmbeddedContent\\Banner' => array('templateImage' => array('context' => 'main_image', 'editable_formats' => array(0 => 'thumb589'), 'lock_context' => array(0 => 'main_image', 1 => 'gallery_media'), 'image_admin_extra_key' => 'thumb589', 'required' => true)), 'AppBundle\\Entity\\EmbeddedContent\\Faq\\FaqBlock' => array('image' => array('context' => 'main_image', 'editable_formats' => array(0 => 'thumb589'), 'lock_context' => array(0 => 'main_image', 1 => 'gallery_media'), 'image_admin_extra_key' => 'thumb589', 'required' => true)), 'AppBundle\\Entity\\GalleryMedia' => array('image' => 'gallery_media'), 'AppBundle\\Entity\\Person' => array('image' => array('context' => 'person', 'editable_formats' => array(0 => 'thumb70'), 'lock_context' => array(0 => 'person'), 'image_admin_extra_key' => 'thumb70'), 'topImage' => 'person_top'), 'AppBundle\\Entity\\ContactPerson' => array('image' => array('context' => 'person', 'editable_formats' => array(0 => 'direction', 1 => 'direction_main'), 'lock_context' => array(0 => 'person'), 'image_admin_extra_key' => 'thumb589')), 'AppBundle\\Entity\\MetroTimelineYear' => array('image' => array('context' => 'metro_timeline', 'lock_context' => 'metro_timeline')), 'AppBundle\\Entity\\Video' => array('image' => array('context' => 'main_image', 'editable_formats' => array(0 => 'thumb300', 1 => 'thumb680x495', 2 => 'thumb300x90'), 'lock_context' => array(0 => 'video', 1 => 'main_image', 2 => 'gallery_media'), 'image_admin_extra_key' => 'thumb680x495')), 'AppBundle\\Entity\\Infographics' => array('image' => array('context' => 'main_image', 'editable_formats' => array(0 => 'thumb630x338'), 'lock_context' => array(0 => 'main_image', 1 => 'gallery_media'), 'image_admin_extra_key' => 'thumb630x338')), 'AppBundle\\Entity\\Road' => array('image' => array('context' => 'main_image', 'editable_formats' => array(0 => 'thumb1440', 1 => 'thumb300'), 'lock_context' => array(0 => 'main_image', 1 => 'gallery_media'), 'image_admin_extra_key' => 'thumb1440')), 'AppBundle\\Entity\\Construction' => array('image' => array('context' => 'main_image', 'editable_formats' => array(0 => 'thumb1440', 1 => 'thumb300'), 'lock_context' => array(0 => 'main_image', 1 => 'gallery_media'), 'image_admin_extra_key' => 'thumb1440')), 'AppBundle\\Entity\\MetroStation' => array('image' => array('context' => 'main_image', 'editable_formats' => array(0 => 'thumb1440', 1 => 'thumb300'), 'lock_context' => array(0 => 'main_image', 1 => 'gallery_media'), 'image_admin_extra_key' => 'thumb1440'))));
    }
    protected function getApp_Admin_Extension_LeadService()
    {
        return $this->services['app.admin.extension.lead'] = new \Amg\Bundle\AdminBundle\Admin\Extension\LeadExtension();
    }
    protected function getApp_Admin_Extension_MediaListService()
    {
        return $this->services['app.admin.extension.media_list'] = new \AppBundle\Admin\Extension\CkeditorMediaListExtension();
    }
    protected function getApp_Admin_Extension_MetadataService()
    {
        return $this->services['app.admin.extension.metadata'] = new \Amg\Bundle\AdminBundle\Admin\Extension\MetadataExtension();
    }
    protected function getApp_Admin_Extension_MobileContentfulService()
    {
        return $this->services['app.admin.extension.mobile_contentful'] = new \Amg\Bundle\AdminBundle\Admin\Extension\MobileContentfulExtension();
    }
    protected function getApp_Admin_Extension_OwnerService()
    {
        return $this->services['app.admin.extension.owner'] = new \AppBundle\Admin\Extension\OwnerExtension();
    }
    protected function getApp_Admin_Extension_OwnersService()
    {
        return $this->services['app.admin.extension.owners'] = new \AppBundle\Admin\Extension\OwnersExtension();
    }
    protected function getApp_Admin_Extension_PanoramaService()
    {
        return $this->services['app.admin.extension.panorama'] = new \AppBundle\Admin\Extension\PanoramaExtension();
    }
    protected function getApp_Admin_Extension_PersonFullNameService()
    {
        return $this->services['app.admin.extension.person_full_name'] = new \Amg\Bundle\AdminBundle\Admin\Extension\PersonFullNameExtension();
    }
    protected function getApp_Admin_Extension_PositionService()
    {
        return $this->services['app.admin.extension.position'] = new \Amg\Bundle\AdminBundle\Admin\Extension\PositionExtension();
    }
    protected function getApp_Admin_Extension_PriorityPositionService()
    {
        return $this->services['app.admin.extension.priority_position'] = new \AppBundle\Model\PriorityPosition\PriorityPositionExtension();
    }
    protected function getApp_Admin_Extension_PublishableService()
    {
        return $this->services['app.admin.extension.publishable'] = new \Amg\Bundle\AdminBundle\Admin\Extension\PublishableExtension();
    }
    protected function getApp_Admin_Extension_PublishingPeriodService()
    {
        return $this->services['app.admin.extension.publishing_period'] = new \Amg\Bundle\AdminBundle\Admin\Extension\PublishingPeriodExtension();
    }
    protected function getApp_Admin_Extension_RubricsService()
    {
        return $this->services['app.admin.extension.rubrics'] = new \Amg\Bundle\AdminBundle\Admin\Extension\RubricsExtension();
    }
    protected function getApp_Admin_Extension_ShowLastNewsService()
    {
        return $this->services['app.admin.extension.show_last_news'] = new \AppBundle\Admin\Extension\ShowLastNewsExtension();
    }
    protected function getApp_Admin_Extension_SourceService()
    {
        return $this->services['app.admin.extension.source'] = new \Amg\Bundle\AdminBundle\Admin\Extension\ArticleSourceExtension();
    }
    protected function getApp_Admin_Extension_TeasingService()
    {
        return $this->services['app.admin.extension.teasing'] = new \Amg\Bundle\AdminBundle\Admin\Extension\TeasingExtension();
    }
    protected function getApp_AdminLocatorService()
    {
        return $this->services['app.admin_locator'] = new \AppBundle\Service\AdminLocator($this->get('sonata.admin.pool'));
    }
    protected function getApp_Construction_FindOrganizationService()
    {
        return $this->services['app.construction.find_organization'] = new \AppBundle\Service\FindConstructionOrganizationService($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getApp_ConverterkendogridstatetodoctrinecriteriaService()
    {
        return $this->services['app.converterkendogridstatetodoctrinecriteria'] = new \ApiBundle\InfrastructureLayer\Converter\ConverterKendoGridStateToDoctrineCriteria\ConverterKendoGridStateToDoctrineCriteria($this->get('app.filterconverter'), $this->get('app.sortconverter'));
    }
    protected function getApp_Doctrine_Filter_AdminConfiguratorService()
    {
        return $this->services['app.doctrine.filter.admin_configurator'] = new \AppBundle\DoctrineFilter\AdminConfigurator($this->get('app.doctrine.filter.manager'));
    }
    protected function getApp_Doctrine_Filter_ManagerService()
    {
        return $this->services['app.doctrine.filter.manager'] = new \AppBundle\DoctrineFilter\FilterManager($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getApp_EmailManagerService()
    {
        return $this->services['app.email_manager'] = new \AppBundle\EmailManager\EmailManager($this->get('templating'), $this->get('swiftmailer.mailer.default'), 'Комплекс градостроительной политики и строительства города Москвы', 'info-stroi@mos.ru', 'stroi.mos.ru');
    }
    protected function getApp_EntityListener_CommentService()
    {
        $this->services['app.entity_listener.comment'] = $instance = new \AppBundle\Entity\Listener\CommentListener();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getApp_EntityListener_ConstructionService()
    {
        $this->services['app.entity_listener.construction'] = $instance = new \AppBundle\Entity\Listener\ConstructionListener();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getApp_EntityUrlGeneratorService()
    {
        return $this->services['app.entity_url_generator'] = new \AppBundle\Routing\EntityUrlGenerator($this->get('cmf_routing.router'), $this->get('request_stack'));
    }
    protected function getApp_ExceptionListenerService()
    {
        return $this->services['app.exception_listener'] = new \AppBundle\EventListener\ExceptionListener();
    }
    protected function getApp_FilterconverterService()
    {
        return $this->services['app.filterconverter'] = new \ApiBundle\InfrastructureLayer\Converter\ConverterKendoGridStateToDoctrineCriteria\FilterConverter();
    }
    protected function getApp_Form_Extension_ImageTypeService()
    {
        return $this->services['app.form.extension.image_type'] = new \AppBundle\Form\Extension\ImageTypeExtension();
    }
    protected function getApp_Form_Type_AddressService()
    {
        return $this->services['app.form.type.address'] = new \AppBundle\Form\Type\AddressType();
    }
    protected function getApp_Form_Type_AdministrativeUnitChoiceService()
    {
        return $this->services['app.form.type.administrative_unit_choice'] = new \AppBundle\Form\Type\AdministrativeUnitChoiceType();
    }
    protected function getApp_Form_Type_AjaxAutocompleteService()
    {
        return $this->services['app.form.type.ajax_autocomplete'] = new \AppBundle\Form\Type\AjaxAutocompleteType($this);
    }
    protected function getApp_Form_Type_CollectionListService()
    {
        return $this->services['app.form.type.collection_list'] = new \AppBundle\Form\Type\CollectionListType();
    }
    protected function getApp_Form_Type_ConstructionDataChoiceService()
    {
        return $this->services['app.form.type.construction_data_choice'] = new \AppBundle\Form\Type\ConstructionDataChoiceType();
    }
    protected function getApp_Form_Type_ConstructionDataGeoPointService()
    {
        return $this->services['app.form.type.construction_data_geo_point'] = new \AppBundle\Form\Type\ConstructionDataGeoPointType();
    }
    protected function getApp_Form_Type_ConstructionDataGeoPolygonService()
    {
        return $this->services['app.form.type.construction_data_geo_polygon'] = new \AppBundle\Form\Type\ConstructionDataGeoPolygonType();
    }
    protected function getApp_Form_Type_ConstructionDataTextService()
    {
        return $this->services['app.form.type.construction_data_text'] = new \AppBundle\Form\Type\ConstructionDataTextType();
    }
    protected function getApp_Form_Type_ConstructionStatusService()
    {
        return $this->services['app.form.type.construction_status'] = new \AppBundle\Form\Type\ConstructionStatusType();
    }
    protected function getApp_Form_Type_ContactInformationService()
    {
        return $this->services['app.form.type.contact_information'] = new \AppBundle\Form\Type\ContactInformationType($this);
    }
    protected function getApp_Form_Type_CopyContentButtonService()
    {
        return $this->services['app.form.type.copy_content_button'] = new \AppBundle\Form\Type\CopyContentButton();
    }
    protected function getApp_Form_Type_EntityReferenceService()
    {
        return $this->services['app.form.type.entity_reference'] = new \AppBundle\Form\Type\EntityReferenceType($this->get('sonata.admin.manager.orm'));
    }
    protected function getApp_Form_Type_ErrorReportService()
    {
        return $this->services['app.form.type.error_report'] = new \AppBundle\Form\Type\ErrorReportType();
    }
    protected function getApp_Form_Type_GeopointService()
    {
        return $this->services['app.form.type.geopoint'] = new \AppBundle\Form\Type\GeoPointType();
    }
    protected function getApp_Form_Type_GifGeneratorService()
    {
        return $this->services['app.form.type.gif_generator'] = new \AppBundle\Form\Type\GifGeneratorType($this->get('sonata.media.twig.extension'));
    }
    protected function getApp_Form_Type_HyperlinkService()
    {
        return $this->services['app.form.type.hyperlink'] = new \AppBundle\Form\Type\HyperlinkType();
    }
    protected function getApp_Form_Type_MediaCategoryTreeService()
    {
        return $this->services['app.form.type.media_category_tree'] = new \AppBundle\Form\Type\MediaCategoryTreeType($this->get('doctrine'));
    }
    protected function getApp_Form_Type_MediaCollectionService()
    {
        return $this->services['app.form.type.media_collection'] = new \AppBundle\Form\Type\MediaCollectionType();
    }
    protected function getApp_Form_Type_MediaListService()
    {
        return $this->services['app.form.type.media_list'] = new \AppBundle\Form\Type\MediaTypeList();
    }
    protected function getApp_Form_Type_MenuTreeService()
    {
        return $this->services['app.form.type.menu_tree'] = new \AppBundle\Form\Type\MenuTreeType($this->get('doctrine'));
    }
    protected function getApp_Form_Type_MetroVideoTourItemService()
    {
        $this->services['app.form.type.metro_video_tour_item'] = $instance = new \AppBundle\Form\Type\MetroVideoTourItemType();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getApp_Form_Type_ReCaptchaService()
    {
        return $this->services['app.form.type.re_captcha'] = new \AppBundle\Form\Type\ReCaptchaType($this->get('appbundle\form\extension\yandexcaptcha'));
    }
    protected function getApp_Form_Type_RoadTypeService()
    {
        return $this->services['app.form.type.road_type'] = new \AppBundle\Form\Type\RoadTypeType();
    }
    protected function getApp_InforgaphicsxlsxService()
    {
        return $this->services['app.inforgaphicsxlsx'] = new \ApiBundle\PresentationLayer\Xlsx\InforgaphicsXlsx($this);
    }
    protected function getApp_Kernal_Listener_SeoService()
    {
        return $this->services['app.kernal.listener.seo'] = new \AppBundle\Event\SeoListener($this);
    }
    protected function getApp_MakeTraitRelationsBidirectionalSubscriberService()
    {
        return $this->services['app.make_trait_relations_bidirectional_subscriber'] = new \AppBundle\Model\Doctrine\MakeRelatedTraitAssociationsBidirectionalSubscriber($this->get('annotations.reader'));
    }
    protected function getApp_Menu_FactoryExtension_LinkedEntityService()
    {
        return $this->services['app.menu.factory_extension.linked_entity'] = new \AppBundle\Menu\Factory\LinkedEntityExtension($this->get('app.entity_url_generator'));
    }
    protected function getApp_Menu_MatcherVoter_SubrouteService()
    {
        return $this->services['app.menu.matcher_voter.subroute'] = new \Amg\Bundle\PageBundle\Menu\Matcher\Voter\SubrouteVoter();
    }
    protected function getApp_Menu_Provider_GskService()
    {
        return $this->services['app.menu.provider.gsk'] = new \AppBundle\Menu\Provider\GskMenuProvider($this->get('doctrine.orm.default_entity_manager'), $this->get('knp_menu.factory'));
    }
    protected function getApp_Mobile_Embeddable_GalleryService()
    {
        return $this->services['app.mobile.embeddable.gallery'] = new \Stroi\MobileBundle\Content\EmbeddableGallery($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getApp_Mobile_EmbedderService()
    {
        $this->services['app.mobile.embedder'] = $instance = new \Stroi\MobileBundle\Content\Embedder(array('gallery' => $this->get('embeddable_gallery'), 'banner' => $this->get('embeddable_banner'), 'quote' => $this->get('embeddable_quote'), 'block' => $this->get('embeddable_block'), 'Faq\\FaqBlock' => $this->get('embeddable_faq_block'), 'infographics' => $this->get('embeddable_infographics')));
        $instance->setGalleryEmbedMobile($this->get('app.mobile.embeddable.gallery'));
        return $instance;
    }
    protected function getApp_Mobile_RoutingLoader_PostsListService()
    {
        return $this->services['app.mobile.routing_loader.posts_list'] = new \Stroi\MobileBundle\Routing\PostCategoryRouteLoader();
    }
    protected function getApp_Mobile_Twig_EmbedderService()
    {
        $this->services['app.mobile.twig.embedder'] = $instance = new \Stroi\MobileBundle\Twig\EmbedContentTwigExtension();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getApp_PostView_KernelListenerService()
    {
        return $this->services['app.post_view.kernel_listener'] = new \AppBundle\Statistic\PostViewListener($this->get('cmf_routing.router'), $this->get('doctrine.orm.default_entity_manager'), $this->get('crawler_detect'));
    }
    protected function getApp_Preview_HashGeneratorService()
    {
        return $this->services['app.preview.hash_generator'] = new \AppBundle\Security\PreviewHashGenerator('dfloiuygHJNKL-----------3hfdasfghghasdhfkfffffffffff');
    }
    protected function getApp_PublicationCatalogueService()
    {
        return $this->services['app.publication_catalogue'] = new \AppBundle\Model\PublicationCatalogue($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getApp_RecentPageManagerService()
    {
        return $this->services['app.recent_page_manager'] = new \AppBundle\RecentPage\RecentPageManager($this->get('request_stack'), $this->get('snc_redis.default'));
    }
    protected function getApp_Redirect_KernelListenerService()
    {
        return $this->services['app.redirect.kernel_listener'] = new \AppBundle\Redirect\RedirectKernelListener($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getApp_ReportBuilderService()
    {
        return $this->services['app.report_builder'] = new \AppBundle\Report\ReportBuilder($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getApp_Request_KernelListenerService()
    {
        return $this->services['app.request.kernel_listener'] = new \AppBundle\EventListener\RequestListener($this->get('cmf_routing.router'), $this->get('app.preview.hash_generator'), $this->get('doctrine.orm.default_entity_manager'), false, $this->get('twig'));
    }
    protected function getApp_Response_KernelListener_TextBlockReplaceListernerService()
    {
        return $this->services['app.response.kernel_listener.text_block_replace_listerner'] = new \AppBundle\EventListener\TextBlockReplaceListener($this->get('appbundle\service\textblockservice'));
    }
    protected function getApp_RoutingLoader_PostsListService()
    {
        return $this->services['app.routing_loader.posts_list'] = new \AppBundle\Routing\PostCategoryRouteLoader();
    }
    protected function getApp_RoutingLoader_SubordinateService()
    {
        return $this->services['app.routing_loader.subordinate'] = new \AppBundle\Routing\SubordinateRouteLoader();
    }
    protected function getApp_Search_BaseService()
    {
        return $this->services['app.search.base'] = new \AppBundle\Search\BaseSearchService($this);
    }
    protected function getApp_Search_ConstructionObjectService()
    {
        return $this->services['app.search.construction_object'] = new \AppBundle\Search\ConstructionObjectSearchService($this);
    }
    protected function getApp_Search_MetroStationsService()
    {
        return $this->services['app.search.metro_stations'] = new \AppBundle\Search\MetroStationsSearchService($this);
    }
    protected function getApp_Search_SuggesterService()
    {
        $this->services['app.search.suggester'] = $instance = new \AppBundle\Search\Suggester($this->get('doctrine.orm.default_entity_manager'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getApp_Security_AuthentucationLoggerService()
    {
        return $this->services['app.security.authentucation_logger'] = new \AppBundle\Security\AuthenticationLogger($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getApp_Serializer_Listener_ConstructionObjectService()
    {
        return $this->services['app.serializer.listener.construction_object'] = new \AppBundle\Event\Serializer\ConstructionObjectListener($this->get('app.entity_url_generator'));
    }
    protected function getApp_SitemapListenerService()
    {
        return $this->services['app.sitemap_listener'] = new \AppBundle\Seo\SitemapListener($this->get('doctrine.orm.default_entity_manager'), $this->get('app.entity_url_generator'));
    }
    protected function getApp_SortconverterService()
    {
        return $this->services['app.sortconverter'] = new \ApiBundle\InfrastructureLayer\Converter\ConverterKendoGridStateToDoctrineCriteria\SortConverter();
    }
    protected function getApp_Validator_NewsletterPostCollectionService()
    {
        return $this->services['app.validator.newsletter_post_collection'] = new \AppBundle\Constraints\NewsletterPostsCollectionConstraintValidator($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getApp_Validator_OnMainPageService()
    {
        return $this->services['app.validator.on_main_page'] = new \AppBundle\Validator\OnMainPageValidator($this->get('doctrine'), $this->get('translator.default'), $this->get('request_stack'));
    }
    protected function getAppbundle_Admin_Newsletter_PostssincepreviousnewsletterproviderService()
    {
        return $this->services['appbundle\admin\newsletter\postssincepreviousnewsletterprovider'] = new \AppBundle\Admin\Newsletter\PostsSincePreviousNewsletterProvider($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getAppbundle_Eventsubscriber_TextblockusagedoctrinesubscriberService()
    {
        return $this->services['appbundle\eventsubscriber\textblockusagedoctrinesubscriber'] = new \AppBundle\EventSubscriber\TextBlockUsageDoctrineSubscriber($this->get('appbundle\service\textblockservice'), array('interfaces' => array(0 => 'Amg\\DataCore\\Model\\Publishable\\PublishableInterface'), 'exclude' => array(0 => 'AppBundle\\Entity\\MenuNode')));
    }
    protected function getAppbundle_Form_Extension_YandexcaptchaService()
    {
        return $this->services['appbundle\form\extension\yandexcaptcha'] = new \AppBundle\Form\Extension\YandexCaptcha('pa5HzaIaNvURE823drHhGxujvdvwmpG9Kyuzb4yb');
    }
    protected function getAppbundle_Service_TextblockserviceService()
    {
        return $this->services['appbundle\service\textblockservice'] = new \AppBundle\Service\TextBlockService($this->get('doctrine'));
    }
    protected function getAssetic_AssetManagerService()
    {
        $this->services['assetic.asset_manager'] = $instance = new \Assetic\Factory\LazyAssetManager($this->get('assetic.asset_factory'), array('twig' => new \Assetic\Factory\Loader\CachedFormulaLoader(new \Assetic\Extension\Twig\TwigFormulaLoader($this->get('twig'), $this->get('monolog.logger.assetic', ContainerInterface::NULL_ON_INVALID_REFERENCE)), new \Assetic\Cache\ConfigCache((__DIR__.'/assetic/config')), false)));
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($this->get('templating.loader'), '', ($this->targetDirs[2].'/Resources/views'), '/\\.[^.]+\\.twig$/'), 'twig');
        return $instance;
    }
    protected function getAssetic_Filter_CssrewriteService()
    {
        return $this->services['assetic.filter.cssrewrite'] = new \Assetic\Filter\CssRewriteFilter();
    }
    protected function getAssetic_Filter_LessphpService()
    {
        $this->services['assetic.filter.lessphp'] = $instance = new \Assetic\Filter\LessphpFilter();
        $instance->setPresets(array());
        $instance->setLoadPaths(array());
        $instance->setFormatter('compressed');
        $instance->setPreserveComments(false);
        return $instance;
    }
    protected function getAssetic_FilterManagerService()
    {
        return $this->services['assetic.filter_manager'] = new \Symfony\Bundle\AsseticBundle\FilterManager($this, array('cssrewrite' => 'assetic.filter.cssrewrite', 'lessphp' => 'assetic.filter.lessphp'));
    }
    protected function getAssets_VersionDefaultService()
    {
        return $this->services['assets._version__default'] = new \Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy(20250205154133, '%s?%s');
    }
    protected function getAssets_ContextService()
    {
        return $this->services['assets.context'] = new \Symfony\Component\Asset\Context\RequestStackContext($this->get('request_stack'));
    }
    protected function getAssets_PackagesService()
    {
        return $this->services['assets.packages'] = new \Symfony\Component\Asset\Packages(new \Symfony\Component\Asset\PathPackage('', $this->get('assets._version__default'), $this->get('assets.context')), array());
    }
    protected function getAuditReaderService()
    {
        return $this->services['audit_reader'] = $this->get('simplethings_entityaudit.manager')->createAuditReader($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getBannerAnnouncementsDkService()
    {
        $this->services['banner_announcements_dk'] = $instance = new \AppBundle\Block\BannerAnnouncmentsDkBlock('banner_announcements_dk', $this->get('templating'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getCacheClearerService()
    {
        return $this->services['cache_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer(array());
    }
    protected function getCacheWarmerService()
    {
        return $this->services['cache_warmer'] = new \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate(array(0 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer(new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder($this->get('kernel'), $this->get('templating.filename_parser'), ($this->targetDirs[2].'/Resources')), $this->get('templating.locator')), 1 => new \Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer($this), 2 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer($this->get('translator.default')), 3 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer($this->get('cmf_routing.router')), 4 => new \Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer($this->get('doctrine')), 5 => $this->get('sonata.admin.route.cache_warmup')));
    }
    protected function getCategoryRepositoryService()
    {
        return $this->services['category_repository'] = $this->get('doctrine.orm.default_entity_manager')->getRepository('AppBundle\\Entity\\Category');
    }
    protected function getCmfRouting_RouteTypeFormTypeService()
    {
        return $this->services['cmf_routing.route_type_form_type'] = new \Symfony\Cmf\Bundle\RoutingBundle\Form\Type\RouteTypeType();
    }
    protected function getCmfRouting_RouterService()
    {
        $this->services['cmf_routing.router'] = $instance = new \Symfony\Cmf\Component\Routing\ChainRouter($this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->setContext($this->get('router.request_context'));
        $instance->add($this->get('router.default'), '200');
        $instance->add($this->get('amg_page.router'), '100');
        return $instance;
    }
    protected function getConstructionListService()
    {
        $this->services['construction_list'] = $instance = new \AppBundle\Block\ConstructionListBlock('construction_list', $this->get('templating'));
        $instance->setRequestStack($this->get('request_stack'));
        $instance->setSearchService($this->get('app.search.construction_object'));
        return $instance;
    }
    protected function getContactPersonListService()
    {
        $this->services['contact_person_list'] = $instance = new \AppBundle\Block\ContactPersonListBlock('contact_person_list', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRequestStack($this->get('request_stack'));
        return $instance;
    }
    protected function getCrawlerDetectService()
    {
        return $this->services['crawler_detect'] = new \Nmure\CrawlerDetectBundle\CrawlerDetect\CrawlerDetect($this->get('request_stack'));
    }
    protected function getDebug_DebugHandlersListenerService()
    {
        return $this->services['debug.debug_handlers_listener'] = new \Symfony\Component\HttpKernel\EventListener\DebugHandlersListener('', $this->get('monolog.logger.php', ContainerInterface::NULL_ON_INVALID_REFERENCE), 85, NULL, true, NULL);
    }
    protected function getDebug_StopwatchService()
    {
        return $this->services['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch();
    }
    protected function getDestructionBannerService()
    {
        return $this->services['destruction_banner'] = new \AppBundle\Block\DestructionBannerBlock('destruction_banner', $this->get('templating'));
    }
    protected function getDoctrineService()
    {
        return $this->services['doctrine'] = new \Doctrine\Bundle\DoctrineBundle\Registry($this, array('default' => 'doctrine.dbal.default_connection'), array('default' => 'doctrine.orm.default_entity_manager'), 'default', 'default');
    }
    protected function getDoctrine_Dbal_ConnectionFactoryService()
    {
        return $this->services['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory(array('json' => array('class' => 'Sonata\\Doctrine\\Types\\JsonType', 'commented' => true), 'multipolygon' => array('class' => 'CrEOF\\Spatial\\DBAL\\Types\\Geometry\\MultiPolygonType', 'commented' => true), 'geometry' => array('class' => 'CrEOF\\Spatial\\DBAL\\Types\\GeometryType', 'commented' => true), 'point' => array('class' => 'CrEOF\\Spatial\\DBAL\\Types\\Geometry\\PointType', 'commented' => true)));
    }
    protected function getDoctrine_Dbal_DefaultConnectionService()
    {
        $a = $this->get('annotation_reader');
        $b = $this->get('fos_elastica.indexable');
        $c = new \Knp\DoctrineBehaviors\Reflection\ClassAnalyzer();
        $d = new \Gedmo\Sluggable\SluggableListener();
        $d->setAnnotationReader($a);
        $e = new \Gedmo\Timestampable\TimestampableListener();
        $e->setAnnotationReader($a);
        $f = new \Gedmo\Sortable\SortableListener();
        $f->setAnnotationReader($a);
        $g = new \Gedmo\Tree\TreeListener();
        $g->setAnnotationReader($a);
        $h = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($this);
        $h->addEventSubscriber($this->get('simplethings_entityaudit.log_revisions_listener'));
        $h->addEventSubscriber(new \Knp\DoctrineBehaviors\ORM\Translatable\TranslatableSubscriber($c, true, new \Knp\DoctrineBehaviors\ORM\Translatable\CurrentLocaleCallable($this), new \Knp\DoctrineBehaviors\ORM\Translatable\DefaultLocaleCallable('ru'), 'Knp\\DoctrineBehaviors\\Model\\Translatable\\Translatable', 'Knp\\DoctrineBehaviors\\Model\\Translatable\\Translation', 'LAZY', 'LAZY'));
        $h->addEventSubscriber(new \Knp\DoctrineBehaviors\ORM\SoftDeletable\SoftDeletableSubscriber($c, true, 'Knp\\DoctrineBehaviors\\Model\\SoftDeletable\\SoftDeletable'));
        $h->addEventSubscriber($d);
        $h->addEventSubscriber(new \Knp\DoctrineBehaviors\ORM\Timestampable\TimestampableSubscriber($c, true, 'Knp\\DoctrineBehaviors\\Model\\Timestampable\\Timestampable'));
        $h->addEventSubscriber($this->get('sonata.easy_extends.doctrine.mapper'));
        $h->addEventSubscriber(new \Knp\DoctrineBehaviors\ORM\Tree\TreeSubscriber($c, true, 'Knp\\DoctrineBehaviors\\Model\\Tree\\Node'));
        $h->addEventSubscriber($e);
        $h->addEventSubscriber(new \Knp\DoctrineBehaviors\ORM\Sortable\SortableSubscriber($c, true, 'Knp\\DoctrineBehaviors\\Model\\Sortable\\Sortable'));
        $h->addEventSubscriber($f);
        $h->addEventSubscriber(new \Knp\DoctrineBehaviors\ORM\Blameable\BlameableSubscriber($c, true, 'Knp\\DoctrineBehaviors\\Model\\Blameable\\Blameable', new \Knp\DoctrineBehaviors\ORM\Blameable\UserCallable($this), NULL));
        $h->addEventSubscriber(new \FOS\UserBundle\Entity\UserListener($this));
        $h->addEventSubscriber(new \Knp\DoctrineBehaviors\ORM\Loggable\LoggableSubscriber($c, true, new \Knp\DoctrineBehaviors\ORM\Loggable\LoggerCallable($this->get('logger'))));
        $h->addEventSubscriber($this->get('sonata.media.doctrine.event_subscriber'));
        $h->addEventSubscriber(new \Knp\DoctrineBehaviors\ORM\Geocodable\GeocodableSubscriber($c, true, 'Knp\\DoctrineBehaviors\\Model\\Geocodable\\Geocodable', NULL));
        $h->addEventSubscriber($this->get('simplethings_entityaudit.create_schema_listener'));
        $h->addEventSubscriber(new \Knp\DoctrineBehaviors\ORM\Sluggable\SluggableSubscriber($c, true, 'Knp\\DoctrineBehaviors\\Model\\Sluggable\\Sluggable'));
        $h->addEventSubscriber($g);
        $h->addEventSubscriber($this->get('app.make_trait_relations_bidirectional_subscriber'));
        $h->addEventSubscriber($this->get('stof_doctrine_extensions.listener.loggable'));
        $h->addEventSubscriber($this->get('appbundle\eventsubscriber\textblockusagedoctrinesubscriber'));
        $h->addEventSubscriber($this->get('sonata.cache.orm.event_subscriber'));
        $h->addEventListener(array(0 => 'loadClassMetadata'), $this->get('doctrine.orm.default_listeners.attach_entity_listeners'));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.metro'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'metro'), NULL));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.post'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'post'), NULL));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.page'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'page'), NULL));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.infographics'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'infographics'), NULL));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.subordinate_publication'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'subordinate_publication'), NULL));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.video'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'video'), NULL));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.gallery'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'gallery'), NULL));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.law_document'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'law_document'), NULL));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.construction'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'construction'), NULL));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.draft_document'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'draft_document'), NULL));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.road'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'road'), NULL));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.decision_document'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'decision_document'), NULL));
        $h->addEventListener(array(0 => 'postPersist', 1 => 'postUpdate', 2 => 'preRemove', 3 => 'postFlush'), new \FOS\ElasticaBundle\Doctrine\Listener($this->get('fos_elastica.object_persister.app.administrative_unit'), $b, array('identifier' => 'id', 'indexName' => 'app', 'typeName' => 'administrative_unit'), NULL));
        return $this->services['doctrine.dbal.default_connection'] = $this->get('doctrine.dbal.connection_factory')->createConnection(array('driver' => 'pdo_mysql', 'host' => 'mysql', 'port' => NULL, 'dbname' => 'stroi_mos_ru', 'user' => 'stroi_mos_ru', 'password' => 'password', 'charset' => 'UTF8', 'driverOptions' => array()), new \Doctrine\DBAL\Configuration(), $h, array());
    }
    protected function getDoctrine_Orm_DefaultEntityListenerResolverService()
    {
        $this->services['doctrine.orm.default_entity_listener_resolver'] = $instance = new \Doctrine\ORM\Mapping\DefaultEntityListenerResolver();
        $instance->register($this->get('app.entity_listener.comment'));
        $instance->register($this->get('app.entity_listener.construction'));
        $instance->register($this->get('amg_admin.lock.entity_listener'));
        return $instance;
    }
    protected function getDoctrine_Orm_DefaultEntityManagerService()
    {
        $a = $this->get('annotation_reader');
        $b = new \Doctrine\ORM\Mapping\Driver\AnnotationDriver($a, array(0 => ($this->targetDirs[3].'/vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity'), 1 => ($this->targetDirs[3].'/src/Amg/Bundle/PageBundle/Entity'), 2 => ($this->targetDirs[3].'/src/Amg/Bundle/AdminBundle/Entity'), 3 => ($this->targetDirs[3].'/src/AppBundle/Entity'), 4 => ($this->targetDirs[3].'/src/Amg/Bundle/TagBundle/Entity')));
        $c = new \Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver(array(($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/doctrine') => 'FOS\\UserBundle\\Entity', ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/config/doctrine') => 'Sonata\\UserBundle\\Entity', ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/config/doctrine') => 'Sonata\\MediaBundle\\Entity', ($this->targetDirs[3].'/src/Application/Sonata/UserBundle/Resources/config/doctrine') => 'Application\\Sonata\\UserBundle\\Entity', ($this->targetDirs[3].'/src/Application/Sonata/MediaBundle/Resources/config/doctrine') => 'Application\\Sonata\\MediaBundle\\Entity'));
        $c->setGlobalBasename('mapping');
        $d = new \Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain();
        $d->addDriver($b, 'Gedmo\\Loggable\\Entity');
        $d->addDriver($b, 'Amg\\Bundle\\PageBundle\\Entity');
        $d->addDriver($b, 'Amg\\Bundle\\AdminBundle\\Entity');
        $d->addDriver($b, 'AppBundle\\Entity');
        $d->addDriver($b, 'Amg\\Bundle\\TagBundle\\Entity');
        $d->addDriver($c, 'FOS\\UserBundle\\Entity');
        $d->addDriver($c, 'Sonata\\UserBundle\\Entity');
        $d->addDriver($c, 'Sonata\\MediaBundle\\Entity');
        $d->addDriver($c, 'Application\\Sonata\\UserBundle\\Entity');
        $d->addDriver($c, 'Application\\Sonata\\MediaBundle\\Entity');
        $e = new \Doctrine\ORM\Configuration();
        $e->setEntityNamespaces(array('GedmoLoggable' => 'Gedmo\\Loggable\\Entity', 'FOSUserBundle' => 'FOS\\UserBundle\\Entity', 'SonataUserBundle' => 'Sonata\\UserBundle\\Entity', 'SonataMediaBundle' => 'Sonata\\MediaBundle\\Entity', 'ApplicationSonataUserBundle' => 'Application\\Sonata\\UserBundle\\Entity', 'ApplicationSonataMediaBundle' => 'Application\\Sonata\\MediaBundle\\Entity', 'AmgPageBundle' => 'Amg\\Bundle\\PageBundle\\Entity', 'AmgAdminBundle' => 'Amg\\Bundle\\AdminBundle\\Entity', 'AppBundle' => 'AppBundle\\Entity', 'AmgTagBundle' => 'Amg\\Bundle\\TagBundle\\Entity'));
        $e->setMetadataCacheImpl($this->get('doctrine_cache.providers.doctrine.orm.default_metadata_cache'));
        $e->setQueryCacheImpl($this->get('doctrine_cache.providers.doctrine.orm.default_query_cache'));
        $e->setResultCacheImpl($this->get('doctrine_cache.providers.doctrine.orm.default_result_cache'));
        $e->setMetadataDriverImpl($d);
        $e->setProxyDir((__DIR__.'/doctrine/orm/Proxies'));
        $e->setProxyNamespace('Proxies');
        $e->setAutoGenerateProxyClasses(false);
        $e->setClassMetadataFactoryName('Doctrine\\ORM\\Mapping\\ClassMetadataFactory');
        $e->setDefaultRepositoryClassName('Happyr\\DoctrineSpecification\\EntitySpecificationRepository');
        $e->setNamingStrategy(new \Amg\DataCore\ORM\UnderscoreWithNamedJoinTableNamedStrategy());
        $e->setQuoteStrategy(new \Doctrine\ORM\Mapping\DefaultQuoteStrategy());
        $e->setEntityListenerResolver($this->get('doctrine.orm.default_entity_listener_resolver'));
        $e->addCustomNumericFunction('st_intersects', 'CrEOF\\Spatial\\ORM\\Query\\AST\\Functions\\MySql\\STIntersects');
        $e->addCustomNumericFunction('geomfromtext', 'CrEOF\\Spatial\\ORM\\Query\\AST\\Functions\\MySql\\GeomFromText');
        $e->addCustomNumericFunction('astext', 'CrEOF\\Spatial\\ORM\\Query\\AST\\Functions\\MySql\\AsText');
        $e->addFilter('publishable', 'AppBundle\\DoctrineFilter\\Publishable');
        $e->addFilter('publishing_period', 'AppBundle\\DoctrineFilter\\PublishingPeriod');
        $e->addFilter('not_moved_to_trash', 'AppBundle\\DoctrineFilter\\NotMovedToTrash');
        $this->services['doctrine.orm.default_entity_manager'] = $instance = \Doctrine\ORM\EntityManager::create($this->get('doctrine.dbal.default_connection'), $e);
        $this->get('doctrine.orm.default_manager_configurator')->configure($instance);
        return $instance;
    }
    protected function getDoctrine_Orm_DefaultListeners_AttachEntityListenersService()
    {
        return $this->services['doctrine.orm.default_listeners.attach_entity_listeners'] = new \Doctrine\ORM\Tools\AttachEntityListenersListener();
    }
    protected function getDoctrine_Orm_DefaultManagerConfiguratorService()
    {
        return $this->services['doctrine.orm.default_manager_configurator'] = new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator(array(0 => 'publishable', 1 => 'publishing_period', 2 => 'not_moved_to_trash'), array());
    }
    protected function getDoctrine_Orm_Validator_UniqueService()
    {
        return $this->services['doctrine.orm.validator.unique'] = new \Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator($this->get('doctrine'));
    }
    protected function getDoctrine_Orm_ValidatorInitializerService()
    {
        return $this->services['doctrine.orm.validator_initializer'] = new \Symfony\Bridge\Doctrine\Validator\DoctrineInitializer($this->get('doctrine'));
    }
    protected function getDoctrineApcCacheService()
    {
        $this->services['doctrine_apc_cache'] = $instance = new \Doctrine\Common\Cache\ApcCache();
        $instance->setNamespace('202502051543177ba7075289c156c71599c9687a21904f');
        return $instance;
    }
    protected function getDoctrineCache_Providers_Doctrine_Orm_DefaultMetadataCacheService()
    {
        // Создаем новый объект Memcached
        $a = new \Memcached();
        $a->addServer('memcached', 11211); // Подключаемся к серверу Memcached

        // Настроим кэш Doctrine на основе Memcached
        $this->services['doctrine_cache.providers.doctrine.orm.default_metadata_cache'] = $instance = new \Doctrine\Common\Cache\MemcachedCache();
        $instance->setNamespace('sf2orm_default_78f0b27abb7965a66f18b728b00abb1001654b01afe635dfadd9ef85e8c42841');
        $instance->setMemcached($a); // Устанавливаем подключение к Memcached

        return $instance;
    }

    protected function getDoctrineCache_Providers_Doctrine_Orm_DefaultQueryCacheService()
    {
        // Создаем новый объект Memcached
        $a = new \Memcached();
        $a->addServer('memcached', 11211); // Подключаемся к серверу Memcached

        // Настроим кэш Doctrine для запросов
        $this->services['doctrine_cache.providers.doctrine.orm.default_query_cache'] = $instance = new \Doctrine\Common\Cache\MemcachedCache();
        $instance->setNamespace('sf2orm_default_78f0b27abb7965a66f18b728b00abb1001654b01afe635dfadd9ef85e8c42841');
        $instance->setMemcached($a); // Устанавливаем подключение к Memcached

        return $instance;
    }

    protected function getDoctrineCache_Providers_Doctrine_Orm_DefaultResultCacheService()
    {
        // Создаем новый объект Memcached
        $a = new \Memcached();
        $a->addServer('memcached', 11211); // Подключаемся к серверу Memcached

        // Настроим кэш Doctrine для результатов
        $this->services['doctrine_cache.providers.doctrine.orm.default_result_cache'] = $instance = new \Doctrine\Common\Cache\MemcachedCache();
        $instance->setNamespace('sf2orm_default_78f0b27abb7965a66f18b728b00abb1001654b01afe635dfadd9ef85e8c42841');
        $instance->setMemcached($a); // Устанавливаем подключение к Memcached

        return $instance;
    }
    protected function getDocumentListService()
    {
        $this->services['document_list'] = $instance = new \AppBundle\Block\DocumentListBlock('document_list', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRequestStack($this->get('request_stack'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEmailSubscriptionFormBlockService()
    {
        $this->services['email_subscription_form_block'] = $instance = new \AppBundle\Block\EmailSubscriptionFormBlock('email_subscription_form_block', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        return $instance;
    }
    protected function getEmbeddableBannerService()
    {
        return $this->services['embeddable_banner'] = new \AppBundle\Content\BaseEmbeddable($this->get('doctrine.orm.default_entity_manager'), 'AppBundle:EmbeddedContent\\Banner', ':widgets/embedabble:banner.html.twig');
    }
    protected function getEmbeddableBlockService()
    {
        return $this->services['embeddable_block'] = new \AppBundle\Content\CityDistrictsEmbeddableBlock($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getEmbeddableFaqBlockService()
    {
        return $this->services['embeddable_faq_block'] = new \AppBundle\Content\BaseEmbeddable($this->get('doctrine.orm.default_entity_manager'), 'AppBundle:EmbeddedContent\\Faq\\FaqBlock', ':widgets/embedabble:faq_block.html.twig');
    }
    protected function getEmbeddableGalleryService()
    {
        return $this->services['embeddable_gallery'] = new \AppBundle\Content\EmbeddableGallery($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getEmbeddableInfographicsService()
    {
        return $this->services['embeddable_infographics'] = new \AppBundle\Content\BaseEmbeddable($this->get('doctrine.orm.default_entity_manager'), 'AppBundle:Infographics', ':widgets/embedabble:infographics.html.twig');
    }
    protected function getEmbeddableQuoteService()
    {
        return $this->services['embeddable_quote'] = new \AppBundle\Content\BaseEmbeddable($this->get('doctrine.orm.default_entity_manager'), 'AppBundle:EmbeddedContent\\Quote', ':widgets/embedabble:quote.html.twig');
    }
    protected function getEmbedderService()
    {
        return $this->services['embedder'] = new \AppBundle\Content\Embedder(array('gallery' => $this->get('embeddable_gallery'), 'banner' => $this->get('embeddable_banner'), 'quote' => $this->get('embeddable_quote'), 'block' => $this->get('embeddable_block'), 'Faq\\FaqBlock' => $this->get('embeddable_faq_block'), 'infographics' => $this->get('embeddable_infographics')));
    }
    protected function getEventDispatcherService()
    {
        $this->services['event_dispatcher'] = $instance = new \Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher($this);
        $instance->addListenerService('presta_sitemap.populate', array(0 => 'app.sitemap_listener', 1 => 'populateSitemap'));
        $instance->addListenerService('console.command', array(0 => 'app.doctrine.filter.admin_configurator', 1 => 'onConsoleCommand'), 0);
        $instance->addListenerService('kernel.controller', array(0 => 'app.doctrine.filter.admin_configurator', 1 => 'onKernelController'), 10);
        $instance->addListenerService('kernel.request', array(0 => 'app.request.kernel_listener', 1 => 'onKernelRequest'), 11);
        $instance->addListenerService('kernel.response', array(0 => 'app.response.kernel_listener.text_block_replace_listerner', 1 => 'onKernelResponse'), 0);
        $instance->addListenerService('kernel.controller', array(0 => 'app.kernal.listener.seo', 1 => 'onKernelController'), -1);
        $instance->addListenerService('kernel.response', array(0 => 'app.recent_page_manager', 1 => 'onKernelResponse'), 0);
        $instance->addListenerService('kernel.exception', array(0 => 'app.redirect.kernel_listener', 1 => 'onKernelException'), 0);
        $instance->addListenerService('kernel.terminate', array(0 => 'app.post_view.kernel_listener', 1 => 'onKernelTerminate'), -1);
        $instance->addListenerService('kernel.response', array(0 => 'set_private_response_listener', 1 => 'onKernelResponse'), 0);
        $instance->addListenerService('kernel.exception', array(0 => 'app.exception_listener', 1 => 'onKernelException'), 2);
        $instance->addListenerService('kernel.terminate', array(0 => 'monolog.handler.swift', 1 => 'onKernelTerminate'), 0);
        $instance->addListenerService('console.terminate', array(0 => 'monolog.handler.swift', 1 => 'onCliTerminate'), 0);
        $instance->addListenerService('security.interactive_login', array(0 => 'fos_user.security.interactive_login_listener', 1 => 'onSecurityInteractiveLogin'), 0);
        $instance->addListenerService('kernel.response', array(0 => 'sonata.block.cache.handler.default', 1 => 'onKernelResponse'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'knp_menu.listener.voters', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'simplethings_entityaudit.request.current_user_listener', 1 => 'handle'), 0);
        $instance->addListenerService('sonata.block.event.breadcrumb', array(0 => 'sonata.seo.event.breadcrumb', 1 => 'onBlock'), 0);
        $instance->addListenerService('kernel.request', array(0 => 'sentry.exception_listener', 1 => 'onKernelRequest'), 0);
        $instance->addListenerService('kernel.exception', array(0 => 'sentry.exception_listener', 1 => 'onKernelException'), 0);
        $instance->addListenerService('console.command', array(0 => 'sentry.exception_listener', 1 => 'onConsoleCommand'), 0);
        $instance->addListenerService('console.exception', array(0 => 'sentry.exception_listener', 1 => 'onConsoleException'), 0);
        $instance->addSubscriberService('response_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener');
        $instance->addSubscriberService('streamed_response_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\StreamedResponseListener');
        $instance->addSubscriberService('locale_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener');
        $instance->addSubscriberService('translator_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\TranslatorListener');
        $instance->addSubscriberService('session_listener', 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\SessionListener');
        $instance->addSubscriberService('session.save_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\SaveSessionListener');
        $instance->addSubscriberService('fragment.listener', 'Symfony\\Component\\HttpKernel\\EventListener\\FragmentListener');
        $instance->addSubscriberService('router_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener');
        $instance->addSubscriberService('debug.debug_handlers_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\DebugHandlersListener');
        $instance->addSubscriberService('security.firewall', 'Symfony\\Component\\Security\\Http\\Firewall');
        $instance->addSubscriberService('security.rememberme.response_listener', 'Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener');
        $instance->addSubscriberService('twig.exception_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener');
        $instance->addSubscriberService('swiftmailer.email_sender.listener', 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener');
        $instance->addSubscriberService('sensio_framework_extra.controller.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ControllerListener');
        $instance->addSubscriberService('sensio_framework_extra.converter.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ParamConverterListener');
        $instance->addSubscriberService('sensio_framework_extra.view.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\TemplateListener');
        $instance->addSubscriberService('sensio_framework_extra.cache.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\HttpCacheListener');
        $instance->addSubscriberService('sensio_framework_extra.security.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\SecurityListener');
        $instance->addSubscriberService('stof_doctrine_extensions.event_listener.logger', 'Stof\\DoctrineExtensionsBundle\\EventListener\\LoggerListener');
        return $instance;
    }
    protected function getFileLocatorService()
    {
        return $this->services['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator($this->get('kernel'), ($this->targetDirs[2].'/Resources'));
    }
    protected function getFilesystemService()
    {
        return $this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem();
    }
    protected function getForm_CsrfProviderService()
    {
        return $this->services['form.csrf_provider'] = new \Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter($this->get('security.csrf.token_manager'));
    }
    protected function getForm_FactoryService()
    {
        return $this->services['form.factory'] = new \Symfony\Component\Form\FormFactory($this->get('form.registry'), $this->get('form.resolved_type_factory'));
    }
    protected function getForm_RegistryService()
    {
        return $this->services['form.registry'] = new \Symfony\Component\Form\FormRegistry(array(0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension($this, array('sonata_comment_status' => 'admin.form.comment_status_type', 'copy_content_button' => 'app.form.type.copy_content_button', 'address' => 'app.form.type.address', 'geopoint' => 'app.form.type.geopoint', 'construction_status' => 'app.form.type.construction_status', 'road_type' => 'app.form.type.road_type', 'entity_reference' => 'app.form.type.entity_reference', 'menu_tree' => 'app.form.type.menu_tree', 'media_category_tree' => 'app.form.type.media_category_tree', 'metro_video_tour_item' => 'app.form.type.metro_video_tour_item', 'ajax_autocomplete' => 'app.form.type.ajax_autocomplete', 'construction_data_text' => 'app.form.type.construction_data_text', 'construction_data_choice' => 'app.form.type.construction_data_choice', 'administrative_unit_choice' => 'app.form.type.administrative_unit_choice', 'construction_data_geo_point' => 'app.form.type.construction_data_geo_point', 'construction_data_geo_polygon' => 'app.form.type.construction_data_geo_polygon', 'contact_information' => 'app.form.type.contact_information', 'sonata_type_choice_field_mask' => 'sonata.admin.doctrine_orm.form.type.choice_field_mask', 'media_collection' => 'app.form.type.media_collection', 'media_list' => 'app.form.type.media_list', 'error_report' => 'app.form.type.error_report', 'hyperlink' => 'app.form.type.hyperlink', 'collection_list' => 'app.form.type.collection_list', 'gif_generator' => 'app.form.type.gif_generator', 're_captcha' => 'app.form.type.re_captcha', 'sonata_security_roles' => 'sonata.user.form.type.security_roles', 'form' => 'form.type.form', 'birthday' => 'form.type.birthday', 'checkbox' => 'form.type.checkbox', 'choice' => 'form.type.choice', 'collection' => 'form.type.collection', 'country' => 'form.type.country', 'date' => 'form.type.date', 'datetime' => 'form.type.datetime', 'email' => 'form.type.email', 'file' => 'form.type.file', 'hidden' => 'form.type.hidden', 'integer' => 'form.type.integer', 'language' => 'form.type.language', 'locale' => 'form.type.locale', 'money' => 'form.type.money', 'number' => 'form.type.number', 'password' => 'form.type.password', 'percent' => 'form.type.percent', 'radio' => 'form.type.radio', 'repeated' => 'form.type.repeated', 'search' => 'form.type.search', 'textarea' => 'form.type.textarea', 'text' => 'form.type.text', 'time' => 'form.type.time', 'timezone' => 'form.type.timezone', 'url' => 'form.type.url', 'button' => 'form.type.button', 'submit' => 'form.type.submit', 'reset' => 'form.type.reset', 'currency' => 'form.type.currency', 'entity' => 'form.type.entity', 'fos_user_username' => 'fos_user.username_form_type', 'fos_user_profile' => 'fos_user.profile.form.type', 'fos_user_registration' => 'fos_user.registration.form.type', 'fos_user_change_password' => 'fos_user.change_password.form.type', 'fos_user_resetting' => 'fos_user.resetting.form.type', 'fos_user_group' => 'fos_user.group.form.type', 'sonata_type_immutable_array' => 'sonata.core.form.type.array', 'sonata_type_boolean' => 'sonata.core.form.type.boolean', 'sonata_type_collection' => 'sonata.core.form.type.collection', 'sonata_type_translatable_choice' => 'sonata.core.form.type.translatable_choice', 'sonata_type_date_range' => 'sonata.core.form.type.date_range', 'sonata_type_datetime_range' => 'sonata.core.form.type.datetime_range', 'sonata_type_date_picker' => 'sonata.core.form.type.date_picker', 'sonata_type_datetime_picker' => 'sonata.core.form.type.datetime_picker', 'sonata_type_date_range_picker' => 'sonata.core.form.type.date_range_picker', 'sonata_type_datetime_range_picker' => 'sonata.core.form.type.datetime_range_picker', 'sonata_type_equal' => 'sonata.core.form.type.equal', 'sonata_type_color_selector' => 'sonata.core.form.type.color_selector', 'sonata_block_service_choice' => 'sonata.block.form.type.block', 'sonata_type_container_template_choice' => 'sonata.block.form.type.container_template', 'sonata_type_admin' => 'sonata.admin.form.type.admin', 'sonata_type_model' => 'sonata.admin.form.type.model_choice', 'sonata_type_model_list' => 'sonata.admin.form.type.model_list', 'sonata_type_model_reference' => 'sonata.admin.form.type.model_reference', 'sonata_type_model_hidden' => 'sonata.admin.form.type.model_hidden', 'sonata_type_model_autocomplete' => 'sonata.admin.form.type.model_autocomplete', 'sonata_type_native_collection' => 'sonata.admin.form.type.collection', 'sonata_type_filter_number' => 'sonata.admin.form.filter.type.number', 'sonata_type_filter_choice' => 'sonata.admin.form.filter.type.choice', 'sonata_type_filter_default' => 'sonata.admin.form.filter.type.default', 'sonata_type_filter_date' => 'sonata.admin.form.filter.type.date', 'sonata_type_filter_date_range' => 'sonata.admin.form.filter.type.daterange', 'sonata_type_filter_datetime' => 'sonata.admin.form.filter.type.datetime', 'sonata_type_filter_datetime_range' => 'sonata.admin.form.filter.type.datetime_range', 'sonata_user_profile' => 'sonata.user.profile.form.type', 'sonata_user_gender' => 'sonata.user.form.gender_list', 'sonata_user_registration' => 'sonata.user.registration.form.type', 'sonata_media_type' => 'sonata.media.form.type.media', 'sonata_media_api_form_doctrine_media' => 'sonata.media.api.form.type.doctrine.media', 'sonata_media_api_form_media' => 'sonata.media.api.form.type.media', 'sonata_media_api_form_gallery' => 'sonata.media.api.form.type.gallery', 'sonata_media_api_form_gallery_has_media' => 'sonata.media.api.form.type.gallery_has_media', 'ckeditor' => 'ivory_ck_editor.form.type', 'sonata_formatter_type' => 'sonata.formatter.form.type.selector', 'cmf_routing_route_type' => 'cmf_routing.route_type_form_type', 'page_tree' => 'amg_page.form.type.page', 'liip_imagine_image' => 'liip_imagine.form.type.image', 'date_range' => 'amg_form.type.date_range', 'amg_filter_date_range' => 'amg_form.type.filter_date_range', 'elfinder' => 'amg_form.type.elfinder', 'app_file' => 'amg_form.type.file'), array('app.form.extension.image_type' => array(0 => 'app.form.extension.image_type'), 'form' => array(0 => 'form.type_extension.form.http_foundation', 1 => 'form.type_extension.form.validator', 2 => 'form.type_extension.csrf', 3 => 'sonata.admin.form.extension.field', 4 => 'sonata.admin.form.extension.field.mopa'), 'repeated' => array(0 => 'form.type_extension.repeated.validator'), 'submit' => array(0 => 'form.type_extension.submit.validator')), array(0 => 'form.type_guesser.validator', 1 => 'form.type_guesser.doctrine'))), $this->get('form.resolved_type_factory'));
    }
    protected function getForm_ResolvedTypeFactoryService()
    {
        return $this->services['form.resolved_type_factory'] = new \Symfony\Component\Form\ResolvedFormTypeFactory();
    }
    protected function getForm_Type_BirthdayService()
    {
        return $this->services['form.type.birthday'] = new \Symfony\Component\Form\Extension\Core\Type\BirthdayType();
    }
    protected function getForm_Type_ButtonService()
    {
        return $this->services['form.type.button'] = new \Symfony\Component\Form\Extension\Core\Type\ButtonType();
    }
    protected function getForm_Type_CheckboxService()
    {
        return $this->services['form.type.checkbox'] = new \Symfony\Component\Form\Extension\Core\Type\CheckboxType();
    }
    protected function getForm_Type_ChoiceService()
    {
        return $this->services['form.type.choice'] = new \Symfony\Component\Form\Extension\Core\Type\ChoiceType();
    }
    protected function getForm_Type_CollectionService()
    {
        return $this->services['form.type.collection'] = new \Symfony\Component\Form\Extension\Core\Type\CollectionType();
    }
    protected function getForm_Type_CountryService()
    {
        return $this->services['form.type.country'] = new \Symfony\Component\Form\Extension\Core\Type\CountryType();
    }
    protected function getForm_Type_CurrencyService()
    {
        return $this->services['form.type.currency'] = new \Symfony\Component\Form\Extension\Core\Type\CurrencyType();
    }
    protected function getForm_Type_DateService()
    {
        return $this->services['form.type.date'] = new \Symfony\Component\Form\Extension\Core\Type\DateType();
    }
    protected function getForm_Type_DatetimeService()
    {
        return $this->services['form.type.datetime'] = new \Symfony\Component\Form\Extension\Core\Type\DateTimeType();
    }
    protected function getForm_Type_EmailService()
    {
        return $this->services['form.type.email'] = new \Symfony\Component\Form\Extension\Core\Type\EmailType();
    }
    protected function getForm_Type_EntityService()
    {
        return $this->services['form.type.entity'] = new \Symfony\Bridge\Doctrine\Form\Type\EntityType($this->get('doctrine'));
    }
    protected function getForm_Type_FileService()
    {
        return $this->services['form.type.file'] = new \Symfony\Component\Form\Extension\Core\Type\FileType();
    }
    protected function getForm_Type_FormService()
    {
        return $this->services['form.type.form'] = new \Symfony\Component\Form\Extension\Core\Type\FormType($this->get('property_accessor'));
    }
    protected function getForm_Type_HiddenService()
    {
        return $this->services['form.type.hidden'] = new \Symfony\Component\Form\Extension\Core\Type\HiddenType();
    }
    protected function getForm_Type_IntegerService()
    {
        return $this->services['form.type.integer'] = new \Symfony\Component\Form\Extension\Core\Type\IntegerType();
    }
    protected function getForm_Type_LanguageService()
    {
        return $this->services['form.type.language'] = new \Symfony\Component\Form\Extension\Core\Type\LanguageType();
    }
    protected function getForm_Type_LocaleService()
    {
        return $this->services['form.type.locale'] = new \Symfony\Component\Form\Extension\Core\Type\LocaleType();
    }
    protected function getForm_Type_MoneyService()
    {
        return $this->services['form.type.money'] = new \Symfony\Component\Form\Extension\Core\Type\MoneyType();
    }
    protected function getForm_Type_NumberService()
    {
        return $this->services['form.type.number'] = new \Symfony\Component\Form\Extension\Core\Type\NumberType();
    }
    protected function getForm_Type_PasswordService()
    {
        return $this->services['form.type.password'] = new \Symfony\Component\Form\Extension\Core\Type\PasswordType();
    }
    protected function getForm_Type_PercentService()
    {
        return $this->services['form.type.percent'] = new \Symfony\Component\Form\Extension\Core\Type\PercentType();
    }
    protected function getForm_Type_RadioService()
    {
        return $this->services['form.type.radio'] = new \Symfony\Component\Form\Extension\Core\Type\RadioType();
    }
    protected function getForm_Type_RepeatedService()
    {
        return $this->services['form.type.repeated'] = new \Symfony\Component\Form\Extension\Core\Type\RepeatedType();
    }
    protected function getForm_Type_ResetService()
    {
        return $this->services['form.type.reset'] = new \Symfony\Component\Form\Extension\Core\Type\ResetType();
    }
    protected function getForm_Type_SearchService()
    {
        return $this->services['form.type.search'] = new \Symfony\Component\Form\Extension\Core\Type\SearchType();
    }
    protected function getForm_Type_SubmitService()
    {
        return $this->services['form.type.submit'] = new \Symfony\Component\Form\Extension\Core\Type\SubmitType();
    }
    protected function getForm_Type_TextService()
    {
        return $this->services['form.type.text'] = new \Symfony\Component\Form\Extension\Core\Type\TextType();
    }
    protected function getForm_Type_TextareaService()
    {
        return $this->services['form.type.textarea'] = new \Symfony\Component\Form\Extension\Core\Type\TextareaType();
    }
    protected function getForm_Type_TimeService()
    {
        return $this->services['form.type.time'] = new \Symfony\Component\Form\Extension\Core\Type\TimeType();
    }
    protected function getForm_Type_TimezoneService()
    {
        return $this->services['form.type.timezone'] = new \Symfony\Component\Form\Extension\Core\Type\TimezoneType();
    }
    protected function getForm_Type_UrlService()
    {
        return $this->services['form.type.url'] = new \Symfony\Component\Form\Extension\Core\Type\UrlType();
    }
    protected function getForm_TypeExtension_CsrfService()
    {
        return $this->services['form.type_extension.csrf'] = new \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension($this->get('security.csrf.token_manager'), true, '_token', $this->get('translator.default'), 'validators');
    }
    protected function getForm_TypeExtension_Form_HttpFoundationService()
    {
        return $this->services['form.type_extension.form.http_foundation'] = new \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension(new \Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler(new \Symfony\Component\Form\Util\ServerParams($this->get('request_stack'))));
    }
    protected function getForm_TypeExtension_Form_ValidatorService()
    {
        return $this->services['form.type_extension.form.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension($this->get('validator'));
    }
    protected function getForm_TypeExtension_Repeated_ValidatorService()
    {
        return $this->services['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension();
    }
    protected function getForm_TypeExtension_Submit_ValidatorService()
    {
        return $this->services['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension();
    }
    protected function getForm_TypeGuesser_DoctrineService()
    {
        return $this->services['form.type_guesser.doctrine'] = new \Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser($this->get('doctrine'));
    }
    protected function getForm_TypeGuesser_ValidatorService()
    {
        return $this->services['form.type_guesser.validator'] = new \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser($this->get('validator'));
    }
    protected function getFosElastica_AliasProcessorService()
    {
        return $this->services['fos_elastica.alias_processor'] = new \FOS\ElasticaBundle\Index\AliasProcessor();
    }
    protected function getFosElastica_Client_DefaultService()
    {
        $this->services['fos_elastica.client.default'] = $instance = new \FOS\ElasticaBundle\Elastica\Client(array('connections' => array(0 => array('host' => 'elasticsearch', 'port' => 9200, 'logger' => false, 'headers' => array())), 'connectionStrategy' => 'Simple'), '');
        $instance->setStopwatch($this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        return $instance;
    }
    protected function getFosElastica_ConfigManagerService()
    {
        return $this->services['fos_elastica.config_manager'] = new \FOS\ElasticaBundle\Configuration\ConfigManager(array(0 => new \FOS\ElasticaBundle\Configuration\Source\ContainerSource(array('app' => array('elasticsearch_name' => 'stroi_mos_ru', 'reference' => $this->get('fos_elastica.index.app'), 'name' => 'app', 'settings' => array('index' => array('analysis' => array('char_filter' => array('ru' => array('type' => 'mapping', 'mappings' => array(0 => 'Ё=>Е', 1 => 'ё=>е'))), 'analyzer' => array('document_number' => array('type' => 'custom', 'filter' => array(0 => 'lowercase', 1 => 'custom_word_delimiter'), 'tokenizer' => 'keyword'), 'default_index' => array('type' => 'custom', 'tokenizer' => 'standard', 'filter' => array(0 => 'stopwords_ru', 1 => 'stopwords_en', 2 => 'custom_word_delimiter', 3 => 'lowercase', 4 => 'russian_morphology', 5 => 'english_morphology'), 'char_filter' => array(0 => 'html_strip', 1 => 'ru')), 'default_search' => array('type' => 'custom', 'tokenizer' => 'standard', 'filter' => array(0 => 'stopwords_ru', 1 => 'stopwords_en', 2 => 'custom_word_delimiter', 3 => 'lowercase', 4 => 'russian_morphology', 5 => 'english_morphology'), 'char_filter' => array(0 => 'html_strip', 1 => 'ru')), 'address_index' => array('type' => 'custom', 'tokenizer' => 'standard', 'filter' => array(0 => 'lowercase', 1 => 'custom_word_delimiter', 2 => 'address_synonym', 3 => 'stopwords_ru', 4 => 'stopwords_address', 5 => 'address_ngram'), 'char_filter' => array(0 => 'ru')), 'address_search' => array('type' => 'custom', 'tokenizer' => 'standard', 'filter' => array(0 => 'lowercase', 1 => 'custom_word_delimiter', 2 => 'address_synonym', 3 => 'stopwords_ru', 4 => 'stopwords_address'), 'char_filter' => array(0 => 'ru')), 'addres_info_index' => array('type' => 'custom', 'tokenizer' => 'standard', 'filter' => array(0 => 'lowercase', 1 => 'custom_word_delimiter', 2 => 'english_morphology', 3 => 'russian_morphology', 4 => 'stopwords_ru', 5 => 'stopwords_en', 6 => 'stopwords_address'), 'char_filter' => array(0 => 'html_strip', 1 => 'ru'))), 'filter' => array('address_ngram' => array('type' => 'edgeNGram', 'min_gram' => 1, 'max_gram' => 20), 'stemmer_ru' => array('type' => 'snowball', 'language' => 'russian'), 'stemmer_en' => array('type' => 'snowball', 'language' => 'english'), 'stopwords_ru' => array('type' => 'stop', 'stopwords' => array(0 => 'а', 1 => 'без', 2 => 'более', 3 => 'бы', 4 => 'был', 5 => 'была', 6 => 'были', 7 => 'было', 8 => 'быть', 9 => 'в', 10 => 'вам', 11 => 'вас', 12 => 'весь', 13 => 'во', 14 => 'вот', 15 => 'все', 16 => 'всего', 17 => 'всех', 18 => 'вы', 19 => 'где', 20 => 'да', 21 => 'даже', 22 => 'для', 23 => 'до', 24 => 'его', 25 => 'ее', 26 => 'если', 27 => 'есть', 28 => 'еще', 29 => 'же', 30 => 'за', 31 => 'здесь', 32 => 'и', 33 => 'из', 34 => 'или', 35 => 'им', 36 => 'их', 37 => 'к', 38 => 'как', 39 => 'ко', 40 => 'когда', 41 => 'кто', 42 => 'ли', 43 => 'либо', 44 => 'мне', 45 => 'может', 46 => 'мы', 47 => 'на', 48 => 'надо', 49 => 'наш', 50 => 'не', 51 => 'него', 52 => 'нее', 53 => 'нет', 54 => 'ни', 55 => 'них', 56 => 'но', 57 => 'ну', 58 => 'о', 59 => 'об', 60 => 'однако', 61 => 'он', 62 => 'она', 63 => 'они', 64 => 'оно', 65 => 'от', 66 => 'очень', 67 => 'по', 68 => 'под', 69 => 'при', 70 => 'с', 71 => 'со', 72 => 'так', 73 => 'также', 74 => 'такой', 75 => 'там', 76 => 'те', 77 => 'тем', 78 => 'то', 79 => 'того', 80 => 'тоже', 81 => 'той', 82 => 'только', 83 => 'том', 84 => 'ты', 85 => 'у', 86 => 'уже', 87 => 'хотя', 88 => 'чего', 89 => 'чей', 90 => 'чем', 91 => 'что', 92 => 'чтобы', 93 => 'чье', 94 => 'чья', 95 => 'эта', 96 => 'эти', 97 => 'это', 98 => 'я'), 'ignore_case' => true), 'stopwords_en' => array('type' => 'stop', 'stopwords' => '_english_', 'ignore_case' => true), 'custom_word_delimiter' => array('type' => 'word_delimiter', 'generate_word_parts' => true, 'generate_number_parts' => true, 'catenate_words' => true, 'catenate_numbers' => false, 'catenate_all' => true, 'split_on_case_change' => true, 'preserve_original' => true), 'stopwords_address' => array('type' => 'stop', 'stopwords' => array(0 => 'ый', 1 => 'ой'), 'ignore_case' => true), 'address_synonym' => array('type' => 'synonym', 'synonyms' => array(0 => 'г => город', 1 => 'пос => поселок', 2 => 'мкр => микрорайон', 3 => 'кв => квартал', 4 => 'вл => владение', 5 => 'ул => улица', 6 => 'пр => проезд', 7 => 'д => дом', 8 => 'корп => корпус', 9 => 'стр => строение')))))), 'type_prototype' => array(), 'use_alias' => false, 'types' => array('post' => array('name' => 'post', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('title' => array('boost' => 5), 'author' => array('boost' => 5), 'teaser' => array('boost' => 3), 'lead' => array('boost' => 3), 'content' => array('boost' => 1), 'addressText' => array(), 'category' => array('type' => 'object', 'properties' => array('alias' => array('type' => 'string', 'index' => 'not_analyzed'), 'title' => NULL)), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'rubrics' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean'))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\Post', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => NULL, 'search_analyzer' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL)), 'infographics' => array('name' => 'infographics', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('title' => array('boost' => 5), 'teaser' => array('boost' => 3), 'lead' => array('boost' => 3), 'content' => array('boost' => 1), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'rubrics' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean'))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\Infographics', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => NULL, 'search_analyzer' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL)), 'video' => array('name' => 'video', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('title' => array('boost' => 5), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'rubrics' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'owners' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'search_name' => NULL)), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean'))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\Video', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => NULL, 'search_analyzer' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL)), 'law_document' => array('name' => 'law_document', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('number' => array('anlyzer' => 'document_number', 'boost' => 4), 'title' => array('boost' => 3), 'content' => array('boost' => 2), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean'), 'status' => array('type' => 'boolean'), 'approve_date' => array('type' => 'date'), 'outgoing_agency' => array('type' => 'object', 'properties' => array('id' => NULL)), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'rubrics' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'owners' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'search_name' => NULL)))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\LawDocument', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => NULL, 'search_analyzer' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL)), 'draft_document' => array('name' => 'draft_document', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('title' => array('boost' => 5), 'content' => array('boost' => 3), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean'), 'date_of_adding' => array('type' => 'date'), 'expiration_date' => array('type' => 'date'), 'date_of_receipt' => array('type' => 'date'), 'archive' => array('type' => 'boolean'), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'owners' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'search_name' => NULL)))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\DraftDocument', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => NULL, 'search_analyzer' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL)), 'decision_document' => array('name' => 'decision_document', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('number' => array('anlyzer' => 'document_number', 'boost' => 4), 'title' => array('boost' => 3), 'content' => array('boost' => 2), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean'), 'status' => array('type' => 'boolean'), 'approve_date' => array('type' => 'date'), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'owners' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'search_name' => NULL)))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\DecisionDocument', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => NULL, 'search_analyzer' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL)), 'gallery' => array('name' => 'gallery', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('title' => array('boost' => 5), 'teaser' => array('boost' => 3), 'medias' => array('type' => 'object', 'properties' => array('title' => NULL, 'teaser' => NULL)), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'rubrics' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean'), 'hidden_from_gallery' => array('type' => 'boolean'))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\Gallery', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'repository' => NULL, 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => NULL, 'search_analyzer' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL)), 'page' => array('name' => 'page', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('title' => array('boost' => 5), 'content' => array('boost' => 1), 'publishable' => array('type' => 'boolean'))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\Page', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'repository' => NULL, 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => NULL, 'search_analyzer' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL)), 'construction' => array('name' => 'construction', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('title' => array('boost' => 5), 'teaser' => array('boost' => 3), 'content' => array('boost' => 1, 'type' => 'string', 'analyzer' => 'default_search'), 'objectName' => array(), 'objectDistrict' => array(), 'constructionWorkType' => array(), 'mainFunctional' => array(), 'sourceOfFinance' => array(), 'objectStatus' => array(), 'developerOrgName' => array(), 'publishable' => array('type' => 'boolean'), 'id' => array('type' => 'string', 'index' => 'not_analyzed'), 'administrativeUnit' => array('type' => 'object', 'properties' => array('id' => array('type' => 'integer'), 'parent' => array('type' => 'object', 'properties' => array('id' => array('type' => 'integer'))))), 'addressText' => array('type' => 'string', 'analyzer' => 'address_index', 'include_in_all' => false), 'searchData' => array('type' => 'string', 'analyzer' => 'address_index', 'include_in_all' => false), 'getGeoPointAsLonLatArray' => array('type' => 'geo_point', 'lat_lon' => true), 'functionalPurpose' => array('type' => 'string', 'index' => 'not_analyzed'), 'constructionStatus' => array('type' => 'string', 'index' => 'not_analyzed'), 'constructionStartYear' => array('type' => 'integer'), 'constructionEndYear' => array('type' => 'integer'), 'createdAt' => array('type' => 'date'), 'constructionParameterValues' => array('type' => 'object', 'properties' => array('constructionParameter' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('title' => array('type' => 'string'))), 'value' => array('type' => 'string', 'index' => 'analyzed'))))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\Construction', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'repository' => NULL, 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => 'addres_info_index', 'search_analyzer' => 'addres_info_index', 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL)), 'metro' => array('name' => 'metro', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('line' => array('type' => 'string'), 'id' => array('type' => 'string', 'index' => 'not_analyzed'), 'title' => array('boost' => 5), 'administrativeUnit' => array('type' => 'object', 'properties' => array('id' => array('type' => 'integer'), 'parent' => array('type' => 'object', 'properties' => array('id' => array('type' => 'integer'))))), 'addressText' => array('type' => 'string', 'analyzer' => 'address_index', 'include_in_all' => false), 'searchData' => array('type' => 'string', 'analyzer' => 'address_index', 'include_in_all' => false), 'getGeoPointAsLonLatArray' => array('type' => 'geo_point', 'lat_lon' => true), 'functionalPurpose' => array('type' => 'string', 'index' => 'not_analyzed'), 'constructionStatus' => array('type' => 'string', 'index' => 'not_analyzed'), 'constructionStartYear' => array('type' => 'integer'), 'constructionEndYear' => array('type' => 'integer'), 'publishable' => array('type' => 'boolean'), 'createdAt' => array('type' => 'date'))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\MetroStation', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'repository' => NULL, 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => NULL, 'search_analyzer' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL)), 'road' => array('name' => 'road', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('roadType' => array('type' => 'string', 'index' => 'not_analyzed'), 'id' => array('type' => 'string', 'index' => 'not_analyzed'), 'title' => array('boost' => 5), 'administrativeUnit' => array('type' => 'object', 'properties' => array('id' => array('type' => 'integer'), 'parent' => array('type' => 'object', 'properties' => array('id' => array('type' => 'integer'))))), 'addressText' => array('type' => 'string', 'analyzer' => 'address_index', 'include_in_all' => false), 'searchData' => array('type' => 'string', 'analyzer' => 'address_index', 'include_in_all' => false), 'getGeoPointAsLonLatArray' => array('type' => 'geo_point', 'lat_lon' => true), 'functionalPurpose' => array('type' => 'string', 'index' => 'not_analyzed'), 'constructionStatus' => array('type' => 'string', 'index' => 'not_analyzed'), 'constructionStartYear' => array('type' => 'integer'), 'constructionEndYear' => array('type' => 'integer'), 'publishable' => array('type' => 'boolean'), 'createdAt' => array('type' => 'date'))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\Road', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'repository' => NULL, 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => NULL, 'search_analyzer' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL)), 'subordinate_publication' => array('name' => 'subordinate_publication', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('title' => array('boost' => 5), 'teaser' => array('boost' => 3), 'lead' => array('boost' => 3), 'content' => array('boost' => 1), 'addressText' => array(), 'category' => array('type' => 'object', 'properties' => array('alias' => array('type' => 'string', 'index' => 'not_analyzed'), 'title' => NULL)), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'rubrics' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'owners' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'search_name' => NULL)), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean'))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\Post', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => NULL, 'search_analyzer' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL)), 'administrative_unit' => array('name' => 'administrative_unit', 'mapping' => array('dynamic_templates' => array(), 'properties' => array('title' => array('boost' => 5), 'content' => array('boost' => 2), 'description' => array('boost' => 1), 'publishable' => array('type' => 'boolean'))), 'config' => array('persistence' => array('driver' => 'orm', 'model' => 'AppBundle\\Entity\\AdministrativeUnit', 'provider' => array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder'), 'listener' => array('insert' => true, 'update' => true, 'delete' => true, 'flush' => true, 'immediate' => false, 'logger' => false), 'finder' => array(), 'elastica_to_model_transformer' => array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder'), 'identifier' => 'id', 'model_to_elastica_transformer' => array()), 'serializer' => array('groups' => array()), 'index_analyzer' => NULL, 'search_analyzer' => NULL, 'date_detection' => NULL, 'dynamic_date_formats' => array(), 'numeric_detection' => NULL))))))));
    }
    protected function getFosElastica_DataCollectorService()
    {
        return $this->services['fos_elastica.data_collector'] = new \FOS\ElasticaBundle\DataCollector\ElasticaDataCollector($this->get('fos_elastica.logger'));
    }
    protected function getFosElastica_ElasticaToModelTransformer_Collection_AppService()
    {
        return $this->services['fos_elastica.elastica_to_model_transformer.collection.app'] = new \FOS\ElasticaBundle\Transformer\ElasticaToModelTransformerCollection(array('post' => $this->get('fos_elastica.elastica_to_model_transformer.app.post'), 'infographics' => $this->get('fos_elastica.elastica_to_model_transformer.app.infographics'), 'video' => $this->get('fos_elastica.elastica_to_model_transformer.app.video'), 'law_document' => $this->get('fos_elastica.elastica_to_model_transformer.app.law_document'), 'draft_document' => $this->get('fos_elastica.elastica_to_model_transformer.app.draft_document'), 'decision_document' => $this->get('fos_elastica.elastica_to_model_transformer.app.decision_document'), 'gallery' => $this->get('fos_elastica.elastica_to_model_transformer.app.gallery'), 'page' => $this->get('fos_elastica.elastica_to_model_transformer.app.page'), 'construction' => $this->get('fos_elastica.elastica_to_model_transformer.app.construction'), 'metro' => $this->get('fos_elastica.elastica_to_model_transformer.app.metro'), 'road' => $this->get('fos_elastica.elastica_to_model_transformer.app.road'), 'subordinate_publication' => $this->get('fos_elastica.elastica_to_model_transformer.app.subordinate_publication'), 'administrative_unit' => $this->get('fos_elastica.elastica_to_model_transformer.app.administrative_unit')));
    }
    protected function getFosElastica_Finder_AppService()
    {
        return $this->services['fos_elastica.finder.app'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app'), $this->get('fos_elastica.elastica_to_model_transformer.collection.app'));
    }
    protected function getFosElastica_Finder_App_AdministrativeUnitService()
    {
        return $this->services['fos_elastica.finder.app.administrative_unit'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.administrative_unit'), $this->get('fos_elastica.elastica_to_model_transformer.app.administrative_unit'));
    }
    protected function getFosElastica_Finder_App_ConstructionService()
    {
        return $this->services['fos_elastica.finder.app.construction'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.construction'), $this->get('fos_elastica.elastica_to_model_transformer.app.construction'));
    }
    protected function getFosElastica_Finder_App_DecisionDocumentService()
    {
        return $this->services['fos_elastica.finder.app.decision_document'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.decision_document'), $this->get('fos_elastica.elastica_to_model_transformer.app.decision_document'));
    }
    protected function getFosElastica_Finder_App_DraftDocumentService()
    {
        return $this->services['fos_elastica.finder.app.draft_document'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.draft_document'), $this->get('fos_elastica.elastica_to_model_transformer.app.draft_document'));
    }
    protected function getFosElastica_Finder_App_GalleryService()
    {
        return $this->services['fos_elastica.finder.app.gallery'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.gallery'), $this->get('fos_elastica.elastica_to_model_transformer.app.gallery'));
    }
    protected function getFosElastica_Finder_App_InfographicsService()
    {
        return $this->services['fos_elastica.finder.app.infographics'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.infographics'), $this->get('fos_elastica.elastica_to_model_transformer.app.infographics'));
    }
    protected function getFosElastica_Finder_App_LawDocumentService()
    {
        return $this->services['fos_elastica.finder.app.law_document'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.law_document'), $this->get('fos_elastica.elastica_to_model_transformer.app.law_document'));
    }
    protected function getFosElastica_Finder_App_MetroService()
    {
        return $this->services['fos_elastica.finder.app.metro'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.metro'), $this->get('fos_elastica.elastica_to_model_transformer.app.metro'));
    }
    protected function getFosElastica_Finder_App_PageService()
    {
        return $this->services['fos_elastica.finder.app.page'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.page'), $this->get('fos_elastica.elastica_to_model_transformer.app.page'));
    }
    protected function getFosElastica_Finder_App_PostService()
    {
        return $this->services['fos_elastica.finder.app.post'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.post'), $this->get('fos_elastica.elastica_to_model_transformer.app.post'));
    }
    protected function getFosElastica_Finder_App_RoadService()
    {
        return $this->services['fos_elastica.finder.app.road'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.road'), $this->get('fos_elastica.elastica_to_model_transformer.app.road'));
    }
    protected function getFosElastica_Finder_App_SubordinatePublicationService()
    {
        return $this->services['fos_elastica.finder.app.subordinate_publication'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.subordinate_publication'), $this->get('fos_elastica.elastica_to_model_transformer.app.subordinate_publication'));
    }
    protected function getFosElastica_Finder_App_VideoService()
    {
        return $this->services['fos_elastica.finder.app.video'] = new \FOS\ElasticaBundle\Finder\TransformedFinder($this->get('fos_elastica.index.app.video'), $this->get('fos_elastica.elastica_to_model_transformer.app.video'));
    }
    protected function getFosElastica_Index_AppService()
    {
        return $this->services['fos_elastica.index.app'] = $this->get('fos_elastica.client.default')->getIndex('stroi_mos_ru');
    }
    protected function getFosElastica_Index_App_AdministrativeUnitService()
    {
        return $this->services['fos_elastica.index.app.administrative_unit'] = $this->get('fos_elastica.index.app')->getType('administrative_unit');
    }
    protected function getFosElastica_Index_App_ConstructionService()
    {
        return $this->services['fos_elastica.index.app.construction'] = $this->get('fos_elastica.index.app')->getType('construction');
    }
    protected function getFosElastica_Index_App_DecisionDocumentService()
    {
        return $this->services['fos_elastica.index.app.decision_document'] = $this->get('fos_elastica.index.app')->getType('decision_document');
    }
    protected function getFosElastica_Index_App_DraftDocumentService()
    {
        return $this->services['fos_elastica.index.app.draft_document'] = $this->get('fos_elastica.index.app')->getType('draft_document');
    }
    protected function getFosElastica_Index_App_GalleryService()
    {
        return $this->services['fos_elastica.index.app.gallery'] = $this->get('fos_elastica.index.app')->getType('gallery');
    }
    protected function getFosElastica_Index_App_InfographicsService()
    {
        return $this->services['fos_elastica.index.app.infographics'] = $this->get('fos_elastica.index.app')->getType('infographics');
    }
    protected function getFosElastica_Index_App_LawDocumentService()
    {
        return $this->services['fos_elastica.index.app.law_document'] = $this->get('fos_elastica.index.app')->getType('law_document');
    }
    protected function getFosElastica_Index_App_MetroService()
    {
        return $this->services['fos_elastica.index.app.metro'] = $this->get('fos_elastica.index.app')->getType('metro');
    }
    protected function getFosElastica_Index_App_PageService()
    {
        return $this->services['fos_elastica.index.app.page'] = $this->get('fos_elastica.index.app')->getType('page');
    }
    protected function getFosElastica_Index_App_PostService()
    {
        return $this->services['fos_elastica.index.app.post'] = $this->get('fos_elastica.index.app')->getType('post');
    }
    protected function getFosElastica_Index_App_RoadService()
    {
        return $this->services['fos_elastica.index.app.road'] = $this->get('fos_elastica.index.app')->getType('road');
    }
    protected function getFosElastica_Index_App_SubordinatePublicationService()
    {
        return $this->services['fos_elastica.index.app.subordinate_publication'] = $this->get('fos_elastica.index.app')->getType('subordinate_publication');
    }
    protected function getFosElastica_Index_App_VideoService()
    {
        return $this->services['fos_elastica.index.app.video'] = $this->get('fos_elastica.index.app')->getType('video');
    }
    protected function getFosElastica_IndexManagerService()
    {
        $a = $this->get('fos_elastica.index.app');
        return $this->services['fos_elastica.index_manager'] = new \FOS\ElasticaBundle\Index\IndexManager(array('app' => $a), $a);
    }
    protected function getFosElastica_IndexableService()
    {
        return $this->services['fos_elastica.indexable'] = new \FOS\ElasticaBundle\Provider\Indexable(array('app/page' => 'isIndexable', 'app/construction' => 'object.isPublishable()', 'app/metro' => 'object.isPublishable()', 'app/road' => 'object.isPublishable()', 'app/subordinate_publication' => 'isSubordinatePublication'), $this);
    }
    protected function getFosElastica_LoggerService()
    {
        return $this->services['fos_elastica.logger'] = new \FOS\ElasticaBundle\Logger\ElasticaLogger($this->get('monolog.logger.elastica', ContainerInterface::NULL_ON_INVALID_REFERENCE), false);
    }
    protected function getFosElastica_Manager_OrmService()
    {
        $this->services['fos_elastica.manager.orm'] = $instance = new \FOS\ElasticaBundle\Doctrine\RepositoryManager($this->get('doctrine'), $this->get('annotation_reader'));
        $instance->addEntity('AppBundle\\Entity\\Post', $this->get('fos_elastica.finder.app.post'));
        $instance->addEntity('AppBundle\\Entity\\Infographics', $this->get('fos_elastica.finder.app.infographics'));
        $instance->addEntity('AppBundle\\Entity\\Video', $this->get('fos_elastica.finder.app.video'));
        $instance->addEntity('AppBundle\\Entity\\LawDocument', $this->get('fos_elastica.finder.app.law_document'));
        $instance->addEntity('AppBundle\\Entity\\DraftDocument', $this->get('fos_elastica.finder.app.draft_document'));
        $instance->addEntity('AppBundle\\Entity\\DecisionDocument', $this->get('fos_elastica.finder.app.decision_document'));
        $instance->addEntity('AppBundle\\Entity\\Gallery', $this->get('fos_elastica.finder.app.gallery'));
        $instance->addEntity('AppBundle\\Entity\\Page', $this->get('fos_elastica.finder.app.page'));
        $instance->addEntity('AppBundle\\Entity\\Construction', $this->get('fos_elastica.finder.app.construction'));
        $instance->addEntity('AppBundle\\Entity\\MetroStation', $this->get('fos_elastica.finder.app.metro'));
        $instance->addEntity('AppBundle\\Entity\\Road', $this->get('fos_elastica.finder.app.road'));
        $instance->addEntity('AppBundle\\Entity\\Post', $this->get('fos_elastica.finder.app.subordinate_publication'));
        $instance->addEntity('AppBundle\\Entity\\AdministrativeUnit', $this->get('fos_elastica.finder.app.administrative_unit'));
        return $instance;
    }
    protected function getFosElastica_MappingBuilderService()
    {
        return $this->services['fos_elastica.mapping_builder'] = new \FOS\ElasticaBundle\Index\MappingBuilder();
    }
    protected function getFosElastica_ObjectPersister_App_AdministrativeUnitService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.administrative_unit'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.administrative_unit'), $a, 'AppBundle\\Entity\\AdministrativeUnit', array('title' => array('boost' => 5), 'content' => array('boost' => 2), 'description' => array('boost' => 1), 'publishable' => array('type' => 'boolean')));
    }
    protected function getFosElastica_ObjectPersister_App_ConstructionService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.construction'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.construction'), $a, 'AppBundle\\Entity\\Construction', array('title' => array('boost' => 5), 'teaser' => array('boost' => 3), 'content' => array('boost' => 1, 'type' => 'string', 'analyzer' => 'default_search'), 'objectName' => array(), 'objectDistrict' => array(), 'constructionWorkType' => array(), 'mainFunctional' => array(), 'sourceOfFinance' => array(), 'objectStatus' => array(), 'developerOrgName' => array(), 'publishable' => array('type' => 'boolean'), 'id' => array('type' => 'string', 'index' => 'not_analyzed'), 'administrativeUnit' => array('type' => 'object', 'properties' => array('id' => array('type' => 'integer'), 'parent' => array('type' => 'object', 'properties' => array('id' => array('type' => 'integer'))))), 'addressText' => array('type' => 'string', 'analyzer' => 'address_index', 'include_in_all' => false), 'searchData' => array('type' => 'string', 'analyzer' => 'address_index', 'include_in_all' => false), 'getGeoPointAsLonLatArray' => array('type' => 'geo_point', 'lat_lon' => true), 'functionalPurpose' => array('type' => 'string', 'index' => 'not_analyzed'), 'constructionStatus' => array('type' => 'string', 'index' => 'not_analyzed'), 'constructionStartYear' => array('type' => 'integer'), 'constructionEndYear' => array('type' => 'integer'), 'createdAt' => array('type' => 'date'), 'constructionParameterValues' => array('type' => 'object', 'properties' => array('constructionParameter' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('title' => array('type' => 'string'))), 'value' => array('type' => 'string', 'index' => 'analyzed')))));
    }
    protected function getFosElastica_ObjectPersister_App_DecisionDocumentService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.decision_document'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.decision_document'), $a, 'AppBundle\\Entity\\DecisionDocument', array('number' => array('anlyzer' => 'document_number', 'boost' => 4), 'title' => array('boost' => 3), 'content' => array('boost' => 2), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean'), 'status' => array('type' => 'boolean'), 'approve_date' => array('type' => 'date'), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'owners' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'search_name' => NULL))));
    }
    protected function getFosElastica_ObjectPersister_App_DraftDocumentService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.draft_document'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.draft_document'), $a, 'AppBundle\\Entity\\DraftDocument', array('title' => array('boost' => 5), 'content' => array('boost' => 3), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean'), 'date_of_adding' => array('type' => 'date'), 'expiration_date' => array('type' => 'date'), 'date_of_receipt' => array('type' => 'date'), 'archive' => array('type' => 'boolean'), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'owners' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'search_name' => NULL))));
    }
    protected function getFosElastica_ObjectPersister_App_GalleryService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.gallery'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.gallery'), $a, 'AppBundle\\Entity\\Gallery', array('title' => array('boost' => 5), 'teaser' => array('boost' => 3), 'medias' => array('type' => 'object', 'properties' => array('title' => NULL, 'teaser' => NULL)), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'rubrics' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean'), 'hidden_from_gallery' => array('type' => 'boolean')));
    }
    protected function getFosElastica_ObjectPersister_App_InfographicsService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.infographics'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.infographics'), $a, 'AppBundle\\Entity\\Infographics', array('title' => array('boost' => 5), 'teaser' => array('boost' => 3), 'lead' => array('boost' => 3), 'content' => array('boost' => 1), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'rubrics' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean')));
    }
    protected function getFosElastica_ObjectPersister_App_LawDocumentService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.law_document'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.law_document'), $a, 'AppBundle\\Entity\\LawDocument', array('number' => array('anlyzer' => 'document_number', 'boost' => 4), 'title' => array('boost' => 3), 'content' => array('boost' => 2), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean'), 'status' => array('type' => 'boolean'), 'approve_date' => array('type' => 'date'), 'outgoing_agency' => array('type' => 'object', 'properties' => array('id' => NULL)), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'rubrics' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'owners' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'search_name' => NULL))));
    }
    protected function getFosElastica_ObjectPersister_App_MetroService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.metro'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.metro'), $a, 'AppBundle\\Entity\\MetroStation', array('line' => array('type' => 'string'), 'id' => array('type' => 'string', 'index' => 'not_analyzed'), 'title' => array('boost' => 5), 'administrativeUnit' => array('type' => 'object', 'properties' => array('id' => array('type' => 'integer'), 'parent' => array('type' => 'object', 'properties' => array('id' => array('type' => 'integer'))))), 'addressText' => array('type' => 'string', 'analyzer' => 'address_index', 'include_in_all' => false), 'searchData' => array('type' => 'string', 'analyzer' => 'address_index', 'include_in_all' => false), 'getGeoPointAsLonLatArray' => array('type' => 'geo_point', 'lat_lon' => true), 'functionalPurpose' => array('type' => 'string', 'index' => 'not_analyzed'), 'constructionStatus' => array('type' => 'string', 'index' => 'not_analyzed'), 'constructionStartYear' => array('type' => 'integer'), 'constructionEndYear' => array('type' => 'integer'), 'publishable' => array('type' => 'boolean'), 'createdAt' => array('type' => 'date')));
    }
    protected function getFosElastica_ObjectPersister_App_PageService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.page'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.page'), $a, 'AppBundle\\Entity\\Page', array('title' => array('boost' => 5), 'content' => array('boost' => 1), 'publishable' => array('type' => 'boolean')));
    }
    protected function getFosElastica_ObjectPersister_App_PostService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.post'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.post'), $a, 'AppBundle\\Entity\\Post', array('title' => array('boost' => 5), 'author' => array('boost' => 5), 'teaser' => array('boost' => 3), 'lead' => array('boost' => 3), 'content' => array('boost' => 1), 'addressText' => array(), 'category' => array('type' => 'object', 'properties' => array('alias' => array('type' => 'string', 'index' => 'not_analyzed'), 'title' => NULL)), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'rubrics' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean')));
    }
    protected function getFosElastica_ObjectPersister_App_RoadService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.road'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.road'), $a, 'AppBundle\\Entity\\Road', array('roadType' => array('type' => 'string', 'index' => 'not_analyzed'), 'id' => array('type' => 'string', 'index' => 'not_analyzed'), 'title' => array('boost' => 5), 'administrativeUnit' => array('type' => 'object', 'properties' => array('id' => array('type' => 'integer'), 'parent' => array('type' => 'object', 'properties' => array('id' => array('type' => 'integer'))))), 'addressText' => array('type' => 'string', 'analyzer' => 'address_index', 'include_in_all' => false), 'searchData' => array('type' => 'string', 'analyzer' => 'address_index', 'include_in_all' => false), 'getGeoPointAsLonLatArray' => array('type' => 'geo_point', 'lat_lon' => true), 'functionalPurpose' => array('type' => 'string', 'index' => 'not_analyzed'), 'constructionStatus' => array('type' => 'string', 'index' => 'not_analyzed'), 'constructionStartYear' => array('type' => 'integer'), 'constructionEndYear' => array('type' => 'integer'), 'publishable' => array('type' => 'boolean'), 'createdAt' => array('type' => 'date')));
    }
    protected function getFosElastica_ObjectPersister_App_SubordinatePublicationService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.subordinate_publication'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.subordinate_publication'), $a, 'AppBundle\\Entity\\Post', array('title' => array('boost' => 5), 'teaser' => array('boost' => 3), 'lead' => array('boost' => 3), 'content' => array('boost' => 1), 'addressText' => array(), 'category' => array('type' => 'object', 'properties' => array('alias' => array('type' => 'string', 'index' => 'not_analyzed'), 'title' => NULL)), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'rubrics' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'owners' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'search_name' => NULL)), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean')));
    }
    protected function getFosElastica_ObjectPersister_App_VideoService()
    {
        $a = new \FOS\ElasticaBundle\Transformer\ModelToElasticaAutoTransformer(array('identifier' => 'id'), $this->get('event_dispatcher'));
        $a->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $this->services['fos_elastica.object_persister.app.video'] = new \FOS\ElasticaBundle\Persister\ObjectPersister($this->get('fos_elastica.index.app.video'), $a, 'AppBundle\\Entity\\Video', array('title' => array('boost' => 5), 'tags' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'rubrics' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'title' => NULL)), 'owners' => array('type' => 'object', 'index' => 'not_analyzed', 'properties' => array('id' => NULL, 'search_name' => NULL)), 'publish_start_date' => array('type' => 'date'), 'publish_end_date' => array('type' => 'date'), 'publishable' => array('type' => 'boolean')));
    }
    protected function getFosElastica_Paginator_SubscriberService()
    {
        $this->services['fos_elastica.paginator.subscriber'] = $instance = new \FOS\ElasticaBundle\Subscriber\PaginateElasticaQuerySubscriber();
        $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        return $instance;
    }
    protected function getFosElastica_PropertyAccessorService()
    {
        return $this->services['fos_elastica.property_accessor'] = new \Symfony\Component\PropertyAccess\PropertyAccessor();
    }
    protected function getFosElastica_Provider_App_AdministrativeUnitService()
    {
        return $this->services['fos_elastica.provider.app.administrative_unit'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.administrative_unit'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\AdministrativeUnit', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'administrative_unit'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_Provider_App_ConstructionService()
    {
        return $this->services['fos_elastica.provider.app.construction'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.construction'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\Construction', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'construction'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_Provider_App_DecisionDocumentService()
    {
        return $this->services['fos_elastica.provider.app.decision_document'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.decision_document'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\DecisionDocument', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'decision_document'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_Provider_App_DraftDocumentService()
    {
        return $this->services['fos_elastica.provider.app.draft_document'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.draft_document'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\DraftDocument', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'draft_document'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_Provider_App_GalleryService()
    {
        return $this->services['fos_elastica.provider.app.gallery'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.gallery'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\Gallery', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'gallery'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_Provider_App_InfographicsService()
    {
        return $this->services['fos_elastica.provider.app.infographics'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.infographics'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\Infographics', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'infographics'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_Provider_App_LawDocumentService()
    {
        return $this->services['fos_elastica.provider.app.law_document'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.law_document'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\LawDocument', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'law_document'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_Provider_App_MetroService()
    {
        return $this->services['fos_elastica.provider.app.metro'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.metro'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\MetroStation', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'metro'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_Provider_App_PageService()
    {
        return $this->services['fos_elastica.provider.app.page'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.page'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\Page', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'page'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_Provider_App_PostService()
    {
        return $this->services['fos_elastica.provider.app.post'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.post'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\Post', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'post'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_Provider_App_RoadService()
    {
        return $this->services['fos_elastica.provider.app.road'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.road'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\Road', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'road'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_Provider_App_SubordinatePublicationService()
    {
        return $this->services['fos_elastica.provider.app.subordinate_publication'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.subordinate_publication'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\Post', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'subordinate_publication'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_Provider_App_VideoService()
    {
        return $this->services['fos_elastica.provider.app.video'] = new \FOS\ElasticaBundle\Doctrine\ORM\Provider($this->get('fos_elastica.object_persister.app.video'), $this->get('fos_elastica.indexable'), 'AppBundle\\Entity\\Video', array('batch_size' => 100, 'clear_object_manager' => true, 'debug_logging' => false, 'query_builder_method' => 'createQueryBuilder', 'indexName' => 'app', 'typeName' => 'video'), $this->get('doctrine'), $this->get('fos_elastica.slice_fetcher.orm'));
    }
    protected function getFosElastica_ProviderRegistryService()
    {
        $this->services['fos_elastica.provider_registry'] = $instance = new \FOS\ElasticaBundle\Provider\ProviderRegistry();
        $instance->setContainer($this);
        $instance->addProvider('app', 'post', 'fos_elastica.provider.app.post');
        $instance->addProvider('app', 'infographics', 'fos_elastica.provider.app.infographics');
        $instance->addProvider('app', 'video', 'fos_elastica.provider.app.video');
        $instance->addProvider('app', 'law_document', 'fos_elastica.provider.app.law_document');
        $instance->addProvider('app', 'draft_document', 'fos_elastica.provider.app.draft_document');
        $instance->addProvider('app', 'decision_document', 'fos_elastica.provider.app.decision_document');
        $instance->addProvider('app', 'gallery', 'fos_elastica.provider.app.gallery');
        $instance->addProvider('app', 'page', 'fos_elastica.provider.app.page');
        $instance->addProvider('app', 'construction', 'fos_elastica.provider.app.construction');
        $instance->addProvider('app', 'metro', 'fos_elastica.provider.app.metro');
        $instance->addProvider('app', 'road', 'fos_elastica.provider.app.road');
        $instance->addProvider('app', 'subordinate_publication', 'fos_elastica.provider.app.subordinate_publication');
        $instance->addProvider('app', 'administrative_unit', 'fos_elastica.provider.app.administrative_unit');
        return $instance;
    }
    protected function getFosElastica_ResetterService()
    {
        return $this->services['fos_elastica.resetter'] = new \FOS\ElasticaBundle\Index\Resetter($this->get('fos_elastica.config_manager'), $this->get('fos_elastica.index_manager'), $this->get('fos_elastica.alias_processor'), $this->get('fos_elastica.mapping_builder'), $this->get('event_dispatcher'));
    }
    protected function getFosElastica_SliceFetcher_OrmService()
    {
        return $this->services['fos_elastica.slice_fetcher.orm'] = new \FOS\ElasticaBundle\Doctrine\ORM\SliceFetcher();
    }
    protected function getFosUser_ChangePassword_FormService()
    {
        return $this->services['fos_user.change_password.form'] = $this->get('form.factory')->createNamed('fos_user_change_password_form', 'fos_user_change_password', NULL, array('validation_groups' => array(0 => 'ChangePassword', 1 => 'Default')));
    }
    protected function getFosUser_ChangePassword_Form_Handler_DefaultService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('fos_user.change_password.form.handler.default', 'request');
        }
        return $this->services['fos_user.change_password.form.handler.default'] = $this->scopedServices['request']['fos_user.change_password.form.handler.default'] = new \FOS\UserBundle\Form\Handler\ChangePasswordFormHandler($this->get('fos_user.change_password.form'), $this->get('request'), $this->get('fos_user.user_manager'));
    }
    protected function getFosUser_ChangePassword_Form_TypeService()
    {
        return $this->services['fos_user.change_password.form.type'] = new \FOS\UserBundle\Form\Type\ChangePasswordFormType();
    }
    protected function getFosUser_Group_FormService()
    {
        return $this->services['fos_user.group.form'] = $this->get('form.factory')->createNamed('fos_user_group_form', 'fos_user_group', NULL, array('validation_groups' => array(0 => 'Registration', 1 => 'Default')));
    }
    protected function getFosUser_Group_Form_HandlerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('fos_user.group.form.handler', 'request');
        }
        return $this->services['fos_user.group.form.handler'] = $this->scopedServices['request']['fos_user.group.form.handler'] = new \FOS\UserBundle\Form\Handler\GroupFormHandler($this->get('fos_user.group.form'), $this->get('request'), $this->get('fos_user.group_manager'));
    }
    protected function getFosUser_Group_Form_TypeService()
    {
        return $this->services['fos_user.group.form.type'] = new \FOS\UserBundle\Form\Type\GroupFormType('Application\\Sonata\\UserBundle\\Entity\\Group');
    }
    protected function getFosUser_GroupManagerService()
    {
        return $this->services['fos_user.group_manager'] = new \Sonata\UserBundle\Entity\GroupManager($this->get('fos_user.entity_manager'), 'Application\\Sonata\\UserBundle\\Entity\\Group');
    }
    protected function getFosUser_MailerService()
    {
        return $this->services['fos_user.mailer'] = new \FOS\UserBundle\Mailer\Mailer($this->get('swiftmailer.mailer.default'), $this->get('cmf_routing.router'), $this->get('templating'), array('confirmation.template' => 'FOSUserBundle:Registration:email.txt.twig', 'resetting.template' => 'FOSUserBundle:Resetting:email.txt.twig', 'from_email' => array('confirmation' => array('webmaster@example.com' => 'webmaster'), 'resetting' => array('info-stroi@mos.ru' => 'stroi.mos.ru'))));
    }
    protected function getFosUser_Profile_FormService()
    {
        return $this->services['fos_user.profile.form'] = $this->get('form.factory')->createNamed('fos_user_profile_form', 'fos_user_profile', NULL, array('validation_groups' => array(0 => 'Profile', 1 => 'Default')));
    }
    protected function getFosUser_Profile_Form_HandlerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('fos_user.profile.form.handler', 'request');
        }
        return $this->services['fos_user.profile.form.handler'] = $this->scopedServices['request']['fos_user.profile.form.handler'] = new \FOS\UserBundle\Form\Handler\ProfileFormHandler($this->get('fos_user.profile.form'), $this->get('request'), $this->get('fos_user.user_manager'));
    }
    protected function getFosUser_Profile_Form_TypeService()
    {
        return $this->services['fos_user.profile.form.type'] = new \FOS\UserBundle\Form\Type\ProfileFormType('Application\\Sonata\\UserBundle\\Entity\\User');
    }
    protected function getFosUser_Registration_FormService()
    {
        return $this->services['fos_user.registration.form'] = $this->get('form.factory')->createNamed('fos_user_registration_form', 'fos_user_registration', NULL, array('validation_groups' => array(0 => 'Registration', 1 => 'Default')));
    }
    protected function getFosUser_Registration_Form_HandlerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('fos_user.registration.form.handler', 'request');
        }
        return $this->services['fos_user.registration.form.handler'] = $this->scopedServices['request']['fos_user.registration.form.handler'] = new \FOS\UserBundle\Form\Handler\RegistrationFormHandler($this->get('fos_user.registration.form'), $this->get('request'), $this->get('fos_user.user_manager'), $this->get('fos_user.mailer'), $this->get('fos_user.util.token_generator'));
    }
    protected function getFosUser_Registration_Form_TypeService()
    {
        return $this->services['fos_user.registration.form.type'] = new \FOS\UserBundle\Form\Type\RegistrationFormType('Application\\Sonata\\UserBundle\\Entity\\User');
    }
    protected function getFosUser_Resetting_FormService()
    {
        return $this->services['fos_user.resetting.form'] = $this->get('form.factory')->createNamed('fos_user_resetting_form', 'fos_user_resetting', NULL, array('validation_groups' => array(0 => 'ResetPassword', 1 => 'Default')));
    }
    protected function getFosUser_Resetting_Form_HandlerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('fos_user.resetting.form.handler', 'request');
        }
        return $this->services['fos_user.resetting.form.handler'] = $this->scopedServices['request']['fos_user.resetting.form.handler'] = new \FOS\UserBundle\Form\Handler\ResettingFormHandler($this->get('fos_user.resetting.form'), $this->get('request'), $this->get('fos_user.user_manager'));
    }
    protected function getFosUser_Resetting_Form_TypeService()
    {
        return $this->services['fos_user.resetting.form.type'] = new \FOS\UserBundle\Form\Type\ResettingFormType();
    }
    protected function getFosUser_Security_InteractiveLoginListenerService()
    {
        return $this->services['fos_user.security.interactive_login_listener'] = new \FOS\UserBundle\Security\InteractiveLoginListener($this->get('fos_user.user_manager'));
    }
    protected function getFosUser_Security_LoginManagerService()
    {
        return $this->services['fos_user.security.login_manager'] = new \FOS\UserBundle\Security\LoginManager($this->get('security.context'), $this->get('security.user_checker'), $this->get('security.authentication.session_strategy'), $this);
    }
    protected function getFosUser_UserManagerService()
    {
        $a = $this->get('fos_user.util.email_canonicalizer');
        return $this->services['fos_user.user_manager'] = new \Sonata\UserBundle\Entity\UserManager($this->get('security.encoder_factory'), $a, $a, $this->get('fos_user.entity_manager'), 'Application\\Sonata\\UserBundle\\Entity\\User');
    }
    protected function getFosUser_UsernameFormTypeService()
    {
        return $this->services['fos_user.username_form_type'] = new \FOS\UserBundle\Form\Type\UsernameFormType(new \FOS\UserBundle\Form\DataTransformer\UserToUsernameTransformer($this->get('fos_user.user_manager')));
    }
    protected function getFosUser_Util_EmailCanonicalizerService()
    {
        return $this->services['fos_user.util.email_canonicalizer'] = new \FOS\UserBundle\Util\Canonicalizer();
    }
    protected function getFosUser_Util_TokenGeneratorService()
    {
        return $this->services['fos_user.util.token_generator'] = new \FOS\UserBundle\Util\TokenGenerator($this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getFosUser_Util_UserManipulatorService()
    {
        return $this->services['fos_user.util.user_manipulator'] = new \FOS\UserBundle\Util\UserManipulator($this->get('fos_user.user_manager'));
    }
    protected function getFragment_HandlerService()
    {
        $this->services['fragment.handler'] = $instance = new \Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler($this, false, $this->get('request_stack'));
        $instance->addRendererService('inline', 'fragment.renderer.inline');
        $instance->addRendererService('hinclude', 'fragment.renderer.hinclude');
        $instance->addRendererService('hinclude', 'fragment.renderer.hinclude');
        $instance->addRendererService('esi', 'fragment.renderer.esi');
        $instance->addRendererService('ssi', 'fragment.renderer.ssi');
        return $instance;
    }
    protected function getFragment_ListenerService()
    {
        return $this->services['fragment.listener'] = new \Symfony\Component\HttpKernel\EventListener\FragmentListener($this->get('uri_signer'), '/_fragment');
    }
    protected function getFragment_Renderer_EsiService()
    {
        $this->services['fragment.renderer.esi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer(NULL, $this->get('fragment.renderer.inline'), $this->get('uri_signer'));
        $instance->setFragmentPath('/_fragment');
        return $instance;
    }
    protected function getFragment_Renderer_HincludeService()
    {
        $this->services['fragment.renderer.hinclude'] = $instance = new \Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer($this->get('twig'), $this->get('uri_signer'), NULL);
        $instance->setFragmentPath('/_fragment');
        return $instance;
    }
    protected function getFragment_Renderer_InlineService()
    {
        $this->services['fragment.renderer.inline'] = $instance = new \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer($this->get('http_kernel'), $this->get('event_dispatcher'));
        $instance->setFragmentPath('/_fragment');
        return $instance;
    }
    protected function getFragment_Renderer_SsiService()
    {
        $this->services['fragment.renderer.ssi'] = $instance = new \Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer(NULL, $this->get('fragment.renderer.inline'), $this->get('uri_signer'));
        $instance->setFragmentPath('/_fragment');
        return $instance;
    }
    protected function getGalleryListService()
    {
        $this->services['gallery_list'] = $instance = new \AppBundle\Block\GalleryListBlock('post_list', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRequestStack($this->get('request_stack'));
        $instance->setSearchService($this->get('app.search.base'));
        return $instance;
    }
    protected function getGalleryPickService()
    {
        $this->services['gallery_pick'] = $instance = new \AppBundle\Block\GalleryPickBlock('gallery_pick', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setModelManager($this->get('sonata.media.admin.media.manager'));
        $instance->setRequestStack($this->get('request_stack'));
        return $instance;
    }
    protected function getHeaderSearchFiltersService()
    {
        $this->services['header_search_filters'] = $instance = new \AppBundle\Block\HeaderSearchFiltersBlock('header_search_filters', $this->get('templating'));
        $instance->setCatalogue($this->get('app.publication_catalogue'));
        $instance->setRequestStack($this->get('request_stack'));
        return $instance;
    }
    protected function getHomepageNewsService()
    {
        $this->services['homepage_news'] = $instance = new \AppBundle\Block\HomepageNewsBlock('homepage_news', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        return $instance;
    }
    protected function getHotNewsBlockService()
    {
        return $this->services['hot_news_block'] = new \AppBundle\Block\HotNewsBannerBlock('hot_news_block', $this->get('templating'));
    }
    protected function getHttpKernelService()
    {
        return $this->services['http_kernel'] = new \Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel($this->get('event_dispatcher'), $this, new \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver($this, $this->get('controller_name_converter'), $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE)), $this->get('request_stack'), false);
    }
    protected function getImport_Helper_FileloaderService()
    {
        return $this->services['import\helper\fileloader'] = new \Import\Helper\FileLoader('/tmp/', 'https://stroi.mos.ru');
    }
    protected function getImport_Helper_MediabuilderService()
    {
        return $this->services['import\helper\mediabuilder'] = new \Import\Helper\MediaBuilder($this->get('doctrine.orm.default_entity_manager'), $this->get('sonata.media.manager.media'));
    }
    protected function getInfographicsListService()
    {
        $this->services['infographics_list'] = $instance = new \AppBundle\Block\InfographicsListBlock('post_list', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRequestStack($this->get('request_stack'));
        return $instance;
    }
    protected function getInfographicsPicksService()
    {
        $this->services['infographics_picks'] = $instance = new \AppBundle\Block\InfographicsPicksBlock('infographics_picks', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setModelManager($this->get('sonata.media.admin.media.manager'));
        $instance->setRequestStack($this->get('request_stack'));
        return $instance;
    }
    protected function getIvoryCkEditor_ConfigManagerService()
    {
        $this->services['ivory_ck_editor.config_manager'] = $instance = new \Ivory\CKEditorBundle\Model\ConfigManager();
        $instance->setConfig('default', array('title' => '', 'contentsCss' => '/css/admin/ckeditor.css', 'bodyClass' => 'news-wrapper__content', 'extraPlugins' => 'fakeobjects,galleryplugin,photo_lenta_grid,infographics,twenty_twenty,organizationlink,contactpersonlink,youtube,banner,quote,citydistrict_block,keystrokes', 'width' => '740px', 'height' => '600px', 'toolbar' => array(0 => array('name' => 'document', 'items' => array(0 => 'Source', 1 => 'Print')), 1 => array('name' => 'clipboard', 'items' => array(0 => 'Cut', 1 => 'Copy', 2 => 'Paste', 3 => 'PasteText', 4 => 'PasteFromWord', 5 => '-', 6 => 'Undo', 7 => 'Redo')), 2 => array('name' => 'basicstyles', 'items' => array(0 => 'Bold', 1 => 'Italic', 2 => 'Underline', 3 => 'Strike', 4 => 'Subscript', 5 => 'Superscript', 6 => '-', 7 => 'RemoveFormat')), 3 => array('name' => 'paragraph', 'items' => array(0 => 'NumberedList', 1 => 'BulletedList', 2 => '-', 3 => 'Blockquote', 4 => '-', 5 => 'JustifyLeft', 6 => 'JustifyCenter', 7 => 'JustifyRight', 8 => '-', 9 => 'Outdent', 10 => 'Indent')), 4 => array('name' => 'formats', 'items' => array(0 => 'Format', 1 => 'Font', 2 => 'FontSize', 3 => 'TextColor')), 5 => array('name' => 'insert', 'items' => array(0 => 'Table', 1 => 'SpecialChar')), 6 => array('name' => 'links', 'items' => array(0 => 'Link', 1 => 'Unlink', 2 => 'Anchor')), 7 => array('name' => 'customlinks', 'items' => array(0 => 'OrganizationLink', 1 => 'ContactPersonLink')), 8 => array('name' => 'mediainsert', 'items' => array(0 => 'Image', 1 => 'Youtube', 2 => 'Gallery', 3 => 'PhotoLentaGrid', 4 => 'TwentyTwenty', 5 => 'Banner', 6 => 'Quote', 7 => 'FaqBlock', 8 => 'CityDistrictBlock', 9 => 'Infographics')), 9 => array('name' => 'styles', 'items' => array(0 => 'Styles'))), 'filebrowserBrowseRoute' => 'admin_sonata_media_media_ckeditor_browser', 'filebrowserImageBrowseRoute' => 'admin_sonata_media_media_ckeditor_browser', 'filebrowserImageBrowseRouteParameters' => array('provider' => 'sonata.media.provider.image', 'context' => 'main_image'), 'filebrowserUploadRoute' => 'admin_sonata_media_media_ckeditor_upload', 'filebrowserUploadRouteParameters' => array('provider' => 'sonata.media.provider.image', 'context' => 'main_image'), 'filebrowserImageUploadRoute' => 'admin_sonata_media_media_ckeditor_upload', 'filebrowserImageUploadRouteParameters' => array('provider' => 'sonata.media.provider.image', 'context' => 'main_image'), 'allowedContent' => true, 'stylesSet' => 'custom_styles:/js/ckeditor/plugins/stylescombo/styles.js'));
        $instance->setConfig('page', array('title' => '', 'contentsCss' => '/css/admin/ckeditor.css', 'bodyClass' => 'static-page', 'extraPlugins' => 'fakeobjects,galleryplugin,photo_lenta_grid,infographics,twenty_twenty,organizationlink,contactpersonlink,youtube,banner,quote,citydistrict_block,keystrokes', 'width' => '990px', 'height' => '600px', 'toolbar' => array(0 => array('name' => 'document', 'items' => array(0 => 'Source', 1 => 'Print')), 1 => array('name' => 'clipboard', 'items' => array(0 => 'Cut', 1 => 'Copy', 2 => 'Paste', 3 => 'PasteText', 4 => 'PasteFromWord', 5 => '-', 6 => 'Undo', 7 => 'Redo')), 2 => array('name' => 'basicstyles', 'items' => array(0 => 'Bold', 1 => 'Italic', 2 => 'Underline', 3 => 'Strike', 4 => 'Subscript', 5 => 'Superscript', 6 => '-', 7 => 'RemoveFormat')), 3 => array('name' => 'paragraph', 'items' => array(0 => 'NumberedList', 1 => 'BulletedList', 2 => '-', 3 => 'Blockquote', 4 => '-', 5 => 'JustifyLeft', 6 => 'JustifyCenter', 7 => 'JustifyRight', 8 => '-', 9 => 'Outdent', 10 => 'Indent')), 4 => array('name' => 'formats', 'items' => array(0 => 'Format', 1 => 'Font', 2 => 'FontSize', 3 => 'TextColor')), 5 => array('name' => 'insert', 'items' => array(0 => 'Table', 1 => 'SpecialChar')), 6 => array('name' => 'links', 'items' => array(0 => 'Link', 1 => 'Unlink', 2 => 'Anchor')), 7 => array('name' => 'customlinks', 'items' => array(0 => 'OrganizationLink', 1 => 'ContactPersonLink')), 8 => array('name' => 'mediainsert', 'items' => array(0 => 'Image', 1 => 'Youtube', 2 => 'Gallery', 3 => 'PhotoLentaGrid', 4 => 'TwentyTwenty', 5 => 'Banner', 6 => 'Quote', 7 => 'FaqBlock', 8 => 'CityDistrictBlock', 9 => 'Infographics')), 9 => array('name' => 'styles', 'items' => array(0 => 'Styles'))), 'filebrowserBrowseRoute' => 'admin_sonata_media_media_ckeditor_browser', 'filebrowserImageBrowseRoute' => 'admin_sonata_media_media_ckeditor_browser', 'filebrowserImageBrowseRouteParameters' => array('provider' => 'sonata.media.provider.image', 'context' => 'main_image'), 'filebrowserUploadRoute' => 'admin_sonata_media_media_ckeditor_upload', 'filebrowserUploadRouteParameters' => array('provider' => 'sonata.media.provider.image', 'context' => 'main_image'), 'filebrowserImageUploadRoute' => 'admin_sonata_media_media_ckeditor_upload', 'filebrowserImageUploadRouteParameters' => array('provider' => 'sonata.media.provider.image', 'context' => 'main_image'), 'allowedContent' => true, 'stylesSet' => 'custom_styles:/js/ckeditor/plugins/stylescombo/styles.js'));
        $instance->setConfig('currently', array('title' => '', 'contentsCss' => '/css/admin/ckeditor.css', 'bodyClass' => 'now-block container__full', 'width' => '990px', 'height' => '300px', 'toolbar' => array(0 => array('name' => 'document', 'items' => array(0 => 'Source')), 1 => array('name' => 'clipboard', 'items' => array(0 => 'Cut', 1 => 'Copy', 2 => 'Paste', 3 => 'PasteText', 4 => 'PasteFromWord', 5 => '-', 6 => 'Undo', 7 => 'Redo')), 2 => array('name' => 'basicstyles', 'items' => array(0 => 'Bold', 1 => 'Italic', 2 => 'RemoveFormat')), 3 => array('name' => 'formats', 'items' => array(0 => 'Format')), 4 => array('name' => 'insert', 'items' => array(0 => 'SpecialChar')), 5 => array('name' => 'links', 'items' => array(0 => 'Link', 1 => 'Unlink')), 6 => array('name' => 'customlinks', 'items' => array(0 => 'OrganizationLink', 1 => 'ContactPersonLink'))), 'allowedContent' => 'p;h4;a[href]'));
        $instance->setDefaultConfig('default');
        return $instance;
    }
    protected function getIvoryCkEditor_Form_TypeService()
    {
        return $this->services['ivory_ck_editor.form.type'] = new \Ivory\CKEditorBundle\Form\Type\CKEditorType(true, true, 'bundles/ivoryckeditor/', 'bundles/ivoryckeditor/ckeditor.js', $this->get('ivory_ck_editor.config_manager'), $this->get('ivory_ck_editor.plugin_manager'), $this->get('ivory_ck_editor.styles_set_manager'), $this->get('ivory_ck_editor.template_manager'));
    }
    protected function getIvoryCkEditor_PluginManagerService()
    {
        $this->services['ivory_ck_editor.plugin_manager'] = $instance = new \Ivory\CKEditorBundle\Model\PluginManager();
        $instance->setPlugin('fakeobjects', array('path' => '/js/ckeditor/plugins/fakeobjects/', 'filename' => 'plugin.js'));
        $instance->setPlugin('galleryplugin', array('path' => '/js/ckeditor/plugins/galleryplugin/', 'filename' => 'galleryplugin.js'));
        $instance->setPlugin('photo_lenta_grid', array('path' => '/js/ckeditor/plugins/photo_lenta_grid/', 'filename' => 'plugin.js'));
        $instance->setPlugin('twenty_twenty', array('path' => '/js/ckeditor/plugins/twenty_twenty/', 'filename' => 'plugin.js'));
        $instance->setPlugin('infographics', array('path' => '/js/ckeditor/plugins/infographics/', 'filename' => 'plugin.js'));
        $instance->setPlugin('organizationlink', array('path' => '/js/ckeditor/plugins/organizationlink/', 'filename' => 'plugin.js'));
        $instance->setPlugin('contactpersonlink', array('path' => '/js/ckeditor/plugins/contactpersonlink/', 'filename' => 'plugin.js'));
        $instance->setPlugin('youtube', array('path' => '/js/ckeditor/plugins/youtube/', 'filename' => 'plugin.js'));
        $instance->setPlugin('banner', array('path' => '/js/ckeditor/plugins/banner/', 'filename' => 'plugin.js'));
        $instance->setPlugin('quote', array('path' => '/js/ckeditor/plugins/quote/', 'filename' => 'plugin.js'));
        $instance->setPlugin('citydistrict_block', array('path' => '/js/ckeditor/plugins/citydistrict_block/', 'filename' => 'plugin.js'));
        $instance->setPlugin('keystrokes', array('path' => '/js/ckeditor/plugins/keystrokes/', 'filename' => 'plugin.js'));
        return $instance;
    }
    protected function getIvoryCkEditor_StylesSetManagerService()
    {
        return $this->services['ivory_ck_editor.styles_set_manager'] = new \Ivory\CKEditorBundle\Model\StylesSetManager();
    }
    protected function getIvoryCkEditor_TemplateManagerService()
    {
        return $this->services['ivory_ck_editor.template_manager'] = new \Ivory\CKEditorBundle\Model\TemplateManager();
    }
    protected function getIvoryCkEditor_Templating_HelperService()
    {
        return $this->services['ivory_ck_editor.templating.helper'] = new \Ivory\CKEditorBundle\Templating\CKEditorHelper($this);
    }
    protected function getIvoryCkEditor_TwigExtensionService()
    {
        return $this->services['ivory_ck_editor.twig_extension'] = new \Ivory\CKEditorBundle\Twig\CKEditorExtension($this->get('ivory_ck_editor.templating.helper'));
    }
    protected function getJmsSerializerService()
    {
        $a = new \JMS\Serializer\EventDispatcher\LazyEventDispatcher($this);
        $a->setListeners(array('serializer.post_serialize' => array(0 => array(0 => array(0 => 'app.serializer.listener.construction_object', 1 => 'onPostSerialize'), 1 => NULL, 2 => NULL)), 'serializer.pre_serialize' => array(0 => array(0 => array(0 => 'jms_serializer.doctrine_proxy_subscriber', 1 => 'onPreSerialize'), 1 => NULL, 2 => NULL))));
        return $this->services['jms_serializer'] = new \JMS\Serializer\Serializer($this->get('jms_serializer.metadata_factory'), $this->get('jms_serializer.handler_registry'), $this->get('jms_serializer.unserialize_object_constructor'), new \PhpCollection\Map(array('json' => $this->get('jms_serializer.json_serialization_visitor'), 'xml' => $this->get('jms_serializer.xml_serialization_visitor'), 'yml' => $this->get('jms_serializer.yaml_serialization_visitor'))), new \PhpCollection\Map(array('json' => $this->get('jms_serializer.json_deserialization_visitor'), 'xml' => $this->get('jms_serializer.xml_deserialization_visitor'))), $a);
    }
    protected function getJmsSerializer_ArrayCollectionHandlerService()
    {
        return $this->services['jms_serializer.array_collection_handler'] = new \JMS\Serializer\Handler\ArrayCollectionHandler();
    }
    protected function getJmsSerializer_ConstraintViolationHandlerService()
    {
        return $this->services['jms_serializer.constraint_violation_handler'] = new \JMS\Serializer\Handler\ConstraintViolationHandler();
    }
    protected function getJmsSerializer_DatetimeHandlerService()
    {
        return $this->services['jms_serializer.datetime_handler'] = new \JMS\Serializer\Handler\DateHandler('Y-m-d\\TH:i:sO', 'Europe/Moscow', true);
    }
    protected function getJmsSerializer_DoctrineProxySubscriberService()
    {
        return $this->services['jms_serializer.doctrine_proxy_subscriber'] = new \JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber();
    }
    protected function getJmsSerializer_FormErrorHandlerService()
    {
        return $this->services['jms_serializer.form_error_handler'] = new \JMS\Serializer\Handler\FormErrorHandler($this->get('translator.default'));
    }
    protected function getJmsSerializer_HandlerRegistryService()
    {
        return $this->services['jms_serializer.handler_registry'] = new \JMS\Serializer\Handler\LazyHandlerRegistry($this, array(1 => array('sonata_user_user_id' => array('json' => array(0 => 'sonata.user.serializer.handler.user', 1 => 'serializeObjectToId'), 'xml' => array(0 => 'sonata.user.serializer.handler.user', 1 => 'serializeObjectToId'), 'yml' => array(0 => 'sonata.user.serializer.handler.user', 1 => 'serializeObjectToId')), 'sonata_media_media_id' => array('json' => array(0 => 'sonata.media.serializer.handler.media', 1 => 'serializeObjectToId'), 'xml' => array(0 => 'sonata.media.serializer.handler.media', 1 => 'serializeObjectToId'), 'yml' => array(0 => 'sonata.media.serializer.handler.media', 1 => 'serializeObjectToId')), 'sonata_media_gallery_id' => array('json' => array(0 => 'sonata.media.serializer.handler.gallery', 1 => 'serializeObjectToId'), 'xml' => array(0 => 'sonata.media.serializer.handler.gallery', 1 => 'serializeObjectToId'), 'yml' => array(0 => 'sonata.media.serializer.handler.gallery', 1 => 'serializeObjectToId')), 'DateTime' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateTime')), 'DateInterval' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'serializeDateInterval')), 'ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\Common\\Collections\\ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ORM\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ODM\\MongoDB\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'Doctrine\\ODM\\PHPCR\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'serializeCollection')), 'PhpCollection\\Sequence' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeSequence')), 'PhpCollection\\Map' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'serializeMap')), 'Symfony\\Component\\Form\\Form' => array('xml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormToxml'), 'json' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormTojson'), 'yml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormToyml')), 'Symfony\\Component\\Form\\FormError' => array('xml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorToxml'), 'json' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorTojson'), 'yml' => array(0 => 'jms_serializer.form_error_handler', 1 => 'serializeFormErrorToyml')), 'Symfony\\Component\\Validator\\ConstraintViolationList' => array('xml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListToxml'), 'json' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListTojson'), 'yml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeListToyml')), 'Symfony\\Component\\Validator\\ConstraintViolation' => array('xml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationToxml'), 'json' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationTojson'), 'yml' => array(0 => 'jms_serializer.constraint_violation_handler', 1 => 'serializeViolationToyml'))), 2 => array('sonata_user_user_id' => array('json' => array(0 => 'sonata.user.serializer.handler.user', 1 => 'deserializeObjectFromId'), 'xml' => array(0 => 'sonata.user.serializer.handler.user', 1 => 'deserializeObjectFromId'), 'yml' => array(0 => 'sonata.user.serializer.handler.user', 1 => 'deserializeObjectFromId')), 'sonata_media_media_id' => array('json' => array(0 => 'sonata.media.serializer.handler.media', 1 => 'deserializeObjectFromId'), 'xml' => array(0 => 'sonata.media.serializer.handler.media', 1 => 'deserializeObjectFromId'), 'yml' => array(0 => 'sonata.media.serializer.handler.media', 1 => 'deserializeObjectFromId')), 'sonata_media_gallery_id' => array('json' => array(0 => 'sonata.media.serializer.handler.gallery', 1 => 'deserializeObjectFromId'), 'xml' => array(0 => 'sonata.media.serializer.handler.gallery', 1 => 'deserializeObjectFromId'), 'yml' => array(0 => 'sonata.media.serializer.handler.gallery', 1 => 'deserializeObjectFromId')), 'DateTime' => array('json' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromjson'), 'xml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromxml'), 'yml' => array(0 => 'jms_serializer.datetime_handler', 1 => 'deserializeDateTimeFromyml')), 'ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\Common\\Collections\\ArrayCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ORM\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ODM\\MongoDB\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'Doctrine\\ODM\\PHPCR\\PersistentCollection' => array('json' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'xml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection'), 'yml' => array(0 => 'jms_serializer.array_collection_handler', 1 => 'deserializeCollection')), 'PhpCollection\\Sequence' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeSequence')), 'PhpCollection\\Map' => array('json' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'), 'xml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap'), 'yml' => array(0 => 'jms_serializer.php_collection_handler', 1 => 'deserializeMap')))));
    }
    protected function getJmsSerializer_JsonDeserializationVisitorService()
    {
        return $this->services['jms_serializer.json_deserialization_visitor'] = new \JMS\Serializer\JsonDeserializationVisitor($this->get('jms_serializer.naming_strategy'), $this->get('jms_serializer.unserialize_object_constructor'));
    }
    protected function getJmsSerializer_JsonSerializationVisitorService()
    {
        $this->services['jms_serializer.json_serialization_visitor'] = $instance = new \JMS\Serializer\JsonSerializationVisitor($this->get('jms_serializer.naming_strategy'));
        $instance->setOptions(256);
        return $instance;
    }
    protected function getJmsSerializer_MetadataDriverService()
    {
        $a = new \Metadata\Driver\FileLocator(array('Symfony\\Bundle\\FrameworkBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer'), 'Symfony\\Bundle\\SecurityBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer'), 'Symfony\\Bundle\\TwigBundle' => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer'), 'Symfony\\Bundle\\MonologBundle' => ($this->targetDirs[3].'/vendor/symfony/monolog-bundle/Resources/config/serializer'), 'Symfony\\Bundle\\SwiftmailerBundle' => ($this->targetDirs[3].'/vendor/symfony/swiftmailer-bundle/Resources/config/serializer'), 'Symfony\\Bundle\\AsseticBundle' => ($this->targetDirs[3].'/vendor/symfony/assetic-bundle/Resources/config/serializer'), 'Doctrine\\Bundle\\DoctrineBundle' => ($this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/Resources/config/serializer'), 'Sensio\\Bundle\\FrameworkExtraBundle' => ($this->targetDirs[3].'/vendor/sensio/framework-extra-bundle/Resources/config/serializer'), 'FOS\\UserBundle' => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/serializer'), 'Sonata\\CoreBundle' => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/config/serializer'), 'Sonata\\BlockBundle' => ($this->targetDirs[3].'/vendor/sonata-project/block-bundle/Resources/config/serializer'), 'Knp\\Bundle\\MenuBundle' => ($this->targetDirs[3].'/vendor/knplabs/knp-menu-bundle/Knp/Bundle/MenuBundle/Resources/config/serializer'), 'Sonata\\DoctrineORMAdminBundle' => ($this->targetDirs[3].'/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer'), 'Sonata\\AdminBundle' => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/config/serializer'), 'Sonata\\EasyExtendsBundle' => ($this->targetDirs[3].'/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer'), 'Sonata\\UserBundle' => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/config/serializer'), 'Sonata\\MediaBundle' => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/config/serializer'), 'Application\\Sonata\\UserBundle' => ($this->targetDirs[3].'/src/Application/Sonata/UserBundle/Resources/config/serializer'), 'Sonata\\IntlBundle' => ($this->targetDirs[3].'/vendor/sonata-project/intl-bundle/Resources/config/serializer'), 'Application\\Sonata\\MediaBundle' => ($this->targetDirs[3].'/src/Application/Sonata/MediaBundle/Resources/config/serializer'), 'Application\\Sonata\\FormatterBundle' => ($this->targetDirs[3].'/src/Application/Sonata/FormatterBundle/Resources/config/serializer'), 'SimpleThings\\EntityAudit' => ($this->targetDirs[3].'/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/Resources/config/serializer'), 'Stof\\DoctrineExtensionsBundle' => ($this->targetDirs[3].'/vendor/stof/doctrine-extensions-bundle/Resources/config/serializer'), 'JMS\\SerializerBundle' => ($this->targetDirs[3].'/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer'), 'Knp\\Bundle\\MarkdownBundle' => ($this->targetDirs[3].'/vendor/knplabs/knp-markdown-bundle/Knp/Bundle/MarkdownBundle/Resources/config/serializer'), 'Ivory\\CKEditorBundle' => ($this->targetDirs[3].'/vendor/egeloen/ckeditor-bundle/Resources/config/serializer'), 'Sonata\\FormatterBundle' => ($this->targetDirs[3].'/vendor/sonata-project/formatter-bundle/Resources/config/serializer'), 'Sonata\\SeoBundle' => ($this->targetDirs[3].'/vendor/sonata-project/seo-bundle/Resources/config/serializer'), 'Presta\\SitemapBundle' => ($this->targetDirs[3].'/vendor/presta/sitemap-bundle/Resources/config/serializer'), 'Symfony\\Cmf\\Bundle\\RoutingBundle' => ($this->targetDirs[3].'/vendor/symfony-cmf/routing-bundle/Resources/config/serializer'), 'Amg\\Bundle\\PageBundle' => ($this->targetDirs[3].'/src/Amg/Bundle/PageBundle/Resources/config/serializer'), 'Amg\\Bundle\\AdminBundle' => ($this->targetDirs[3].'/src/Amg/Bundle/AdminBundle/Resources/config/serializer'), 'FOS\\ElasticaBundle' => ($this->targetDirs[3].'/vendor/friendsofsymfony/elastica-bundle/Resources/config/serializer'), 'Liip\\ImagineBundle' => ($this->targetDirs[3].'/vendor/liip/imagine-bundle/Liip/ImagineBundle/Resources/config/serializer'), 'AppBundle' => ($this->targetDirs[3].'/src/AppBundle/Resources/config/serializer'), 'Amg\\Bundle\\FormBundle' => ($this->targetDirs[3].'/src/Amg/Bundle/FormBundle/Resources/config/serializer'), 'Amg\\Bundle\\TagBundle' => ($this->targetDirs[3].'/src/Amg/Bundle/TagBundle/Resources/config/serializer'), 'Snc\\RedisBundle' => ($this->targetDirs[3].'/vendor/snc/redis-bundle/Snc/RedisBundle/Resources/config/serializer'), 'Doctrine\\Bundle\\MigrationsBundle' => ($this->targetDirs[3].'/vendor/doctrine/doctrine-migrations-bundle/Doctrine/Bundle/MigrationsBundle/Resources/config/serializer'), 'Sonata\\CacheBundle' => ($this->targetDirs[3].'/vendor/sonata-project/cache-bundle/Resources/config/serializer'), 'Nmure\\CrawlerDetectBundle' => ($this->targetDirs[3].'/vendor/nmure/crawler-detect-bundle/Resources/config/serializer'), 'Stroi\\MobileBundle' => ($this->targetDirs[3].'/vendor/alexander_nemanov/stroi-mobile/Resources/config/serializer'), 'ApiBundle' => ($this->targetDirs[3].'/src/ApiBundle/Resources/config/serializer'), 'Sentry\\SentryBundle' => ($this->targetDirs[3].'/vendor/sentry/sentry-symfony/src/Resources/config/serializer')));
        return $this->services['jms_serializer.metadata_driver'] = new \JMS\Serializer\Metadata\Driver\DoctrineTypeDriver(new \Metadata\Driver\DriverChain(array(0 => new \JMS\Serializer\Metadata\Driver\YamlDriver($a), 1 => new \JMS\Serializer\Metadata\Driver\XmlDriver($a), 2 => new \JMS\Serializer\Metadata\Driver\PhpDriver($a), 3 => new \JMS\Serializer\Metadata\Driver\AnnotationDriver($this->get('annotation_reader')))), $this->get('doctrine'));
    }
    protected function getJmsSerializer_NamingStrategyService()
    {
        return $this->services['jms_serializer.naming_strategy'] = new \JMS\Serializer\Naming\CacheNamingStrategy(new \JMS\Serializer\Naming\SerializedNameAnnotationStrategy(new \JMS\Serializer\Naming\CamelCaseNamingStrategy('_', true)));
    }
    protected function getJmsSerializer_ObjectConstructorService()
    {
        return $this->services['jms_serializer.object_constructor'] = new \JMS\Serializer\Construction\DoctrineObjectConstructor($this->get('doctrine'), $this->get('jms_serializer.unserialize_object_constructor'));
    }
    protected function getJmsSerializer_PhpCollectionHandlerService()
    {
        return $this->services['jms_serializer.php_collection_handler'] = new \JMS\Serializer\Handler\PhpCollectionHandler();
    }
    protected function getJmsSerializer_Templating_Helper_SerializerService()
    {
        return $this->services['jms_serializer.templating.helper.serializer'] = new \JMS\SerializerBundle\Templating\SerializerHelper($this->get('jms_serializer'));
    }
    protected function getJmsSerializer_XmlDeserializationVisitorService()
    {
        $this->services['jms_serializer.xml_deserialization_visitor'] = $instance = new \JMS\Serializer\XmlDeserializationVisitor($this->get('jms_serializer.naming_strategy'), $this->get('jms_serializer.unserialize_object_constructor'));
        $instance->setDoctypeWhitelist(array());
        return $instance;
    }
    protected function getJmsSerializer_XmlSerializationVisitorService()
    {
        return $this->services['jms_serializer.xml_serialization_visitor'] = new \JMS\Serializer\XmlSerializationVisitor($this->get('jms_serializer.naming_strategy'));
    }
    protected function getJmsSerializer_YamlSerializationVisitorService()
    {
        return $this->services['jms_serializer.yaml_serialization_visitor'] = new \JMS\Serializer\YamlSerializationVisitor($this->get('jms_serializer.naming_strategy'));
    }
    protected function getKernelService()
    {
        throw new RuntimeException('You have requested a synthetic service ("kernel"). The DIC does not know how to construct this service.');
    }
    protected function getKnpMenu_FactoryService()
    {
        $this->services['knp_menu.factory'] = $instance = new \Knp\Menu\MenuFactory();
        $instance->addExtension($this->get('app.menu.factory_extension.linked_entity'), 2);
        $instance->addExtension(new \Knp\Menu\Integration\Symfony\RoutingExtension($this->get('cmf_routing.router')), 0);
        return $instance;
    }
    protected function getKnpMenu_Listener_VotersService()
    {
        $this->services['knp_menu.listener.voters'] = $instance = new \Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener();
        $instance->addVoter($this->get('knp_menu.voter.router'));
        $instance->addVoter($this->get('app.menu.matcher_voter.subroute'));
        return $instance;
    }
    protected function getKnpMenu_MatcherService()
    {
        $this->services['knp_menu.matcher'] = $instance = new \Knp\Menu\Matcher\Matcher();
        $instance->addVoter($this->get('knp_menu.voter.router'));
        $instance->addVoter($this->get('app.menu.matcher_voter.subroute'));
        return $instance;
    }
    protected function getKnpMenu_MenuProviderService()
    {
        return $this->services['knp_menu.menu_provider'] = new \Knp\Menu\Provider\ChainProvider(array(0 => $this->get('app.menu.provider.gsk'), 1 => new \Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider($this, array()), 2 => new \Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider($this->get('kernel'), $this, $this->get('knp_menu.factory')), 3 => $this->get('amg_page.menu.provider.page'), 4 => $this->get('amg_page.menu.provider.sitemap')));
    }
    protected function getKnpMenu_Renderer_ListService()
    {
        return $this->services['knp_menu.renderer.list'] = new \Knp\Menu\Renderer\ListRenderer($this->get('knp_menu.matcher'), array(), 'UTF-8');
    }
    protected function getKnpMenu_Renderer_TwigService()
    {
        return $this->services['knp_menu.renderer.twig'] = new \Knp\Menu\Renderer\TwigRenderer($this->get('twig'), 'knp_menu.html.twig', $this->get('knp_menu.matcher'), array());
    }
    protected function getKnpMenu_RendererProviderService()
    {
        return $this->services['knp_menu.renderer_provider'] = new \Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider($this, 'twig', array('list' => 'knp_menu.renderer.list', 'twig' => 'knp_menu.renderer.twig'));
    }
    protected function getKnpMenu_Voter_RouterService()
    {
        return $this->services['knp_menu.voter.router'] = new \Knp\Menu\Matcher\Voter\RouteVoter();
    }
    protected function getLastPostsService()
    {
        $this->services['last_posts'] = $instance = new \AppBundle\Block\LastPostsBlock('last_posts', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        return $instance;
    }
    protected function getLiipImagineService()
    {
        $this->services['liip_imagine'] = $instance = new \Imagine\Gd\Imagine();
        $instance->setMetadataReader(new \Imagine\Image\Metadata\ExifMetadataReader());
        return $instance;
    }
    protected function getLiipImagine_Binary_Loader_DefaultService()
    {
        return $this->services['liip_imagine.binary.loader.default'] = new \Liip\ImagineBundle\Binary\Loader\FileSystemLoader($this->get('liip_imagine.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), ($this->targetDirs[2].'/../web/uploads/media'));
    }
    protected function getLiipImagine_Binary_Loader_Prototype_FilesystemService()
    {
        return $this->services['liip_imagine.binary.loader.prototype.filesystem'] = new \Liip\ImagineBundle\Binary\Loader\FileSystemLoader($this->get('liip_imagine.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), '');
    }
    protected function getLiipImagine_Binary_Loader_Prototype_StreamService()
    {
        return $this->services['liip_imagine.binary.loader.prototype.stream'] = new \Liip\ImagineBundle\Binary\Loader\StreamLoader('', '');
    }
    protected function getLiipImagine_Binary_Loader_WebRootService()
    {
        return $this->services['liip_imagine.binary.loader.web_root'] = new \Liip\ImagineBundle\Binary\Loader\FileSystemLoader($this->get('liip_imagine.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), ($this->targetDirs[2].'/../web'));
    }
    protected function getLiipImagine_Binary_MimeTypeGuesserService()
    {
        return $this->services['liip_imagine.binary.mime_type_guesser'] = new \Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser($this->get('liip_imagine.mime_type_guesser'));
    }
    protected function getLiipImagine_Cache_ManagerService()
    {
        $this->services['liip_imagine.cache.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Cache\CacheManager($this->get('liip_imagine.filter.configuration'), $this->get('cmf_routing.router'), $this->get('liip_imagine.cache.signer'), $this->get('event_dispatcher'), 'default');
        $instance->addResolver('default', $this->get('liip_imagine.cache.resolver.default'));
        $instance->addResolver('no_cache', $this->get('liip_imagine.cache.resolver.no_cache_web_path'));
        return $instance;
    }
    protected function getLiipImagine_Cache_Resolver_DefaultService()
    {
        return $this->services['liip_imagine.cache.resolver.default'] = new \Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver($this->get('filesystem'), $this->get('router.request_context'), ($this->targetDirs[2].'/../web'), 'uploads/cache');
    }
    protected function getLiipImagine_Cache_Resolver_NoCacheWebPathService()
    {
        return $this->services['liip_imagine.cache.resolver.no_cache_web_path'] = new \Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver($this->get('router.request_context'));
    }
    protected function getLiipImagine_Cache_SignerService()
    {
        return $this->services['liip_imagine.cache.signer'] = new \Liip\ImagineBundle\Imagine\Cache\Signer('dfloiuygHJNKL-----------3hfdasfghghasdhfkfffffffffff');
    }
    protected function getLiipImagine_ControllerService()
    {
        return $this->services['liip_imagine.controller'] = new \Liip\ImagineBundle\Controller\ImagineController($this->get('liip_imagine.data.manager'), $this->get('liip_imagine.filter.manager'), $this->get('liip_imagine.cache.manager'), $this->get('liip_imagine.cache.signer'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getLiipImagine_Data_ManagerService()
    {
        $this->services['liip_imagine.data.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Data\DataManager($this->get('liip_imagine.binary.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), $this->get('liip_imagine.filter.configuration'), 'default', NULL);
        $instance->addLoader('default', $this->get('liip_imagine.binary.loader.default'));
        $instance->addLoader('web_root', $this->get('liip_imagine.binary.loader.web_root'));
        return $instance;
    }
    protected function getLiipImagine_ExtensionGuesserService()
    {
        return $this->services['liip_imagine.extension_guesser'] = \Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser::getInstance();
    }
    protected function getLiipImagine_Filter_ConfigurationService()
    {
        return $this->services['liip_imagine.filter.configuration'] = new \Liip\ImagineBundle\Imagine\Filter\FilterConfiguration(array('admin' => array('filters' => array('thumbnail' => array('size' => array(0 => 100, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb' => array('filters' => array('thumbnail' => array('size' => array(0 => 140, 1 => 100))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb70' => array('filters' => array('thumbnail' => array('size' => array(0 => 70, 1 => 70))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb210' => array('filters' => array('thumbnail' => array('size' => array(0 => 210, 1 => 150))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb212' => array('filters' => array('thumbnail' => array('size' => array(0 => 212, 1 => 128))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb300' => array('filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 200), 'mode' => 'outbound')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb300x230' => array('filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 230))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb300x420' => array('filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 420))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb306' => array('filters' => array('thumbnail' => array('size' => array(0 => 306, 1 => 389))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb323' => array('filters' => array('thumbnail' => array('size' => array(0 => 232, 1 => 212))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb336' => array('filters' => array('thumbnail' => array('size' => array(0 => 336, 1 => 280))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb385' => array('filters' => array('thumbnail' => array('size' => array(0 => 385, 1 => 240))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb451' => array('filters' => array('thumbnail' => array('size' => array(0 => 451, 1 => 273))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb469' => array('filters' => array('thumbnail' => array('size' => array(0 => 469, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb465x548' => array('filters' => array('thumbnail' => array('size' => array(0 => 465, 1 => 548))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb500' => array('filters' => array('thumbnail' => array('size' => array(0 => 500, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb589' => array('filters' => array('thumbnail' => array('size' => array(0 => 589, 1 => 454))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb596' => array('filters' => array('thumbnail' => array('size' => array(0 => 596, 1 => 368))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb600x400' => array('filters' => array('thumbnail' => array('size' => array(0 => 600, 1 => 400))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb630x338' => array('filters' => array('thumbnail' => array('size' => array(0 => 630, 1 => 338))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb715x250' => array('filters' => array('thumbnail' => array('size' => array(0 => 715, 1 => 250))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb960' => array('filters' => array('thumbnail' => array('size' => array(0 => 960, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb960x470' => array('filters' => array('thumbnail' => array('size' => array(0 => 960, 1 => 470))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb1440' => array('filters' => array('thumbnail' => array('size' => array(0 => 1440, 1 => 454))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb300x90' => array('filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 90))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb340x340' => array('filters' => array('thumbnail' => array('size' => array(0 => 340, 1 => 340))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb271x125' => array('filters' => array('thumbnail' => array('size' => array(0 => 271, 1 => 125))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'thumb295x345' => array('filters' => array('thumbnail' => array('size' => array(0 => 295, 1 => 345))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'full' => array('filters' => array('thumbnail' => array('size' => array(0 => 1900, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'page_header_700' => array('filters' => array('thumbnail' => array('size' => array(0 => 700, 1 => 400))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'newsletter_highlight' => array('filters' => array('thumbnail' => array('size' => array(0 => 600, 1 => 400))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'newsletter_post_l' => array('filters' => array('thumbnail' => array('size' => array(0 => 405, 1 => 245))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'newsletter_post' => array('filters' => array('thumbnail' => array('size' => array(0 => 150, 1 => 150))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'newsletter_media' => array('filters' => array('thumbnail' => array('size' => array(0 => 600, 1 => 400))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'newsletter_video_play' => array('filters' => array('thumbnail' => array('size' => array(0 => 600, 1 => 400)), 'watermark' => array('image' => 'Resources/data/overlay/play_btn.png', 'position' => 'center')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'web_root_thumb300' => array('data_loader' => 'web_root', 'filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 200), 'mode' => 'outbound')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb' => array('filters' => array('thumbnail' => array('size' => array(0 => 140, 1 => 100))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb210' => array('filters' => array('thumbnail' => array('size' => array(0 => 210, 1 => 150))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb212' => array('filters' => array('thumbnail' => array('size' => array(0 => 212, 1 => 128))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb300' => array('filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 200), 'mode' => 'outbound')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb300x230' => array('filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 230))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb306' => array('filters' => array('thumbnail' => array('size' => array(0 => 306, 1 => 389))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb323' => array('filters' => array('thumbnail' => array('size' => array(0 => 232, 1 => 212))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb336' => array('filters' => array('thumbnail' => array('size' => array(0 => 336, 1 => 280))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb385' => array('filters' => array('thumbnail' => array('size' => array(0 => 385, 1 => 240))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb451' => array('filters' => array('thumbnail' => array('size' => array(0 => 451, 1 => 273))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb469' => array('filters' => array('thumbnail' => array('size' => array(0 => 469, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb465x548' => array('filters' => array('thumbnail' => array('size' => array(0 => 465, 1 => 548))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb500' => array('filters' => array('thumbnail' => array('size' => array(0 => 500, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb589' => array('filters' => array('thumbnail' => array('size' => array(0 => 589, 1 => 454))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb596' => array('filters' => array('thumbnail' => array('size' => array(0 => 596, 1 => 368))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb715x250' => array('filters' => array('thumbnail' => array('size' => array(0 => 715, 1 => 250))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb960' => array('filters' => array('thumbnail' => array('size' => array(0 => 960, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb960x470' => array('filters' => array('thumbnail' => array('size' => array(0 => 960, 1 => 470))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb1440' => array('filters' => array('thumbnail' => array('size' => array(0 => 1440, 1 => 454))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb300x90' => array('filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 90))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb340x340' => array('filters' => array('thumbnail' => array('size' => array(0 => 340, 1 => 340))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb271x125' => array('filters' => array('thumbnail' => array('size' => array(0 => 271, 1 => 125))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_thumb295x345' => array('filters' => array('thumbnail' => array('size' => array(0 => 295, 1 => 345))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_full' => array('filters' => array('thumbnail' => array('size' => array(0 => 1900, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_page_header_700' => array('filters' => array('thumbnail' => array('size' => array(0 => 700, 1 => 400))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_newsletter_highlight' => array('filters' => array('thumbnail' => array('size' => array(0 => 600, 1 => 400))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_newsletter_post_l' => array('filters' => array('thumbnail' => array('size' => array(0 => 405, 1 => 245))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_newsletter_post' => array('filters' => array('thumbnail' => array('size' => array(0 => 150, 1 => 150))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_newsletter_media' => array('filters' => array('thumbnail' => array('size' => array(0 => 600, 1 => 400))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_newsletter_video_play' => array('filters' => array('thumbnail' => array('size' => array(0 => 600, 1 => 400)), 'watermark' => array('image' => 'Resources/data/overlay/play_btn.png', 'position' => 'center')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_main_image_thumb1440' => array('filters' => array('thumbnail' => array('size' => array(0 => 1440, 1 => 454))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_infographics_top_large' => array('filters' => array('relative_resize' => array('widen' => 630), 'crop' => array('start' => array(0 => 0, 1 => 0), 'size' => array(0 => 630, 1 => 338))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_infographics_top' => array('filters' => array('relative_resize' => array('widen' => 298), 'crop' => array('start' => array(0 => 0, 1 => 0), 'size' => array(0 => 298, 1 => 162))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'main_image_infographics_list' => array('filters' => array('relative_resize' => array('widen' => 469), 'crop' => array('start' => array(0 => 0, 1 => 0), 'size' => array(0 => 469, 1 => 275))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'infographics_thumb' => array('filters' => array('thumbnail' => array('size' => array(0 => 140, 1 => 100))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'infographics_thumb200' => array('filters' => array('thumbnail' => array('size' => array(0 => 200, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'infographics_full' => array('filters' => array('thumbnail' => array('size' => array(0 => 960, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'file_thumb' => array('filters' => array('thumbnail' => array('size' => array(0 => 64, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'video_thumb' => array('filters' => array('thumbnail' => array('size' => array(0 => 140, 1 => 100))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb780' => array('filters' => array('thumbnail' => array('size' => array(0 => 780, 1 => 580))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb' => array('filters' => array('thumbnail' => array('size' => array(0 => 140, 1 => 100))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb210' => array('filters' => array('thumbnail' => array('size' => array(0 => 210, 1 => 150))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb212' => array('filters' => array('thumbnail' => array('size' => array(0 => 212, 1 => 128))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb300' => array('filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 200), 'mode' => 'outbound')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb300x230' => array('filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 230))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb300x420' => array('filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 420))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb306' => array('filters' => array('thumbnail' => array('size' => array(0 => 306, 1 => 389))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb323' => array('filters' => array('thumbnail' => array('size' => array(0 => 232, 1 => 212))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb336' => array('filters' => array('thumbnail' => array('size' => array(0 => 336, 1 => 280))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb385' => array('filters' => array('thumbnail' => array('size' => array(0 => 385, 1 => 240))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb451' => array('filters' => array('thumbnail' => array('size' => array(0 => 451, 1 => 273))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb465x548' => array('filters' => array('thumbnail' => array('size' => array(0 => 465, 1 => 548))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb469' => array('filters' => array('thumbnail' => array('size' => array(0 => 469, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb500' => array('filters' => array('thumbnail' => array('size' => array(0 => 500, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb589' => array('filters' => array('thumbnail' => array('size' => array(0 => 589, 1 => 454))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb596' => array('filters' => array('thumbnail' => array('size' => array(0 => 596, 1 => 368))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb715x250' => array('filters' => array('thumbnail' => array('size' => array(0 => 715, 1 => 250))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb960' => array('filters' => array('thumbnail' => array('size' => array(0 => 960, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb960x470' => array('filters' => array('thumbnail' => array('size' => array(0 => 960, 1 => 470))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_thumb1440' => array('filters' => array('thumbnail' => array('size' => array(0 => 1440, 1 => 454))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_image_thumb300x90' => array('filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 90))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_image_thumb340x340' => array('filters' => array('thumbnail' => array('size' => array(0 => 340, 1 => 340))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_image_thumb271x125' => array('filters' => array('thumbnail' => array('size' => array(0 => 271, 1 => 125))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_image_thumb295x345' => array('filters' => array('thumbnail' => array('size' => array(0 => 295, 1 => 345))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_full' => array('filters' => array('thumbnail' => array('size' => array(0 => 1900, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_newsletter_highlight' => array('filters' => array('thumbnail' => array('size' => array(0 => 600, 1 => 400))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_newsletter_post_l' => array('filters' => array('thumbnail' => array('size' => array(0 => 405, 1 => 245))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_newsletter_post' => array('filters' => array('thumbnail' => array('size' => array(0 => 150, 1 => 150))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_newsletter_media' => array('filters' => array('thumbnail' => array('size' => array(0 => 600, 1 => 400))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_newsletter_video_play' => array('filters' => array('thumbnail' => array('size' => array(0 => 600, 1 => 400)), 'watermark' => array('image' => 'Resources/data/overlay/play_btn.png', 'position' => 'center')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_infographics_top_large' => array('filters' => array('relative_resize' => array('widen' => 630), 'crop' => array('start' => array(0 => 0, 1 => 0), 'size' => array(0 => 630, 1 => 338))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_infographics_top' => array('filters' => array('relative_resize' => array('widen' => 298), 'crop' => array('start' => array(0 => 0, 1 => 0), 'size' => array(0 => 298, 1 => 162))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'gallery_media_infographics_list' => array('filters' => array('relative_resize' => array('widen' => 469), 'crop' => array('start' => array(0 => 0, 1 => 0), 'size' => array(0 => 469, 1 => 275))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'person_thumb' => array('filters' => array('thumbnail' => array('size' => array(0 => 140, 1 => 100))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'person_thumb70' => array('filters' => array('thumbnail' => array('size' => array(0 => 70, 1 => 70))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'person_direction' => array('filters' => array('thumbnail' => array('size' => array(0 => 300, 1 => 264))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'person_direction_main' => array('filters' => array('thumbnail' => array('size' => array(0 => 314, 1 => 375))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'person_struct_list' => array('filters' => array('relative_resize' => array('widen' => 305), 'thumbnail' => array('size' => array(0 => 305, 1 => 202), 'mode' => 'outbound')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'person_profile_title' => array('filters' => array('relative_resize' => array('widen' => 300), 'thumbnail' => array('size' => array(0 => 300, 1 => 210), 'mode' => 'outbound')), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'person_top_thumb' => array('filters' => array('thumbnail' => array('size' => array(0 => 140, 1 => 100))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'person_top_struct_list_top' => array('filters' => array('thumbnail' => array('size' => array(0 => 320, 1 => 387))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'metro_timeline_thumb' => array('filters' => array('thumbnail' => array('size' => array(0 => 140, 1 => 100))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array()), 'metro_timeline_thumb960' => array('filters' => array('thumbnail' => array('size' => array(0 => 960, 1 => NULL))), 'quality' => 100, 'jpeg_quality' => NULL, 'png_compression_level' => NULL, 'png_compression_filter' => NULL, 'format' => NULL, 'animated' => false, 'cache' => NULL, 'data_loader' => NULL, 'default_image' => NULL, 'post_processors' => array())));
    }
    protected function getLiipImagine_Filter_Loader_AutoRotateService()
    {
        return $this->services['liip_imagine.filter.loader.auto_rotate'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_BackgroundService()
    {
        return $this->services['liip_imagine.filter.loader.background'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader($this->get('liip_imagine'));
    }
    protected function getLiipImagine_Filter_Loader_CropService()
    {
        return $this->services['liip_imagine.filter.loader.crop'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_InterlaceService()
    {
        return $this->services['liip_imagine.filter.loader.interlace'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_PasteService()
    {
        return $this->services['liip_imagine.filter.loader.paste'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader($this->get('liip_imagine'), $this->targetDirs[2]);
    }
    protected function getLiipImagine_Filter_Loader_RelativeResizeService()
    {
        return $this->services['liip_imagine.filter.loader.relative_resize'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_ResizeService()
    {
        return $this->services['liip_imagine.filter.loader.resize'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_RotateService()
    {
        return $this->services['liip_imagine.filter.loader.rotate'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_StripService()
    {
        return $this->services['liip_imagine.filter.loader.strip'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_ThumbnailService()
    {
        return $this->services['liip_imagine.filter.loader.thumbnail'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_UpscaleService()
    {
        return $this->services['liip_imagine.filter.loader.upscale'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_WatermarkService()
    {
        return $this->services['liip_imagine.filter.loader.watermark'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader($this->get('liip_imagine'), $this->targetDirs[2]);
    }
    protected function getLiipImagine_Filter_ManagerService()
    {
        $this->services['liip_imagine.filter.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Filter\FilterManager($this->get('liip_imagine.filter.configuration'), $this->get('liip_imagine'), $this->get('liip_imagine.binary.mime_type_guesser'));
        $instance->addLoader('relative_resize', $this->get('liip_imagine.filter.loader.relative_resize'));
        $instance->addLoader('resize', $this->get('liip_imagine.filter.loader.resize'));
        $instance->addLoader('thumbnail', $this->get('liip_imagine.filter.loader.thumbnail'));
        $instance->addLoader('crop', $this->get('liip_imagine.filter.loader.crop'));
        $instance->addLoader('paste', $this->get('liip_imagine.filter.loader.paste'));
        $instance->addLoader('watermark', $this->get('liip_imagine.filter.loader.watermark'));
        $instance->addLoader('background', $this->get('liip_imagine.filter.loader.background'));
        $instance->addLoader('strip', $this->get('liip_imagine.filter.loader.strip'));
        $instance->addLoader('upscale', $this->get('liip_imagine.filter.loader.upscale'));
        $instance->addLoader('auto_rotate', $this->get('liip_imagine.filter.loader.auto_rotate'));
        $instance->addLoader('rotate', $this->get('liip_imagine.filter.loader.rotate'));
        $instance->addLoader('interlace', $this->get('liip_imagine.filter.loader.interlace'));
        $instance->addPostProcessor('jpegoptim', $this->get('liip_imagine.filter.post_processor.jpegoptim'));
        return $instance;
    }
    protected function getLiipImagine_Filter_PostProcessor_JpegoptimService()
    {
        return $this->services['liip_imagine.filter.post_processor.jpegoptim'] = new \Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor('/usr/bin/jpegoptim');
    }
    protected function getLiipImagine_Form_Type_ImageService()
    {
        return $this->services['liip_imagine.form.type.image'] = new \Liip\ImagineBundle\Form\Type\ImageType();
    }
    protected function getLiipImagine_MimeTypeGuesserService()
    {
        return $this->services['liip_imagine.mime_type_guesser'] = \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser::getInstance();
    }
    protected function getLiipImagine_Templating_HelperService()
    {
        return $this->services['liip_imagine.templating.helper'] = new \Liip\ImagineBundle\Templating\Helper\ImagineHelper($this->get('liip_imagine.cache.manager'));
    }
    protected function getLocaleListenerService()
    {
        return $this->services['locale_listener'] = new \Symfony\Component\HttpKernel\EventListener\LocaleListener('ru', $this->get('cmf_routing.router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('request_stack'));
    }
    protected function getLoggerService()
    {
        $this->services['logger'] = $instance = new \Symfony\Bridge\Monolog\Logger('app');
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMarkdown_ParserService()
    {
        return $this->services['markdown.parser'] = new \Knp\Bundle\MarkdownBundle\Parser\Preset\Max();
    }
    protected function getMaterialOwnerLinkService()
    {
        $this->services['material_owner_link'] = $instance = new \AppBundle\Block\MaterialOwnerLinkBlock('material_owner_link', $this->get('templating'));
        $instance->setAdminLocator($this->get('app.admin_locator'));
        $instance->setTokenStorage($this->get('security.token_storage'));
        return $instance;
    }
    protected function getMetroConstructedStationsBlockService()
    {
        $this->services['metro_constructed_stations_block'] = $instance = new \AppBundle\Block\MetroConstructedStationsBlock('metro_constructed_stations_block', $this->get('templating'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getMetroVitdeoTourService()
    {
        $this->services['metro_vitdeo_tour'] = $instance = new \AppBundle\Block\MetroVideoTourBlock('metro_vitdeo_tour', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setFormFactory($this->get('form.factory'));
        return $instance;
    }
    protected function getMobileBlockConstructionListService()
    {
        $this->services['mobile_block_construction_list'] = $instance = new \Stroi\MobileBundle\Block\MobileConstructionListBlock('mobile_block_construction_list', $this->get('templating'));
        $instance->setRequestStack($this->get('request_stack'));
        $instance->setSearchService($this->get('app.search.construction_object'));
        return $instance;
    }
    protected function getMobileBlockPostListService()
    {
        $this->services['mobile_block_post_list'] = $instance = new \Stroi\MobileBundle\Block\MobilePostListBlock('mobile_block_post_list', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRequestStack($this->get('request_stack'));
        return $instance;
    }
    protected function getMonolog_Handler_BufferedService()
    {
        return $this->services['monolog.handler.buffered'] = new \Monolog\Handler\BufferHandler($this->get('monolog.handler.swift'), 0, 100, true);
    }
    protected function getMonolog_Handler_GroupedService()
    {
        return $this->services['monolog.handler.grouped'] = new \Monolog\Handler\GroupHandler(array(0 => $this->get('monolog.handler.streamed'), 1 => $this->get('monolog.handler.buffered')), true);
    }
    protected function getMonolog_Handler_MainService()
    {
        return $this->services['monolog.handler.main'] = new \Monolog\Handler\FingersCrossedHandler($this->get('monolog.handler.grouped'), $this->get('monolog.handler.main.not_found_strategy'), 0, true, true, NULL);
    }
    protected function getMonolog_Handler_Main_NotFoundStrategyService()
    {
        $this->services['monolog.handler.main.not_found_strategy'] = $instance = new \Symfony\Bundle\MonologBundle\NotFoundActivationStrategy(array(0 => '^/'), 400);
        $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        return $instance;
    }
    protected function getMonolog_Handler_StreamedService()
    {
        return $this->services['monolog.handler.streamed'] = new \Monolog\Handler\StreamHandler(($this->targetDirs[2].'/logs/prod.log'), 100, true, NULL);
    }
    protected function getMonolog_Handler_SwiftService()
    {
        $this->services['monolog.handler.swift'] = $instance = new \Symfony\Bridge\Monolog\Handler\SwiftMailerHandler($this->get('swiftmailer.mailer.default'), $this->get('monolog.handler.swift.mail_prototype'), 100, true);
        $instance->setTransport($this->get('swiftmailer.mailer.default.transport.real'));
        return $instance;
    }
    protected function getMonolog_Logger_AsseticService()
    {
        $this->services['monolog.logger.assetic'] = $instance = new \Symfony\Bridge\Monolog\Logger('assetic');
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_DoctrineService()
    {
        $this->services['monolog.logger.doctrine'] = $instance = new \Symfony\Bridge\Monolog\Logger('doctrine');
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_ElasticaService()
    {
        $this->services['monolog.logger.elastica'] = $instance = new \Symfony\Bridge\Monolog\Logger('elastica');
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_PhpService()
    {
        $this->services['monolog.logger.php'] = $instance = new \Symfony\Bridge\Monolog\Logger('php');
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_RequestService()
    {
        $this->services['monolog.logger.request'] = $instance = new \Symfony\Bridge\Monolog\Logger('request');
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_RouterService()
    {
        $this->services['monolog.logger.router'] = $instance = new \Symfony\Bridge\Monolog\Logger('router');
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_SecurityService()
    {
        $this->services['monolog.logger.security'] = $instance = new \Symfony\Bridge\Monolog\Logger('security');
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_SncRedisService()
    {
        $this->services['monolog.logger.snc_redis'] = $instance = new \Symfony\Bridge\Monolog\Logger('snc_redis');
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_TranslationService()
    {
        $this->services['monolog.logger.translation'] = $instance = new \Symfony\Bridge\Monolog\Logger('translation');
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMoreLikeThisService()
    {
        $this->services['more_like_this'] = $instance = new \AppBundle\Block\MoreLikeThisBlock('more_like_this', $this->get('templating'));
        $instance->setFinder($this->get('fos_elastica.finder.app'));
        return $instance;
    }
    protected function getNewsOfTheDayService()
    {
        $this->services['news_of_the_day'] = $instance = new \AppBundle\Block\NewsOfTheDayBlock('news_of_the_day', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRequestStack($this->get('request_stack'));
        return $instance;
    }
    protected function getOrganizationListService()
    {
        $this->services['organization_list'] = $instance = new \AppBundle\Block\OrganizationListBlock('organization_list', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRequestStack($this->get('request_stack'));
        return $instance;
    }
    protected function getPostListService()
    {
        $this->services['post_list'] = $instance = new \AppBundle\Block\PostListBlock('post_list', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRequestStack($this->get('request_stack'));
        return $instance;
    }
    protected function getPrestaSitemap_DumperDefaultService()
    {
        return $this->services['presta_sitemap.dumper_default'] = new \Presta\SitemapBundle\Service\Dumper($this->get('event_dispatcher'), $this->get('filesystem'), 'sitemap', 50000);
    }
    protected function getPrestaSitemap_GeneratorDefaultService()
    {
        return $this->services['presta_sitemap.generator_default'] = new \Presta\SitemapBundle\Service\Generator($this->get('event_dispatcher'), $this->get('cmf_routing.router'), NULL, 3600, 50000);
    }
    protected function getPropertyAccessorService()
    {
        return $this->services['property_accessor'] = new \Symfony\Component\PropertyAccess\PropertyAccessor(false, false);
    }
    protected function getRecaptcha_RecaptchaService()
    {
        return $this->services['recaptcha\recaptcha'] = new \ReCaptcha\ReCaptcha('6LfciQ0eAAAAAJXgAPo8ZQ8g42FFDLd2G7epas4x');
    }
    protected function getRecentPageService()
    {
        $this->services['recent_page'] = $instance = new \AppBundle\Block\RecentPagesBlock('recent_page', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRecentPageManager($this->get('app.recent_page_manager'));
        return $instance;
    }
    protected function getRenovationBannerService()
    {
        return $this->services['renovation_banner'] = new \AppBundle\Block\RenovationBannerBlock('renovation_banner', $this->get('templating'));
    }
    protected function getRepository_LockService()
    {
        return $this->services['repository.lock'] = $this->get('doctrine')->getRepository('Amg\\Bundle\\AdminBundle\\Entity\\EntityLock');
    }
    protected function getRequestService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('request', 'request');
        }
        throw new RuntimeException('You have requested a synthetic service ("request"). The DIC does not know how to construct this service.');
    }
    protected function getRequestStackService()
    {
        return $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack();
    }
    protected function getResponseListenerService()
    {
        return $this->services['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8');
    }
    protected function getRoadConstructionMapBannerService()
    {
        $this->services['road_construction_map_banner'] = $instance = new \AppBundle\Block\RoadConstructionMapBannerBlock('road_construction_map_banner', $this->get('templating'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getRoadInterchangeBannerService()
    {
        return $this->services['road_interchange_banner'] = new \AppBundle\Block\RoadInterchangeBannerBlock('road_interchange_banner', $this->get('templating'));
    }
    protected function getRouterListenerService()
    {
        return $this->services['router_listener'] = new \Symfony\Component\HttpKernel\EventListener\RouterListener($this->get('cmf_routing.router'), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('request_stack'));
    }
    protected function getRouting_LoaderService()
    {
        $a = $this->get('file_locator');
        $b = $this->get('annotation_reader');
        $c = new \Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader($b);
        $d = new \Symfony\Component\Config\Loader\LoaderResolver();
        $d->addLoader($this->get('app.routing_loader.subordinate'));
        $d->addLoader($this->get('app.routing_loader.posts_list'));
        $d->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($a));
        $d->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($a));
        $d->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($a));
        $d->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($a, $c));
        $d->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($a, $c));
        $d->addLoader($c);
        $d->addLoader($this->get('sonata.admin.route_loader'));
        $d->addLoader($this->get('app.mobile.routing_loader.posts_list'));
        return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($this->get('controller_name_converter'), $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $d);
    }
    protected function getRssBuilder_MailruService()
    {
        return $this->services['rss_builder.mailru'] = new \AppBundle\Rss\MailruRssBuilder($this->get('translator.default'), $this->get('app.entity_url_generator'), $this->get('cmf_routing.router'), $this->get('request_stack'), $this->get('sonata.media.provider.image'));
    }
    protected function getRssBuilder_RssService()
    {
        return $this->services['rss_builder.rss'] = new \AppBundle\Rss\RssBuilder($this->get('translator.default'), $this->get('app.entity_url_generator'), $this->get('cmf_routing.router'), $this->get('request_stack'), $this->get('sonata.media.provider.image'));
    }
    protected function getRssBuilder_WifiRssService()
    {
        $this->services['rss_builder.wifi_rss'] = $instance = new \AppBundle\Rss\WiFiRssBuilder($this->get('translator.default'), $this->get('app.entity_url_generator'), $this->get('cmf_routing.router'), $this->get('request_stack'), $this->get('sonata.media.provider.image'));
        $instance->setTemplating($this->get('templating'));
        return $instance;
    }
    protected function getRssBuilder_WorldIsSmallRssService()
    {
        return $this->services['rss_builder.world_is_small_rss'] = new \AppBundle\Rss\WorldIsSmallRssBuilder($this->get('translator.default'), $this->get('app.entity_url_generator'), $this->get('cmf_routing.router'), $this->get('request_stack'), $this->get('sonata.media.provider.image'));
    }
    protected function getRssBuilder_YaGeoRssService()
    {
        return $this->services['rss_builder.ya_geo_rss'] = new \AppBundle\Rss\YandexGeoRssBuilder($this->get('translator.default'), $this->get('app.entity_url_generator'), $this->get('cmf_routing.router'), $this->get('request_stack'), $this->get('sonata.media.provider.image'));
    }
    protected function getRssBuilder_YaZenRssService()
    {
        $this->services['rss_builder.ya_zen_rss'] = $instance = new \AppBundle\Rss\YandexZenRssBuilder($this->get('translator.default'), $this->get('app.entity_url_generator'), $this->get('cmf_routing.router'), $this->get('request_stack'), $this->get('sonata.media.provider.image'));
        $instance->setTemplating($this->get('templating'));
        return $instance;
    }
    protected function getRssBuilder_YarssService()
    {
        return $this->services['rss_builder.yarss'] = new \AppBundle\Rss\YandexRssBuilder($this->get('translator.default'), $this->get('app.entity_url_generator'), $this->get('cmf_routing.router'), $this->get('request_stack'), $this->get('sonata.media.provider.image'));
    }
    protected function getRubricsListService()
    {
        $this->services['rubrics_list'] = $instance = new \AppBundle\Block\RubricsListBlock('rubrics_list', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRequestStack($this->get('request_stack'));
        return $instance;
    }
    protected function getSecurity_AuthenticationUtilsService()
    {
        return $this->services['security.authentication_utils'] = new \Symfony\Component\Security\Http\Authentication\AuthenticationUtils($this->get('request_stack'));
    }
    protected function getSecurity_AuthorizationCheckerService()
    {
        return $this->services['security.authorization_checker'] = new \Symfony\Component\Security\Core\Authorization\AuthorizationChecker($this->get('security.token_storage'), $this->get('security.authentication.manager'), $this->get('security.access.decision_manager'), false);
    }
    protected function getSecurity_ContextService()
    {
        return $this->services['security.context'] = new \Symfony\Component\Security\Core\SecurityContext($this->get('security.token_storage'), $this->get('security.authorization_checker'));
    }
    protected function getSecurity_Csrf_TokenManagerService()
    {
        return $this->services['security.csrf.token_manager'] = new \Symfony\Component\Security\Csrf\CsrfTokenManager(new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator($this->get('security.secure_random')), new \Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage($this->get('session')));
    }
    protected function getSecurity_EncoderFactoryService()
    {
        return $this->services['security.encoder_factory'] = new \Symfony\Component\Security\Core\Encoder\EncoderFactory(array('FOS\\UserBundle\\Model\\UserInterface' => array('class' => 'Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder', 'arguments' => array(0 => 'sha512', 1 => true, 2 => 5000))));
    }
    protected function getSecurity_FirewallService()
    {
        return $this->services['security.firewall'] = new \Symfony\Component\Security\Http\Firewall(new \Symfony\Bundle\SecurityBundle\Security\FirewallMap($this, array('security.firewall.map.context.dev' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/(_(profiler|wdt)|css|images|js)/'), 'security.firewall.map.context.admin' => new \Symfony\Component\HttpFoundation\RequestMatcher('/admin(.*)'), 'security.firewall.map.context.main' => new \Symfony\Component\HttpFoundation\RequestMatcher('.*'))), $this->get('event_dispatcher'));
    }
    protected function getSecurity_Firewall_Map_Context_AdminService()
    {
        $a = $this->get('security.http_utils');
        $b = $this->get('app.security.authentucation_logger');
        $c = $this->get('fos_user.user_manager');
        $d = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $e = $this->get('security.token_storage');
        $f = $this->get('http_kernel');
        $g = $this->get('security.authentication.manager');
        $h = $this->get('event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $i = new \AppBundle\Security\LogoutSuccessHandler($a, '/');
        $i->setSecurityContext($this->get('security.context'));
        $i->setAuthenticationLogger($b);
        $j = new \Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices(array(0 => $c), 'dfloiuygHJNKL-----------3hfdasfghghasdhfkfffffffffff', 'admin', array('lifetime' => 2678400, 'path' => '/', 'domain' => NULL, 'name' => 'REMEMBERME', 'secure' => false, 'httponly' => true, 'always_remember_me' => false, 'remember_me_parameter' => '_remember_me'), $d);
        $k = new \Symfony\Component\Security\Http\Firewall\LogoutListener($e, $a, $i, array('csrf_parameter' => '_csrf_token', 'intention' => 'logout', 'logout_path' => '/admin/logout'));
        $k->addHandler(new \Symfony\Component\Security\Http\Logout\SessionLogoutHandler());
        $k->addHandler($j);
        $l = new \AppBundle\Security\AuthenticationSuccessHandler($a, array());
        $l->setAuthenticationLogger($b);
        $m = new \AppBundle\Security\AuthenticationFailureHandler($f, $a, array(), $d);
        $m->setAuthenticationLogger($b);
        $n = new \Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener($e, $g, $this->get('security.authentication.session_strategy'), $a, 'admin', new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler($l, array('login_path' => '/admin/login', 'default_target_path' => '/admin/dashboard', 'always_use_default_target_path' => false, 'target_path_parameter' => '_target_path', 'use_referer' => false), 'admin'), new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler($m, array('login_path' => '/admin/login', 'failure_path' => NULL, 'failure_forward' => false, 'failure_path_parameter' => '_failure_path')), array('use_forward' => false, 'check_path' => '/admin/login_check', 'require_previous_session' => true, 'username_parameter' => '_username', 'password_parameter' => '_password', 'csrf_parameter' => '_csrf_token', 'intention' => 'authenticate', 'post_only' => true), $d, $h, NULL);
        $n->setRememberMeServices($j);
        return $this->services['security.firewall.map.context.admin'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => $this->get('security.context_listener.0'), 2 => $k, 3 => $n, 4 => new \Symfony\Component\Security\Http\Firewall\RememberMeListener($e, $j, $g, $d, $h, true), 5 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($e, '67a35ce69de908.18988818', $d, $g), 6 => new \Symfony\Component\Security\Http\Firewall\SwitchUserListener($e, $c, $this->get('security.user_checker'), 'admin', $this->get('security.access.decision_manager'), $d, '_switch_user', 'ROLE_ALLOWED_TO_SWITCH', $h), 7 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($e, $this->get('security.authentication.trust_resolver'), $a, 'admin', new \Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint($f, $a, '/admin/login', false), NULL, NULL, $d, false));
    }
    protected function getSecurity_Firewall_Map_Context_DevService()
    {
        return $this->services['security.firewall.map.context.dev'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(), NULL);
    }
    protected function getSecurity_Firewall_Map_Context_MainService()
    {
        $a = $this->get('security.token_storage');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        return $this->services['security.firewall.map.context.main'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => $this->get('security.context_listener.0'), 2 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '67a35ce69de908.18988818', $b, $this->get('security.authentication.manager')), 3 => new \Symfony\Component\Security\Http\Firewall\SwitchUserListener($a, $this->get('fos_user.user_manager'), $this->get('security.user_checker'), 'main', $this->get('security.access.decision_manager'), $b, '_switch_user', 'ROLE_ALLOWED_TO_SWITCH', $this->get('event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)), 4 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'main', NULL, NULL, NULL, $b, false));
    }
    protected function getSecurity_PasswordEncoderService()
    {
        return $this->services['security.password_encoder'] = new \Symfony\Component\Security\Core\Encoder\UserPasswordEncoder($this->get('security.encoder_factory'));
    }
    protected function getSecurity_Rememberme_ResponseListenerService()
    {
        return $this->services['security.rememberme.response_listener'] = new \Symfony\Component\Security\Http\RememberMe\ResponseListener();
    }
    protected function getSecurity_SecureRandomService()
    {
        return $this->services['security.secure_random'] = new \Symfony\Component\Security\Core\Util\SecureRandom((__DIR__.'/secure_random.seed'), $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSecurity_TokenStorageService()
    {
        return $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage();
    }
    protected function getSecurity_Validator_UserPasswordService()
    {
        return $this->services['security.validator.user_password'] = new \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator($this->get('security.token_storage'), $this->get('security.encoder_factory'));
    }
    protected function getSensioFrameworkExtra_Cache_ListenerService()
    {
        return $this->services['sensio_framework_extra.cache.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener();
    }
    protected function getSensioFrameworkExtra_Controller_ListenerService()
    {
        return $this->services['sensio_framework_extra.controller.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener($this->get('annotation_reader'));
    }
    protected function getSensioFrameworkExtra_Converter_DatetimeService()
    {
        return $this->services['sensio_framework_extra.converter.datetime'] = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter();
    }
    protected function getSensioFrameworkExtra_Converter_Doctrine_OrmService()
    {
        return $this->services['sensio_framework_extra.converter.doctrine.orm'] = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter($this->get('doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSensioFrameworkExtra_Converter_ListenerService()
    {
        return $this->services['sensio_framework_extra.converter.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener($this->get('sensio_framework_extra.converter.manager'), true);
    }
    protected function getSensioFrameworkExtra_Converter_ManagerService()
    {
        $this->services['sensio_framework_extra.converter.manager'] = $instance = new \AppBundle\DoctrineFilter\ParamConverterManager($this->get('app.doctrine.filter.manager'));
        $instance->add($this->get('sensio_framework_extra.converter.doctrine.orm'), 0, 'doctrine.orm');
        $instance->add($this->get('sensio_framework_extra.converter.datetime'), 0, 'datetime');
        $instance->add($this->get('amg_page.param_converter.page'), 0, 'page_converter');
        return $instance;
    }
    protected function getSensioFrameworkExtra_Security_ListenerService()
    {
        return $this->services['sensio_framework_extra.security.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener(NULL, new \Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage(), $this->get('security.authentication.trust_resolver', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.role_hierarchy', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSensioFrameworkExtra_View_GuesserService()
    {
        return $this->services['sensio_framework_extra.view.guesser'] = new \Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser($this->get('kernel'));
    }
    protected function getSensioFrameworkExtra_View_ListenerService()
    {
        return $this->services['sensio_framework_extra.view.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener($this);
    }
    protected function getSentry_ClientService()
    {
        $this->services['sentry.client'] = $instance = new \Sentry\SentryBundle\SentrySymfonyClient('https://e704cea0cdd646c88f5a7cf40c970ac1@sentry.io/1551556', array('logger' => 'php', 'server' => NULL, 'secret_key' => NULL, 'public_key' => NULL, 'project' => 1, 'auto_log_stacks' => false, 'name' => 'stroi-prod.passport.local', 'site' => NULL, 'tags' => array(), 'release' => NULL, 'environment' => 'prod', 'sample_rate' => 1, 'trace' => true, 'timeout' => 2, 'message_limit' => 1024, 'exclude' => array(), 'http_proxy' => NULL, 'extra' => array(), 'curl_method' => 'sync', 'curl_path' => 'curl', 'curl_ipv4' => true, 'ca_cert' => NULL, 'verify_ssl' => true, 'curl_ssl_version' => NULL, 'trust_x_forwarded_proto' => false, 'mb_detect_order' => NULL, 'error_types' => NULL, 'app_path' => ($this->targetDirs[2].'/..'), 'excluded_app_paths' => array(0 => ($this->targetDirs[2].'/../vendor'), 1 => ($this->targetDirs[2].'/../app/cache'), 2 => ($this->targetDirs[2].'/../var/cache')), 'prefixes' => array(0 => ($this->targetDirs[2].'/..')), 'install_default_breadcrumb_handlers' => true, 'install_shutdown_handler' => true, 'processors' => array(0 => 'Raven_Processor_SanitizeDataProcessor'), 'processorOptions' => array()));
        $instance->install();
        return $instance;
    }
    protected function getSentry_ExceptionListenerService()
    {
        return $this->services['sentry.exception_listener'] = new \Sentry\SentryBundle\EventListener\ExceptionListener($this->get('sentry.client'), $this->get('event_dispatcher'), $this->get('request_stack'), array(0 => 'Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException', 1 => 'Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException'), $this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getServiceBannerService()
    {
        return $this->services['service_banner'] = new \AppBundle\Block\ServiceBannerBlock('service_banner', $this->get('templating'));
    }
    protected function getServiceContainerService()
    {
        throw new RuntimeException('You have requested a synthetic service ("service_container"). The DIC does not know how to construct this service.');
    }
    protected function getSessionService()
    {
        return $this->services['session'] = new \Symfony\Component\HttpFoundation\Session\Session($this->get('session.storage.native'), new \Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag(), new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag());
    }
    protected function getSession_Handler_MemcachedService()
    {
        return $this->services['session.handler.memcached'] = new \Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcachedSessionHandler($this->get('session.memcached'), array('prefix' => 'sess', 'expiretime' => 3600));
    }
    protected function getSession_MemcachedService()
    {
        $this->services['session.memcached'] = $instance = new \Memcached('sess');
        $instance->addServer('memcached', 11211);
        return $instance;
    }
    protected function getSession_SaveListenerService()
    {
        return $this->services['session.save_listener'] = new \Symfony\Component\HttpKernel\EventListener\SaveSessionListener();
    }
    protected function getSession_Storage_FilesystemService()
    {
        return $this->services['session.storage.filesystem'] = new \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage((__DIR__.'/sessions'), 'MOCKSESSID', $this->get('session.storage.metadata_bag'));
    }
    protected function getSession_Storage_NativeService()
    {
        return $this->services['session.storage.native'] = new \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage(array('gc_probability' => 1), $this->get('session.handler.memcached'), $this->get('session.storage.metadata_bag'));
    }
    protected function getSession_Storage_PhpBridgeService()
    {
        return $this->services['session.storage.php_bridge'] = new \Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage($this->get('session.handler.memcached'), $this->get('session.storage.metadata_bag'));
    }
    protected function getSessionListenerService()
    {
        return $this->services['session_listener'] = new \Symfony\Bundle\FrameworkBundle\EventListener\SessionListener($this);
    }
    protected function getSetPrivateResponseListenerService()
    {
        return $this->services['set_private_response_listener'] = new \AppBundle\Cache\SetPrivateResponseForLoggedInUserListener($this->get('security.token_storage'));
    }
    protected function getSimpleTemplateService()
    {
        return $this->services['simple_template'] = new \AppBundle\Block\SimpleTemplateBlock('simple_template', $this->get('templating'));
    }
    protected function getSimplethingsEntityaudit_ConfigService()
    {
        $this->services['simplethings_entityaudit.config'] = $instance = new \SimpleThings\EntityAudit\AuditConfiguration();
        $instance->setAuditedEntityClasses(array(0 => 'AppBundle\\Entity\\Post', 1 => 'AppBundle\\Entity\\EmbeddedContent\\TextBlock\\TextBlock', 2 => 'AppBundle\\Entity\\Infographics', 3 => 'AppBundle\\Entity\\Page'));
        $instance->setGlobalIgnoreColumns(array(0 => 'created_at', 1 => 'updated_at', 2 => 'updated_At', 3 => 'address', 4 => 'address_text', 5 => 'address_geo_polygon', 6 => 'address_geo_point'));
        $instance->setTablePrefix('');
        $instance->setTableSuffix('_audit');
        $instance->setRevisionFieldName('rev');
        $instance->setRevisionTypeFieldName('revtype');
        $instance->setRevisionTableName('revisions');
        $instance->setRevisionIdFieldType('integer');
        return $instance;
    }
    protected function getSimplethingsEntityaudit_CreateSchemaListenerService()
    {
        return $this->services['simplethings_entityaudit.create_schema_listener'] = new \SimpleThings\EntityAudit\EventListener\CreateSchemaListener($this->get('simplethings_entityaudit.manager'));
    }
    protected function getSimplethingsEntityaudit_LogRevisionsListenerService()
    {
        return $this->services['simplethings_entityaudit.log_revisions_listener'] = new \SimpleThings\EntityAudit\EventListener\LogRevisionsListener($this->get('simplethings_entityaudit.manager'));
    }
    protected function getSimplethingsEntityaudit_ManagerService()
    {
        return $this->services['simplethings_entityaudit.manager'] = new \AppBundle\Admin\Audit\AuditManager($this->get('simplethings_entityaudit.config'));
    }
    protected function getSimplethingsEntityaudit_ReaderService()
    {
        return $this->services['simplethings_entityaudit.reader'] = $this->get('simplethings_entityaudit.manager')->createAuditReader($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getSimplethingsEntityaudit_Request_CurrentUserListenerService()
    {
        return $this->services['simplethings_entityaudit.request.current_user_listener'] = new \SimpleThings\EntityAudit\Request\CurrentUserListener($this->get('simplethings_entityaudit.config'), $this->get('security.context'));
    }
    protected function getSncRedis_ApiCacheService()
    {
        return $this->services['snc_redis.api_cache'] = new \Predis\Client(new \Predis\Connection\Parameters(array('read_write_timeout' => NULL, 'iterable_multibulk' => false, 'profile' => '2.4', 'prefix' => NULL, 'replication' => false, 'async_connect' => false, 'timeout' => 5, 'persistent' => false, 'exceptions' => true, 'logging' => false, 'alias' => 'api_cache', 'scheme' => 'tcp', 'host' => 'redis', 'port' => 6379, 'database' => 1, 'password' => 'WhicDiotgagHakjidagpheim', 'weight' => NULL)), new \Predis\Configuration\Options(array('read_write_timeout' => NULL, 'iterable_multibulk' => false, 'profile' => new \Predis\Profile\RedisVersion240(), 'prefix' => NULL, 'replication' => false, 'async_connect' => false, 'timeout' => 5, 'persistent' => false, 'exceptions' => true)));
    }
    protected function getSncRedis_DefaultService()
    {
        return $this->services['snc_redis.default'] = new \Predis\Client(new \Predis\Connection\Parameters(array('read_write_timeout' => NULL, 'iterable_multibulk' => false, 'profile' => '2.4', 'prefix' => NULL, 'replication' => false, 'async_connect' => false, 'timeout' => 5, 'persistent' => false, 'exceptions' => true, 'logging' => false, 'alias' => 'default', 'scheme' => 'tcp', 'host' => 'redis', 'port' => 6379, 'database' => 7, 'password' => 'WhicDiotgagHakjidagpheim', 'weight' => NULL)), new \Predis\Configuration\Options(array('read_write_timeout' => NULL, 'iterable_multibulk' => false, 'profile' => new \Predis\Profile\RedisVersion240(), 'prefix' => NULL, 'replication' => false, 'async_connect' => false, 'timeout' => 5, 'persistent' => false, 'exceptions' => true)));
    }
    protected function getSncRedis_LoggerService()
    {
        return $this->services['snc_redis.logger'] = new \Snc\RedisBundle\Logger\RedisLogger($this->get('monolog.logger.snc_redis', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSonata_Admin_Audit_ManagerService()
    {
        $this->services['sonata.admin.audit.manager'] = $instance = new \Sonata\AdminBundle\Model\AuditManager($this);
        $instance->setReader('sonata.admin.audit.orm.reader', array(0 => 'AppBundle\\Entity\\Post', 1 => 'AppBundle\\Entity\\EmbeddedContent\\TextBlock\\TextBlock', 2 => 'AppBundle\\Entity\\Infographics', 3 => 'AppBundle\\Entity\\Page'));
        return $instance;
    }
    protected function getSonata_Admin_Audit_Orm_ReaderService()
    {
        return $this->services['sonata.admin.audit.orm.reader'] = new \AppBundle\Admin\Audit\ORM\AuditReader($this->get('audit_reader'));
    }
    protected function getSonata_Admin_Block_AdminListService()
    {
        return $this->services['sonata.admin.block.admin_list'] = new \Sonata\AdminBundle\Block\AdminListBlockService('sonata.admin.block.admin_list', $this->get('templating'), $this->get('sonata.admin.pool'));
    }
    protected function getSonata_Admin_Block_SearchResultService()
    {
        return $this->services['sonata.admin.block.search_result'] = new \Sonata\AdminBundle\Block\AdminSearchBlockService('sonata.admin.block.search_result', $this->get('templating'), $this->get('sonata.admin.pool'), $this->get('sonata.admin.search.handler'));
    }
    protected function getSonata_Admin_Builder_Filter_FactoryService()
    {
        return $this->services['sonata.admin.builder.filter.factory'] = new \Sonata\AdminBundle\Filter\FilterFactory($this, array('doctrine_orm_boolean' => 'sonata.admin.orm.filter.type.boolean', 'doctrine_orm_callback' => 'sonata.admin.orm.filter.type.callback', 'doctrine_orm_choice' => 'sonata.admin.orm.filter.type.choice', 'doctrine_orm_model' => 'sonata.admin.orm.filter.type.model', 'doctrine_orm_string' => 'sonata.admin.orm.filter.type.string', 'doctrine_orm_number' => 'sonata.admin.orm.filter.type.number', 'doctrine_orm_date' => 'sonata.admin.orm.filter.type.date', 'doctrine_orm_date_range' => 'sonata.admin.orm.filter.type.date_range', 'doctrine_orm_datetime' => 'sonata.admin.orm.filter.type.datetime', 'doctrine_orm_time' => 'sonata.admin.orm.filter.type.time', 'doctrine_orm_datetime_range' => 'sonata.admin.orm.filter.type.datetime_range', 'doctrine_orm_class' => 'sonata.admin.orm.filter.type.class', 'date_range_filter' => 'amg_admin.filter.data_range'));
    }
    protected function getSonata_Admin_Builder_OrmDatagridService()
    {
        return $this->services['sonata.admin.builder.orm_datagrid'] = new \Sonata\DoctrineORMAdminBundle\Builder\DatagridBuilder($this->get('form.factory'), $this->get('sonata.admin.builder.filter.factory'), $this->get('sonata.admin.guesser.orm_datagrid_chain'), true);
    }
    protected function getSonata_Admin_Builder_OrmFormService()
    {
        return $this->services['sonata.admin.builder.orm_form'] = new \Sonata\DoctrineORMAdminBundle\Builder\FormContractor($this->get('form.factory'));
    }
    protected function getSonata_Admin_Builder_OrmListService()
    {
        return $this->services['sonata.admin.builder.orm_list'] = new \Sonata\DoctrineORMAdminBundle\Builder\ListBuilder($this->get('sonata.admin.guesser.orm_list_chain'), array('array' => 'SonataAdminBundle:CRUD:list_array.html.twig', 'boolean' => 'SonataAdminBundle:CRUD:list_boolean.html.twig', 'date' => 'SonataIntlBundle:CRUD:list_date.html.twig', 'time' => 'SonataAdminBundle:CRUD:list_time.html.twig', 'datetime' => 'SonataIntlBundle:CRUD:list_datetime.html.twig', 'text' => 'SonataAdminBundle:CRUD:list_string.html.twig', 'textarea' => 'SonataAdminBundle:CRUD:list_string.html.twig', 'email' => 'SonataAdminBundle:CRUD:list_string.html.twig', 'trans' => 'SonataAdminBundle:CRUD:list_trans.html.twig', 'string' => 'SonataAdminBundle:CRUD:list_string.html.twig', 'smallint' => 'SonataIntlBundle:CRUD:list_decimal.html.twig', 'bigint' => 'SonataIntlBundle:CRUD:list_decimal.html.twig', 'integer' => 'SonataIntlBundle:CRUD:list_decimal.html.twig', 'decimal' => 'SonataIntlBundle:CRUD:list_decimal.html.twig', 'identifier' => 'SonataAdminBundle:CRUD:list_string.html.twig', 'currency' => 'SonataIntlBundle:CRUD:list_currency.html.twig', 'percent' => 'SonataIntlBundle:CRUD:list_percent.html.twig', 'choice' => 'SonataAdminBundle:CRUD:list_choice.html.twig', 'url' => 'SonataAdminBundle:CRUD:list_url.html.twig', 'html' => 'SonataAdminBundle:CRUD:list_html.html.twig'));
    }
    protected function getSonata_Admin_Builder_OrmShowService()
    {
        return $this->services['sonata.admin.builder.orm_show'] = new \Sonata\DoctrineORMAdminBundle\Builder\ShowBuilder($this->get('sonata.admin.guesser.orm_show_chain'), array('array' => 'SonataAdminBundle:CRUD:show_array.html.twig', 'boolean' => 'SonataAdminBundle:CRUD:show_boolean.html.twig', 'date' => 'SonataIntlBundle:CRUD:show_date.html.twig', 'time' => 'SonataAdminBundle:CRUD:show_time.html.twig', 'datetime' => 'SonataIntlBundle:CRUD:show_datetime.html.twig', 'text' => 'SonataAdminBundle:CRUD:base_show_field.html.twig', 'trans' => 'SonataAdminBundle:CRUD:show_trans.html.twig', 'string' => 'SonataAdminBundle:CRUD:base_show_field.html.twig', 'smallint' => 'SonataIntlBundle:CRUD:show_decimal.html.twig', 'bigint' => 'SonataIntlBundle:CRUD:show_decimal.html.twig', 'integer' => 'SonataIntlBundle:CRUD:show_decimal.html.twig', 'decimal' => 'SonataIntlBundle:CRUD:show_decimal.html.twig', 'currency' => 'SonataIntlBundle:CRUD:show_currency.html.twig', 'percent' => 'SonataIntlBundle:CRUD:show_percent.html.twig', 'choice' => 'SonataAdminBundle:CRUD:show_choice.html.twig', 'url' => 'SonataAdminBundle:CRUD:show_url.html.twig', 'html' => 'SonataAdminBundle:CRUD:show_html.html.twig'));
    }
    protected function getSonata_Admin_Controller_AdminService()
    {
        return $this->services['sonata.admin.controller.admin'] = new \Sonata\AdminBundle\Controller\HelperController($this->get('twig'), $this->get('sonata.admin.pool'), $this->get('sonata.admin.helper'), $this->get('validator'));
    }
    protected function getSonata_Admin_DoctrineOrm_Form_Type_ChoiceFieldMaskService()
    {
        return $this->services['sonata.admin.doctrine_orm.form.type.choice_field_mask'] = new \AppBundle\Form\Type\ChoiceFieldMaskType();
    }
    protected function getSonata_Admin_Event_ExtensionService()
    {
        return $this->services['sonata.admin.event.extension'] = new \Sonata\AdminBundle\Event\AdminEventExtension($this->get('event_dispatcher'));
    }
    protected function getSonata_Admin_ExporterService()
    {
        return $this->services['sonata.admin.exporter'] = new \Sonata\AdminBundle\Export\Exporter();
    }
    protected function getSonata_Admin_Form_Extension_FieldService()
    {
        return $this->services['sonata.admin.form.extension.field'] = new \Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension(array('email' => '', 'textarea' => '', 'text' => '', 'choice' => '', 'integer' => '', 'datetime' => 'sonata-medium-date', 'date' => 'sonata-medium-date'));
    }
    protected function getSonata_Admin_Form_Extension_Field_MopaService()
    {
        return $this->services['sonata.admin.form.extension.field.mopa'] = new \Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension();
    }
    protected function getSonata_Admin_Form_Filter_Type_ChoiceService()
    {
        return $this->services['sonata.admin.form.filter.type.choice'] = new \Sonata\AdminBundle\Form\Type\Filter\ChoiceType($this->get('translator.default'));
    }
    protected function getSonata_Admin_Form_Filter_Type_DateService()
    {
        return $this->services['sonata.admin.form.filter.type.date'] = new \Sonata\AdminBundle\Form\Type\Filter\DateType($this->get('translator.default'));
    }
    protected function getSonata_Admin_Form_Filter_Type_DaterangeService()
    {
        return $this->services['sonata.admin.form.filter.type.daterange'] = new \Sonata\AdminBundle\Form\Type\Filter\DateRangeType($this->get('translator.default'));
    }
    protected function getSonata_Admin_Form_Filter_Type_DatetimeService()
    {
        return $this->services['sonata.admin.form.filter.type.datetime'] = new \Sonata\AdminBundle\Form\Type\Filter\DateTimeType($this->get('translator.default'));
    }
    protected function getSonata_Admin_Form_Filter_Type_DatetimeRangeService()
    {
        return $this->services['sonata.admin.form.filter.type.datetime_range'] = new \Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType($this->get('translator.default'));
    }
    protected function getSonata_Admin_Form_Filter_Type_DefaultService()
    {
        return $this->services['sonata.admin.form.filter.type.default'] = new \Sonata\AdminBundle\Form\Type\Filter\DefaultType();
    }
    protected function getSonata_Admin_Form_Filter_Type_NumberService()
    {
        return $this->services['sonata.admin.form.filter.type.number'] = new \Sonata\AdminBundle\Form\Type\Filter\NumberType($this->get('translator.default'));
    }
    protected function getSonata_Admin_Form_Type_AdminService()
    {
        return $this->services['sonata.admin.form.type.admin'] = new \Sonata\AdminBundle\Form\Type\AdminType();
    }
    protected function getSonata_Admin_Form_Type_CollectionService()
    {
        return $this->services['sonata.admin.form.type.collection'] = new \Sonata\AdminBundle\Form\Type\CollectionType();
    }
    protected function getSonata_Admin_Form_Type_ModelAutocompleteService()
    {
        return $this->services['sonata.admin.form.type.model_autocomplete'] = new \Sonata\AdminBundle\Form\Type\ModelAutocompleteType();
    }
    protected function getSonata_Admin_Form_Type_ModelChoiceService()
    {
        return $this->services['sonata.admin.form.type.model_choice'] = new \Sonata\AdminBundle\Form\Type\ModelType();
    }
    protected function getSonata_Admin_Form_Type_ModelHiddenService()
    {
        return $this->services['sonata.admin.form.type.model_hidden'] = new \Sonata\AdminBundle\Form\Type\ModelHiddenType();
    }
    protected function getSonata_Admin_Form_Type_ModelListService()
    {
        return $this->services['sonata.admin.form.type.model_list'] = new \Sonata\AdminBundle\Form\Type\ModelTypeList();
    }
    protected function getSonata_Admin_Form_Type_ModelReferenceService()
    {
        return $this->services['sonata.admin.form.type.model_reference'] = new \Sonata\AdminBundle\Form\Type\ModelReferenceType();
    }
    protected function getSonata_Admin_Guesser_OrmDatagridService()
    {
        return $this->services['sonata.admin.guesser.orm_datagrid'] = new \Sonata\DoctrineORMAdminBundle\Guesser\FilterTypeGuesser();
    }
    protected function getSonata_Admin_Guesser_OrmDatagridChainService()
    {
        return $this->services['sonata.admin.guesser.orm_datagrid_chain'] = new \Sonata\AdminBundle\Guesser\TypeGuesserChain(array(0 => $this->get('sonata.admin.guesser.orm_datagrid')));
    }
    protected function getSonata_Admin_Guesser_OrmListService()
    {
        return $this->services['sonata.admin.guesser.orm_list'] = new \Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser();
    }
    protected function getSonata_Admin_Guesser_OrmListChainService()
    {
        return $this->services['sonata.admin.guesser.orm_list_chain'] = new \Sonata\AdminBundle\Guesser\TypeGuesserChain(array(0 => $this->get('sonata.admin.guesser.orm_list')));
    }
    protected function getSonata_Admin_Guesser_OrmShowService()
    {
        return $this->services['sonata.admin.guesser.orm_show'] = new \Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser();
    }
    protected function getSonata_Admin_Guesser_OrmShowChainService()
    {
        return $this->services['sonata.admin.guesser.orm_show_chain'] = new \Sonata\AdminBundle\Guesser\TypeGuesserChain(array(0 => $this->get('sonata.admin.guesser.orm_show')));
    }
    protected function getSonata_Admin_HelperService()
    {
        return $this->services['sonata.admin.helper'] = new \Sonata\AdminBundle\Admin\AdminHelper($this->get('sonata.admin.pool'));
    }
    protected function getSonata_Admin_Label_Strategy_BcService()
    {
        return $this->services['sonata.admin.label.strategy.bc'] = new \Sonata\AdminBundle\Translator\BCLabelTranslatorStrategy();
    }
    protected function getSonata_Admin_Label_Strategy_FormComponentService()
    {
        return $this->services['sonata.admin.label.strategy.form_component'] = new \Sonata\AdminBundle\Translator\FormLabelTranslatorStrategy();
    }
    protected function getSonata_Admin_Label_Strategy_NativeService()
    {
        return $this->services['sonata.admin.label.strategy.native'] = new \Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy();
    }
    protected function getSonata_Admin_Label_Strategy_NoopService()
    {
        return $this->services['sonata.admin.label.strategy.noop'] = new \Sonata\AdminBundle\Translator\NoopLabelTranslatorStrategy();
    }
    protected function getSonata_Admin_Label_Strategy_UnderscoreService()
    {
        return $this->services['sonata.admin.label.strategy.underscore'] = new \Sonata\AdminBundle\Translator\UnderscoreLabelTranslatorStrategy();
    }
    protected function getSonata_Admin_Manager_OrmService()
    {
        return $this->services['sonata.admin.manager.orm'] = new \Sonata\DoctrineORMAdminBundle\Model\ModelManager($this->get('doctrine'));
    }
    protected function getSonata_Admin_Manipulator_Acl_AdminService()
    {
        return $this->services['sonata.admin.manipulator.acl.admin'] = new \Sonata\AdminBundle\Util\AdminAclManipulator('Sonata\\AdminBundle\\Security\\Acl\\Permission\\MaskBuilder');
    }
    protected function getSonata_Admin_Manipulator_Acl_Object_OrmService()
    {
        return $this->services['sonata.admin.manipulator.acl.object.orm'] = new \Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator();
    }
    protected function getSonata_Admin_Object_Manipulator_Acl_AdminService()
    {
        return $this->services['sonata.admin.object.manipulator.acl.admin'] = new \Sonata\AdminBundle\Util\AdminObjectAclManipulator($this->get('form.factory'), 'Sonata\\AdminBundle\\Security\\Acl\\Permission\\MaskBuilder');
    }
    protected function getSonata_Admin_Orm_Filter_Type_BooleanService()
    {
        return new \Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter();
    }
    protected function getSonata_Admin_Orm_Filter_Type_CallbackService()
    {
        return new \Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter();
    }
    protected function getSonata_Admin_Orm_Filter_Type_ChoiceService()
    {
        return new \Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter();
    }
    protected function getSonata_Admin_Orm_Filter_Type_ClassService()
    {
        return new \Sonata\DoctrineORMAdminBundle\Filter\ClassFilter();
    }
    protected function getSonata_Admin_Orm_Filter_Type_DateService()
    {
        return new \Sonata\DoctrineORMAdminBundle\Filter\DateFilter();
    }
    protected function getSonata_Admin_Orm_Filter_Type_DateRangeService()
    {
        return new \Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter();
    }
    protected function getSonata_Admin_Orm_Filter_Type_DatetimeService()
    {
        return new \Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter();
    }
    protected function getSonata_Admin_Orm_Filter_Type_DatetimeRangeService()
    {
        return new \Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter();
    }
    protected function getSonata_Admin_Orm_Filter_Type_ModelService()
    {
        return new \Sonata\DoctrineORMAdminBundle\Filter\ModelFilter();
    }
    protected function getSonata_Admin_Orm_Filter_Type_NumberService()
    {
        return new \Sonata\DoctrineORMAdminBundle\Filter\NumberFilter();
    }
    protected function getSonata_Admin_Orm_Filter_Type_StringService()
    {
        return new \Sonata\DoctrineORMAdminBundle\Filter\StringFilter();
    }
    protected function getSonata_Admin_Orm_Filter_Type_TimeService()
    {
        return new \Sonata\DoctrineORMAdminBundle\Filter\TimeFilter();
    }
    protected function getSonata_Admin_PoolService()
    {
        $this->services['sonata.admin.pool'] = $instance = new \Sonata\AdminBundle\Admin\Pool($this, 'stroi.mos.ru', '/images/admin/logo_new.png', array('use_icheck' => true, 'html5_validate' => true, 'confirm_exit' => true, 'use_select2' => true, 'pager_links' => NULL, 'form_type' => 'standard', 'dropdown_number_groups_per_colums' => 2, 'title_mode' => 'both', 'javascripts' => array(0 => 'bundles/sonataadmin/vendor/jquery/dist/jquery.min.js', 1 => 'bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js', 2 => 'bundles/sonatacore/vendor/moment/min/moment.min.js', 3 => 'bundles/sonataadmin/vendor/bootstrap/dist/js/bootstrap.min.js', 4 => 'bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js', 5 => 'bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js', 6 => 'bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js', 7 => 'bundles/sonataadmin/jquery/jquery.form.js', 8 => 'bundles/sonataadmin/jquery/jquery.confirmExit.js', 9 => 'bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js', 10 => 'bundles/sonataadmin/vendor/select2/select2.min.js', 11 => 'bundles/sonataadmin/App.js', 12 => 'bundles/sonataadmin/Admin.js'), 'stylesheets' => array(0 => 'bundles/sonataadmin/vendor/bootstrap/dist/css/bootstrap.min.css', 1 => 'bundles/sonataadmin/vendor/AdminLTE/css/font-awesome.min.css', 2 => 'bundles/sonataadmin/vendor/AdminLTE/css/ionicons.min.css', 3 => 'bundles/sonataadmin/vendor/AdminLTE/css/AdminLTE.css', 4 => 'bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css', 5 => 'bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css', 6 => 'bundles/sonataadmin/vendor/select2/select2.css', 7 => 'bundles/sonataadmin/vendor/select2/select2-bootstrap.css', 8 => 'bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css', 9 => 'bundles/sonataadmin/css/styles.css', 10 => 'bundles/sonataadmin/css/layout.css')), array());
        $instance->setTemplates(array('history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig'));
        $instance->setAdminServiceIds(array(0 => 'admin.post', 1 => 'admin.embedded_content.banner', 2 => 'admin.embedded_content.text_block', 3 => 'admin.embedded_content.quote', 4 => 'admin.embedded_content.faq', 5 => 'admin.administrative_unit', 6 => 'admin.administrative_area', 7 => 'admin.city_district', 8 => 'admin.category', 9 => 'admin.gallery', 10 => 'admin.gallery_media', 11 => 'admin.post_attachment', 12 => 'admin.video', 13 => 'admin.infographics', 14 => 'admin.construction', 15 => 'admin.construction_type', 16 => 'admin.menu_nodes', 17 => 'admin.menu', 18 => 'admin.spotlight_item', 19 => 'admin.document', 20 => 'admin.decision_document', 21 => 'admin.law_document', 22 => 'admin.draft_document', 23 => 'admin.document_has_media', 24 => 'admin.outgoing_agency', 25 => 'admin.person', 26 => 'admin.newsletter', 27 => 'admin.newsletter.unsubscribe_reason', 28 => 'admin.emai_subscription', 29 => 'admin.thread', 30 => 'app.admin.appeal', 31 => 'admin.comment', 32 => 'admin.gallery_picks', 33 => 'admin.video_picks', 34 => 'admin.draft', 35 => 'admin.article_rubrics', 36 => 'admin.organization_directory', 37 => 'admin.contact_person', 38 => 'admin.organization', 39 => 'admin.action_log', 40 => 'admin.document_rubric', 41 => 'admin.error_report', 42 => 'admin.author', 43 => 'admin.article_source', 44 => 'admin.user_role', 45 => 'admin.metro_line', 46 => 'admin.metro_station', 47 => 'admin.metro_station_image', 48 => 'admin.metro_timeline_year', 49 => 'admin.road', 50 => 'admin.destruction', 51 => 'admin.redirect', 52 => 'admin.media_category', 53 => 'admin.post_newsletter', 54 => 'admin.gallery_newsletter', 55 => 'admin.video_newsletter', 56 => 'admin.infographoics_newsletter', 57 => 'admin.hightlight_newsletter', 58 => 'admin.announcement', 59 => 'admin.owner', 60 => 'admin.subordinate_socials', 61 => 'admin.construction_filter', 62 => 'admin.construction_parameter', 63 => 'admin.construction_parameter_value', 64 => 'admin.road_parameter_value', 65 => 'admin.questions_and_answers', 66 => 'admin.extra_information', 67 => 'sonata.user.admin.user', 68 => 'sonata.user.admin.group', 69 => 'sonata.media.admin.media', 70 => 'sonata.media.admin.gallery_has_media', 71 => 'amg_page.admin.page', 72 => 'amg_page.admin.block', 73 => 'amg_tag.admin.tag'));
        $instance->setAdminGroups(array('Публикации' => array('label' => 'Публикации', 'label_catalogue' => 'SonataAdminBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.post', 1 => 'admin.draft', 2 => 'admin.article_rubrics', 3 => 'admin.author', 4 => 'admin.article_source', 5 => 'amg_page.admin.page', 6 => 'amg_tag.admin.tag')), 'Встраиваемый контент' => array('label' => 'Встраиваемый контент', 'label_catalogue' => 'SonataAdminBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.embedded_content.banner', 1 => 'admin.embedded_content.text_block', 2 => 'admin.embedded_content.quote', 3 => 'admin.embedded_content.faq')), 'Объекты строительства' => array('label' => 'Объекты строительства', 'label_catalogue' => 'SonataAdminBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.administrative_area', 1 => 'admin.city_district', 2 => 'admin.construction', 3 => 'admin.construction_type', 4 => 'admin.metro_line', 5 => 'admin.metro_station', 6 => 'admin.metro_timeline_year', 7 => 'admin.road', 8 => 'admin.destruction', 9 => 'admin.construction_filter', 10 => 'admin.construction_parameter')), 'Медиа' => array('label' => 'Медиа', 'label_catalogue' => 'SonataAdminBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.gallery', 1 => 'admin.video', 2 => 'admin.infographics')), 'Меню' => array('label' => 'Меню', 'label_catalogue' => 'SonataAdminBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.menu')), 'Главная страница' => array('label' => 'Главная страница', 'label_catalogue' => 'SonataAdminBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.spotlight_item', 1 => 'admin.gallery_picks', 2 => 'admin.video_picks', 3 => 'admin.announcement')), 'Документы' => array('label' => 'Документы', 'label_catalogue' => 'SonataAdminBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.decision_document', 1 => 'admin.law_document', 2 => 'admin.draft_document', 3 => 'admin.outgoing_agency', 4 => 'admin.document_rubric')), 'Справочники' => array('label' => 'Справочники', 'label_catalogue' => 'SonataAdminBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.person', 1 => 'admin.organization_directory', 2 => 'admin.contact_person', 3 => 'admin.organization', 4 => 'admin.owner', 5 => 'admin.subordinate_socials')), 'Рассылки' => array('label' => 'Рассылки', 'label_catalogue' => 'SonataAdminBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.newsletter', 1 => 'admin.newsletter.unsubscribe_reason', 2 => 'admin.emai_subscription', 3 => 'admin.hightlight_newsletter')), 'Комментарии и обр. связь' => array('label' => 'Комментарии и обр. связь', 'label_catalogue' => 'SonataAdminBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.thread', 1 => 'app.admin.appeal', 2 => 'admin.error_report')), 'sonata_user' => array('label' => 'sonata_user', 'label_catalogue' => 'SonataUserBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.action_log', 1 => 'admin.user_role', 2 => 'sonata.user.admin.user', 3 => 'sonata.user.admin.group')), 'Admin' => array('label' => 'Admin', 'label_catalogue' => 'SonataAdminBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.redirect')), 'sonata_media' => array('label' => 'sonata_media', 'label_catalogue' => 'SonataMediaBundle', 'icon' => '<i class="fa fa-folder"></i>', 'roles' => array(), 'items' => array(0 => 'admin.media_category', 1 => 'sonata.media.admin.media'))));
        $instance->setAdminClasses(array('AppBundle\\Entity\\Post' => array(0 => 'admin.post'), 'AppBundle\\Entity\\EmbeddedContent\\Banner' => array(0 => 'admin.embedded_content.banner'), 'AppBundle\\Entity\\EmbeddedContent\\TextBlock\\TextBlock' => array(0 => 'admin.embedded_content.text_block'), 'AppBundle\\Entity\\EmbeddedContent\\Quote' => array(0 => 'admin.embedded_content.quote'), 'AppBundle\\Entity\\EmbeddedContent\\Faq\\FaqBlock' => array(0 => 'admin.embedded_content.faq'), 'AppBundle\\Entity\\AdministrativeUnit' => array(0 => 'admin.administrative_unit'), 'AppBundle\\Entity\\AdministrativeArea' => array(0 => 'admin.administrative_area'), 'AppBundle\\Entity\\CityDistrict' => array(0 => 'admin.city_district'), 'AppBundle\\Entity\\Category' => array(0 => 'admin.category'), 'AppBundle\\Entity\\Gallery' => array(0 => 'admin.gallery'), 'AppBundle\\Entity\\GalleryMedia' => array(0 => 'admin.gallery_media'), 'AppBundle\\Entity\\PostAttachment' => array(0 => 'admin.post_attachment'), 'AppBundle\\Entity\\Video' => array(0 => 'admin.video'), 'AppBundle\\Entity\\Infographics' => array(0 => 'admin.infographics'), 'AppBundle\\Entity\\Construction' => array(0 => 'admin.construction'), 'AppBundle\\Entity\\ConstructionType' => array(0 => 'admin.construction_type'), 'AppBundle\\Entity\\MenuNode' => array(0 => 'admin.menu_nodes'), 'AppBundle\\Entity\\Menu' => array(0 => 'admin.menu'), 'AppBundle\\Entity\\SpotlightItem' => array(0 => 'admin.spotlight_item'), 'AppBundle\\Entity\\Document' => array(0 => 'admin.document'), 'AppBundle\\Entity\\DecisionDocument' => array(0 => 'admin.decision_document'), 'AppBundle\\Entity\\LawDocument' => array(0 => 'admin.law_document'), 'AppBundle\\Entity\\DraftDocument' => array(0 => 'admin.draft_document'), 'AppBundle\\Entity\\DocumentHasMedia' => array(0 => 'admin.document_has_media'), 'AppBundle\\Entity\\OutgoingAgency' => array(0 => 'admin.outgoing_agency'), 'AppBundle\\Entity\\Person' => array(0 => 'admin.person'), 'AppBundle\\Entity\\Newsletter' => array(0 => 'admin.newsletter'), 'AppBundle\\Entity\\UnsubscribeReason' => array(0 => 'admin.newsletter.unsubscribe_reason'), 'AppBundle\\Entity\\EmailSubscription' => array(0 => 'admin.emai_subscription'), 'Application\\FOS\\CommentBundle\\Entity\\Thread' => array(0 => 'admin.thread'), 'AppBundle\\Entity\\Appeal' => array(0 => 'app.admin.appeal'), 'Application\\FOS\\CommentBundle\\Entity\\Comment' => array(0 => 'admin.comment'), 'AppBundle\\Entity\\GalleryPicks' => array(0 => 'admin.gallery_picks'), 'AppBundle\\Entity\\VideoPicks' => array(0 => 'admin.video_picks'), 'AppBundle\\Entity\\Draft' => array(0 => 'admin.draft'), 'AppBundle\\Entity\\Rubric' => array(0 => 'admin.article_rubrics'), 'AppBundle\\Entity\\OrganizationDirectory' => array(0 => 'admin.organization_directory'), 'AppBundle\\Entity\\ContactPerson' => array(0 => 'admin.contact_person'), 'AppBundle\\Entity\\Organization' => array(0 => 'admin.organization'), 'AppBundle\\Entity\\ActionLog' => array(0 => 'admin.action_log'), 'AppBundle\\Entity\\DocumentRubric' => array(0 => 'admin.document_rubric'), 'AppBundle\\Entity\\ErrorReport' => array(0 => 'admin.error_report'), 'AppBundle\\Entity\\Author' => array(0 => 'admin.author'), 'AppBundle\\Entity\\ArticleSource' => array(0 => 'admin.article_source'), 'AppBundle\\Entity\\UserRole' => array(0 => 'admin.user_role'), 'AppBundle\\Entity\\MetroLine' => array(0 => 'admin.metro_line'), 'AppBundle\\Entity\\MetroStation' => array(0 => 'admin.metro_station'), 'AppBundle\\Entity\\MetroStationImage' => array(0 => 'admin.metro_station_image'), 'AppBundle\\Entity\\MetroTimelineYear' => array(0 => 'admin.metro_timeline_year'), 'AppBundle\\Entity\\Road' => array(0 => 'admin.road'), 'AppBundle\\Entity\\Destruction' => array(0 => 'admin.destruction'), 'AppBundle\\Entity\\Redirect' => array(0 => 'admin.redirect'), 'AppBundle\\Entity\\MediaCategory' => array(0 => 'admin.media_category'), 'AppBundle\\Entity\\NewsletterItem\\PostNewsletter' => array(0 => 'admin.post_newsletter'), 'AppBundle\\Entity\\NewsletterItem\\GalleryNewsletter' => array(0 => 'admin.gallery_newsletter'), 'AppBundle\\Entity\\NewsletterItem\\VideoNewsletter' => array(0 => 'admin.video_newsletter'), 'AppBundle\\Entity\\NewsletterItem\\InfographicsNewsletter' => array(0 => 'admin.infographoics_newsletter'), 'AppBundle\\Entity\\NewsletterItem\\HighlightNewsletter' => array(0 => 'admin.hightlight_newsletter'), 'AppBundle\\Entity\\Announcement' => array(0 => 'admin.announcement'), 'AppBundle\\Entity\\Owner' => array(0 => 'admin.owner'), 'AppBundle\\Entity\\SubordinateSocials' => array(0 => 'admin.subordinate_socials'), 'AppBundle\\Entity\\ImportFilter' => array(0 => 'admin.construction_filter'), 'AppBundle\\Entity\\ConstructionParameter' => array(0 => 'admin.construction_parameter'), 'AppBundle\\Entity\\ConstructionParameterValue' => array(0 => 'admin.construction_parameter_value'), 'AppBundle\\Entity\\RoadParameterValue' => array(0 => 'admin.road_parameter_value'), 'AppBundle\\Entity\\EmbeddedContent\\Faq\\QuestionAnswer' => array(0 => 'admin.questions_and_answers'), 'AppBundle\\Entity\\ExtraInformation' => array(0 => 'admin.extra_information'), 'Application\\Sonata\\UserBundle\\Entity\\User' => array(0 => 'sonata.user.admin.user'), 'Application\\Sonata\\UserBundle\\Entity\\Group' => array(0 => 'sonata.user.admin.group'), 'Application\\Sonata\\MediaBundle\\Entity\\Media' => array(0 => 'sonata.media.admin.media'), 'Application\\Sonata\\MediaBundle\\Entity\\GalleryHasMedia' => array(0 => 'sonata.media.admin.gallery_has_media'), 'AppBundle\\Entity\\Page' => array(0 => 'amg_page.admin.page'), 'AppBundle\\Entity\\Block' => array(0 => 'amg_page.admin.block'), 'Amg\\Bundle\\TagBundle\\Entity\\Tag' => array(0 => 'amg_tag.admin.tag')));
        return $instance;
    }
    protected function getSonata_Admin_Route_CacheService()
    {
        return $this->services['sonata.admin.route.cache'] = new \Sonata\AdminBundle\Route\RoutesCache((__DIR__.'/sonata/admin'), false);
    }
    protected function getSonata_Admin_Route_CacheWarmupService()
    {
        return $this->services['sonata.admin.route.cache_warmup'] = new \Sonata\AdminBundle\Route\RoutesCacheWarmUp($this->get('sonata.admin.route.cache'), $this->get('sonata.admin.pool'));
    }
    protected function getSonata_Admin_Route_DefaultGeneratorService()
    {
        return $this->services['sonata.admin.route.default_generator'] = new \Sonata\AdminBundle\Route\DefaultRouteGenerator($this->get('cmf_routing.router'), $this->get('sonata.admin.route.cache'));
    }
    protected function getSonata_Admin_Route_PathInfoService()
    {
        return $this->services['sonata.admin.route.path_info'] = new \Sonata\AdminBundle\Route\PathInfoBuilder($this->get('sonata.admin.audit.manager'));
    }
    protected function getSonata_Admin_Route_QueryStringService()
    {
        return $this->services['sonata.admin.route.query_string'] = new \Sonata\AdminBundle\Route\QueryStringBuilder($this->get('sonata.admin.audit.manager'));
    }
    protected function getSonata_Admin_RouteLoaderService()
    {
        return $this->services['sonata.admin.route_loader'] = new \Sonata\AdminBundle\Route\AdminPoolLoader($this->get('sonata.admin.pool'), array(0 => 'admin.post', 1 => 'admin.embedded_content.banner', 2 => 'admin.embedded_content.text_block', 3 => 'admin.embedded_content.quote', 4 => 'admin.embedded_content.faq', 5 => 'admin.administrative_unit', 6 => 'admin.administrative_area', 7 => 'admin.city_district', 8 => 'admin.category', 9 => 'admin.gallery', 10 => 'admin.gallery_media', 11 => 'admin.post_attachment', 12 => 'admin.video', 13 => 'admin.infographics', 14 => 'admin.construction', 15 => 'admin.construction_type', 16 => 'admin.menu_nodes', 17 => 'admin.menu', 18 => 'admin.spotlight_item', 19 => 'admin.document', 20 => 'admin.decision_document', 21 => 'admin.law_document', 22 => 'admin.draft_document', 23 => 'admin.document_has_media', 24 => 'admin.outgoing_agency', 25 => 'admin.person', 26 => 'admin.newsletter', 27 => 'admin.newsletter.unsubscribe_reason', 28 => 'admin.emai_subscription', 29 => 'admin.thread', 30 => 'app.admin.appeal', 31 => 'admin.comment', 32 => 'admin.gallery_picks', 33 => 'admin.video_picks', 34 => 'admin.draft', 35 => 'admin.article_rubrics', 36 => 'admin.organization_directory', 37 => 'admin.contact_person', 38 => 'admin.organization', 39 => 'admin.action_log', 40 => 'admin.document_rubric', 41 => 'admin.error_report', 42 => 'admin.author', 43 => 'admin.article_source', 44 => 'admin.user_role', 45 => 'admin.metro_line', 46 => 'admin.metro_station', 47 => 'admin.metro_station_image', 48 => 'admin.metro_timeline_year', 49 => 'admin.road', 50 => 'admin.destruction', 51 => 'admin.redirect', 52 => 'admin.media_category', 53 => 'admin.post_newsletter', 54 => 'admin.gallery_newsletter', 55 => 'admin.video_newsletter', 56 => 'admin.infographoics_newsletter', 57 => 'admin.hightlight_newsletter', 58 => 'admin.announcement', 59 => 'admin.owner', 60 => 'admin.subordinate_socials', 61 => 'admin.construction_filter', 62 => 'admin.construction_parameter', 63 => 'admin.construction_parameter_value', 64 => 'admin.road_parameter_value', 65 => 'admin.questions_and_answers', 66 => 'admin.extra_information', 67 => 'sonata.user.admin.user', 68 => 'sonata.user.admin.group', 69 => 'sonata.media.admin.media', 70 => 'sonata.media.admin.gallery_has_media', 71 => 'amg_page.admin.page', 72 => 'amg_page.admin.block', 73 => 'amg_tag.admin.tag'), $this);
    }
    protected function getSonata_Admin_Search_HandlerService()
    {
        return $this->services['sonata.admin.search.handler'] = new \Sonata\AdminBundle\Search\SearchHandler($this->get('sonata.admin.pool'));
    }
    protected function getSonata_Admin_Security_HandlerService()
    {
        return $this->services['sonata.admin.security.handler'] = new \Sonata\AdminBundle\Security\Handler\RoleSecurityHandler($this->get('security.context', ContainerInterface::NULL_ON_INVALID_REFERENCE), array(0 => 'ROLE_SUPER_ADMIN'));
    }
    protected function getSonata_Admin_Twig_ExtensionService()
    {
        return $this->services['sonata.admin.twig.extension'] = new \Sonata\AdminBundle\Twig\Extension\SonataAdminExtension($this->get('sonata.admin.pool'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSonata_Admin_Validator_InlineService()
    {
        return $this->services['sonata.admin.validator.inline'] = new \Sonata\AdminBundle\Validator\InlineValidator($this, $this->get('validator.validator_factory'));
    }
    protected function getSonata_AdminDoctrineOrm_Block_AuditService()
    {
        return $this->services['sonata.admin_doctrine_orm.block.audit'] = new \Sonata\DoctrineORMAdminBundle\Block\AuditBlockService('sonata.admin_doctrine_orm.block.audit', $this->get('templating'), $this->get('simplethings_entityaudit.reader', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSonata_Block_Cache_Handler_DefaultService()
    {
        return $this->services['sonata.block.cache.handler.default'] = new \Sonata\BlockBundle\Cache\HttpCacheHandler();
    }
    protected function getSonata_Block_Cache_Handler_NoopService()
    {
        return $this->services['sonata.block.cache.handler.noop'] = new \Sonata\BlockBundle\Cache\NoopHttpCacheHandler();
    }
    protected function getSonata_Block_ContextManager_DefaultService()
    {
        return $this->services['sonata.block.context_manager.default'] = new \Sonata\BlockBundle\Block\BlockContextManager($this->get('sonata.block.loader.chain'), $this->get('sonata.block.manager'), array('by_type' => array('sonata.admin.block.admin_list' => 'sonata.cache.noop', 'sonata.user.block.menu' => 'sonata.cache.noop', 'sonata.user.block.account' => 'sonata.cache.noop', 'post_list' => 'sonata.cache.noop', 'last_posts' => 'sonata.cache.noop', 'news_of_the_day' => 'sonata.cache.noop', 'animated_banner' => 'sonata.cache.noop', 'homepage_news' => 'sonata.cache.noop', 'more_like_this' => 'sonata.cache.noop', 'gallery_list' => 'sonata.cache.noop', 'video_list' => 'sonata.cache.noop', 'metro_vitdeo_tour' => 'sonata.cache.noop', 'infographics_list' => 'sonata.cache.noop', 'gallery_pick' => 'sonata.cache.noop', 'video_picks' => 'sonata.cache.noop', 'infographics_picks' => 'sonata.cache.noop', 'rubrics_list' => 'sonata.cache.noop', 'simple_template' => 'sonata.cache.noop', 'document_list' => 'sonata.cache.noop', 'construction_list' => 'sonata.cache.noop', 'organization_list' => 'sonata.cache.noop', 'contact_person_list' => 'sonata.cache.noop', 'recent_page' => 'sonata.cache.noop', 'metro_constructed_stations_block' => 'sonata.cache.noop', 'hot_news_block' => 'sonata.cache.noop', 'banner_announcements_dk' => 'sonata.cache.noop', 'service_banner' => 'sonata.cache.noop', 'road_construction_map_banner' => 'sonata.cache.noop', 'road_interchange_banner' => 'sonata.cache.noop', 'destruction_banner' => 'sonata.cache.noop', 'renovation_banner' => 'sonata.cache.noop', 'header_search_filters' => 'sonata.cache.noop', 'announcement' => 'sonata.cache.noop', 'subordinate_homepage_posts' => 'sonata.cache.noop', 'subordinate_smi' => 'sonata.cache.noop', 'subordinate_media' => 'sonata.cache.noop', 'subordinate_publications_list' => 'sonata.cache.noop', 'subordinate_header' => 'sonata.cache.noop', 'subordinate_direction' => 'sonata.cache.noop', 'material_owner_link' => 'sonata.cache.noop', 'mobile_block_post_list' => 'sonata.cache.noop', 'mobile_block_construction_list' => 'sonata.cache.noop', 'email_subscription_form_block' => 'sonata.cache.noop'), 'by_class' => array('Sonata\\BlockBundle\\Model\\Block' => 'sonata.cache.memcached', 'AppBundle\\Entity\\Block' => 'sonata.cache.memcached')), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSonata_Block_Exception_Filter_DebugOnlyService()
    {
        return $this->services['sonata.block.exception.filter.debug_only'] = new \Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter(false);
    }
    protected function getSonata_Block_Exception_Filter_IgnoreBlockExceptionService()
    {
        return $this->services['sonata.block.exception.filter.ignore_block_exception'] = new \Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter('Sonata\\BlockBundle\\Exception\\BlockExceptionInterface');
    }
    protected function getSonata_Block_Exception_Filter_KeepAllService()
    {
        return $this->services['sonata.block.exception.filter.keep_all'] = new \Sonata\BlockBundle\Exception\Filter\KeepAllFilter();
    }
    protected function getSonata_Block_Exception_Filter_KeepNoneService()
    {
        return $this->services['sonata.block.exception.filter.keep_none'] = new \Sonata\BlockBundle\Exception\Filter\KeepNoneFilter();
    }
    protected function getSonata_Block_Exception_Renderer_InlineService()
    {
        return $this->services['sonata.block.exception.renderer.inline'] = new \Sonata\BlockBundle\Exception\Renderer\InlineRenderer($this->get('templating'), 'SonataBlockBundle:Block:block_exception.html.twig');
    }
    protected function getSonata_Block_Exception_Renderer_InlineDebugService()
    {
        return $this->services['sonata.block.exception.renderer.inline_debug'] = new \Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer($this->get('templating'), 'SonataBlockBundle:Block:block_exception_debug.html.twig', false, true);
    }
    protected function getSonata_Block_Exception_Renderer_ThrowService()
    {
        return $this->services['sonata.block.exception.renderer.throw'] = new \Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer();
    }
    protected function getSonata_Block_Exception_Strategy_ManagerService()
    {
        $this->services['sonata.block.exception.strategy.manager'] = $instance = new \Sonata\BlockBundle\Exception\Strategy\StrategyManager($this, array('debug_only' => 'sonata.block.exception.filter.debug_only', 'ignore_block_exception' => 'sonata.block.exception.filter.ignore_block_exception', 'keep_all' => 'sonata.block.exception.filter.keep_all', 'keep_none' => 'sonata.block.exception.filter.keep_none'), array('inline' => 'sonata.block.exception.renderer.inline', 'inline_debug' => 'sonata.block.exception.renderer.inline_debug', 'throw' => 'sonata.block.exception.renderer.throw'), array(), array());
        $instance->setDefaultFilter('debug_only');
        $instance->setDefaultRenderer('throw');
        return $instance;
    }
    protected function getSonata_Block_Form_Type_BlockService()
    {
        return $this->services['sonata.block.form.type.block'] = new \Sonata\BlockBundle\Form\Type\ServiceListType($this->get('sonata.block.manager'));
    }
    protected function getSonata_Block_Form_Type_ContainerTemplateService()
    {
        return $this->services['sonata.block.form.type.container_template'] = new \Sonata\BlockBundle\Form\Type\ContainerTemplateType(array('SonataBlockBundle:Block:block_container.html.twig' => 'SonataBlockBundle default template', 'SonataSeoBundle:Block:block_social_container.html.twig' => 'SonataSeoBundle (to contain social buttons)'));
    }
    protected function getSonata_Block_Loader_ChainService()
    {
        return $this->services['sonata.block.loader.chain'] = new \Sonata\BlockBundle\Block\BlockLoaderChain(array(0 => $this->get('sonata.block.loader.service')));
    }
    protected function getSonata_Block_Loader_ServiceService()
    {
        return $this->services['sonata.block.loader.service'] = new \Sonata\BlockBundle\Block\Loader\ServiceLoader(array(0 => 'sonata.admin.block.admin_list', 1 => 'sonata.user.block.menu', 2 => 'sonata.user.block.account', 3 => 'post_list', 4 => 'last_posts', 5 => 'news_of_the_day', 6 => 'animated_banner', 7 => 'homepage_news', 8 => 'more_like_this', 9 => 'gallery_list', 10 => 'video_list', 11 => 'metro_vitdeo_tour', 12 => 'infographics_list', 13 => 'gallery_pick', 14 => 'video_picks', 15 => 'infographics_picks', 16 => 'rubrics_list', 17 => 'simple_template', 18 => 'document_list', 19 => 'construction_list', 20 => 'organization_list', 21 => 'contact_person_list', 22 => 'recent_page', 23 => 'metro_constructed_stations_block', 24 => 'hot_news_block', 25 => 'banner_announcements_dk', 26 => 'service_banner', 27 => 'road_construction_map_banner', 28 => 'road_interchange_banner', 29 => 'destruction_banner', 30 => 'renovation_banner', 31 => 'header_search_filters', 32 => 'announcement', 33 => 'subordinate_homepage_posts', 34 => 'subordinate_smi', 35 => 'subordinate_media', 36 => 'subordinate_publications_list', 37 => 'subordinate_header', 38 => 'subordinate_direction', 39 => 'material_owner_link', 40 => 'mobile_block_post_list', 41 => 'mobile_block_construction_list', 42 => 'email_subscription_form_block'));
    }
    protected function getSonata_Block_Renderer_DefaultService()
    {
        return $this->services['sonata.block.renderer.default'] = new \Sonata\BlockBundle\Block\BlockRenderer($this->get('sonata.block.manager'), $this->get('sonata.block.exception.strategy.manager'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE), false);
    }
    protected function getSonata_Block_Service_ContainerService()
    {
        return $this->services['sonata.block.service.container'] = new \Sonata\BlockBundle\Block\Service\ContainerBlockService('sonata.block.container', $this->get('templating'));
    }
    protected function getSonata_Block_Service_EmptyService()
    {
        return $this->services['sonata.block.service.empty'] = new \Sonata\BlockBundle\Block\Service\EmptyBlockService('sonata.block.empty', $this->get('templating'));
    }
    protected function getSonata_Block_Service_MenuService()
    {
        return $this->services['sonata.block.service.menu'] = new \Sonata\BlockBundle\Block\Service\MenuBlockService('sonata.block.menu', $this->get('templating'), $this->get('knp_menu.menu_provider'), array());
    }
    protected function getSonata_Block_Service_RssService()
    {
        return $this->services['sonata.block.service.rss'] = new \Sonata\BlockBundle\Block\Service\RssBlockService('sonata.block.rss', $this->get('templating'));
    }
    protected function getSonata_Block_Service_TemplateService()
    {
        return $this->services['sonata.block.service.template'] = new \Sonata\BlockBundle\Block\Service\TemplateBlockService('sonata.block.template', $this->get('templating'));
    }
    protected function getSonata_Block_Service_TextService()
    {
        return $this->services['sonata.block.service.text'] = new \Sonata\BlockBundle\Block\Service\TextBlockService('sonata.block.text', $this->get('templating'));
    }
    protected function getSonata_Block_Templating_HelperService()
    {
        return $this->services['sonata.block.templating.helper'] = new \Sonata\BlockBundle\Templating\Helper\BlockHelper($this->get('sonata.block.manager'), array('by_type' => array('sonata.admin.block.admin_list' => 'sonata.cache.noop', 'sonata.user.block.menu' => 'sonata.cache.noop', 'sonata.user.block.account' => 'sonata.cache.noop', 'post_list' => 'sonata.cache.noop', 'last_posts' => 'sonata.cache.noop', 'news_of_the_day' => 'sonata.cache.noop', 'animated_banner' => 'sonata.cache.noop', 'homepage_news' => 'sonata.cache.noop', 'more_like_this' => 'sonata.cache.noop', 'gallery_list' => 'sonata.cache.noop', 'video_list' => 'sonata.cache.noop', 'metro_vitdeo_tour' => 'sonata.cache.noop', 'infographics_list' => 'sonata.cache.noop', 'gallery_pick' => 'sonata.cache.noop', 'video_picks' => 'sonata.cache.noop', 'infographics_picks' => 'sonata.cache.noop', 'rubrics_list' => 'sonata.cache.noop', 'simple_template' => 'sonata.cache.noop', 'document_list' => 'sonata.cache.noop', 'construction_list' => 'sonata.cache.noop', 'organization_list' => 'sonata.cache.noop', 'contact_person_list' => 'sonata.cache.noop', 'recent_page' => 'sonata.cache.noop', 'metro_constructed_stations_block' => 'sonata.cache.noop', 'hot_news_block' => 'sonata.cache.noop', 'banner_announcements_dk' => 'sonata.cache.noop', 'service_banner' => 'sonata.cache.noop', 'road_construction_map_banner' => 'sonata.cache.noop', 'road_interchange_banner' => 'sonata.cache.noop', 'destruction_banner' => 'sonata.cache.noop', 'renovation_banner' => 'sonata.cache.noop', 'header_search_filters' => 'sonata.cache.noop', 'announcement' => 'sonata.cache.noop', 'subordinate_homepage_posts' => 'sonata.cache.noop', 'subordinate_smi' => 'sonata.cache.noop', 'subordinate_media' => 'sonata.cache.noop', 'subordinate_publications_list' => 'sonata.cache.noop', 'subordinate_header' => 'sonata.cache.noop', 'subordinate_direction' => 'sonata.cache.noop', 'material_owner_link' => 'sonata.cache.noop', 'mobile_block_post_list' => 'sonata.cache.noop', 'mobile_block_construction_list' => 'sonata.cache.noop', 'email_subscription_form_block' => 'sonata.cache.noop'), 'by_class' => array('Sonata\\BlockBundle\\Model\\Block' => 'sonata.cache.memcached', 'AppBundle\\Entity\\Block' => 'sonata.cache.memcached')), $this->get('sonata.block.renderer.default'), $this->get('sonata.block.context_manager.default'), $this->get('event_dispatcher'), $this->get('sonata.cache.manager', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('sonata.block.cache.handler.default', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSonata_Block_Twig_GlobalService()
    {
        return $this->services['sonata.block.twig.global'] = new \Sonata\BlockBundle\Twig\GlobalVariables(array('block_base' => 'SonataBlockBundle:Block:block_base.html.twig', 'block_container' => 'SonataBlockBundle:Block:block_container.html.twig'));
    }
    protected function getSonata_Cache_Invalidation_SimpleService()
    {
        return $this->services['sonata.cache.invalidation.simple'] = new \Sonata\CacheBundle\Invalidation\SimpleCacheInvalidation($this->get('logger'));
    }
    protected function getSonata_Cache_ManagerService()
    {
        $this->services['sonata.cache.manager'] = $instance = new \Sonata\Cache\CacheManager($this->get('sonata.cache.invalidation.simple'), array('sonata.cache.noop' => $this->get('sonata.cache.noop'), 'sonata.cache.memcached' => $this->get('sonata.cache.memcached')));
        $instance->setRecorder($this->get('sonata.cache.recorder'));
        return $instance;
    }
    protected function getSonata_Cache_MemcachedService()
    {
        return $this->services['sonata.cache.memcached'] = new \Sonata\Cache\Adapter\Cache\MemcachedCache('stroi_block', array(0 => array('host' => 'memcached', 'port' => 11211, 'weight' => 0)));
    }
    protected function getSonata_Cache_ModelIdentifierService()
    {
        return $this->services['sonata.cache.model_identifier'] = new \Sonata\Cache\Invalidation\ModelCollectionIdentifiers(array());
    }
    protected function getSonata_Cache_NoopService()
    {
        return $this->services['sonata.cache.noop'] = new \Sonata\Cache\Adapter\Cache\NoopCache();
    }
    protected function getSonata_Cache_Orm_EventSubscriberService()
    {
        return $this->services['sonata.cache.orm.event_subscriber'] = new \Sonata\CacheBundle\Invalidation\DoctrineORMListenerContainerAware($this, 'sonata.cache.orm.event_subscriber.default');
    }
    protected function getSonata_Cache_Orm_EventSubscriber_DefaultService()
    {
        return $this->services['sonata.cache.orm.event_subscriber.default'] = new \Sonata\CacheBundle\Invalidation\DoctrineORMListener($this->get('sonata.cache.model_identifier'), array('sonata.cache.noop' => $this->get('sonata.cache.noop'), 'sonata.cache.memcached' => $this->get('sonata.cache.memcached')));
    }
    protected function getSonata_Cache_RecorderService()
    {
        return $this->services['sonata.cache.recorder'] = new \Sonata\Cache\Invalidation\Recorder($this->get('sonata.cache.model_identifier'));
    }
    protected function getSonata_Core_Date_MomentFormatConverterService()
    {
        return $this->services['sonata.core.date.moment_format_converter'] = new \Sonata\CoreBundle\Date\MomentFormatConverter();
    }
    protected function getSonata_Core_Flashmessage_ManagerService()
    {
        return $this->services['sonata.core.flashmessage.manager'] = new \Sonata\CoreBundle\FlashMessage\FlashManager($this->get('session'), $this->get('translator.default'), array('success' => array('success' => array('domain' => 'SonataCoreBundle'), 'sonata_flash_success' => array('domain' => 'SonataAdminBundle'), 'sonata_user_success' => array('domain' => 'SonataUserBundle'), 'fos_user_success' => array('domain' => 'FOSUserBundle')), 'warning' => array('warning' => array('domain' => 'SonataCoreBundle'), 'sonata_flash_info' => array('domain' => 'SonataAdminBundle')), 'danger' => array('error' => array('domain' => 'SonataCoreBundle'), 'sonata_flash_error' => array('domain' => 'SonataAdminBundle'), 'sonata_user_error' => array('domain' => 'SonataUserBundle'))), array('success' => 'success', 'warning' => 'warning', 'danger' => 'danger'));
    }
    protected function getSonata_Core_Flashmessage_Twig_ExtensionService()
    {
        return $this->services['sonata.core.flashmessage.twig.extension'] = new \Sonata\CoreBundle\Twig\Extension\FlashMessageExtension($this->get('sonata.core.flashmessage.manager'));
    }
    protected function getSonata_Core_Form_Type_ArrayService()
    {
        return $this->services['sonata.core.form.type.array'] = new \Sonata\CoreBundle\Form\Type\ImmutableArrayType();
    }
    protected function getSonata_Core_Form_Type_BooleanService()
    {
        return $this->services['sonata.core.form.type.boolean'] = new \Sonata\CoreBundle\Form\Type\BooleanType();
    }
    protected function getSonata_Core_Form_Type_CollectionService()
    {
        return $this->services['sonata.core.form.type.collection'] = new \Sonata\CoreBundle\Form\Type\CollectionType();
    }
    protected function getSonata_Core_Form_Type_ColorSelectorService()
    {
        return $this->services['sonata.core.form.type.color_selector'] = new \Sonata\CoreBundle\Form\Type\ColorSelectorType();
    }
    protected function getSonata_Core_Form_Type_DatePickerService()
    {
        return $this->services['sonata.core.form.type.date_picker'] = new \Sonata\CoreBundle\Form\Type\DatePickerType($this->get('sonata.core.date.moment_format_converter'));
    }
    protected function getSonata_Core_Form_Type_DateRangeService()
    {
        return $this->services['sonata.core.form.type.date_range'] = new \Sonata\CoreBundle\Form\Type\DateRangeType($this->get('translator.default'));
    }
    protected function getSonata_Core_Form_Type_DateRangePickerService()
    {
        return $this->services['sonata.core.form.type.date_range_picker'] = new \Sonata\CoreBundle\Form\Type\DateRangePickerType($this->get('translator.default'));
    }
    protected function getSonata_Core_Form_Type_DatetimePickerService()
    {
        return $this->services['sonata.core.form.type.datetime_picker'] = new \Sonata\CoreBundle\Form\Type\DateTimePickerType($this->get('sonata.core.date.moment_format_converter'));
    }
    protected function getSonata_Core_Form_Type_DatetimeRangeService()
    {
        return $this->services['sonata.core.form.type.datetime_range'] = new \Sonata\CoreBundle\Form\Type\DateTimeRangeType($this->get('translator.default'));
    }
    protected function getSonata_Core_Form_Type_DatetimeRangePickerService()
    {
        return $this->services['sonata.core.form.type.datetime_range_picker'] = new \Sonata\CoreBundle\Form\Type\DateTimeRangePickerType($this->get('translator.default'));
    }
    protected function getSonata_Core_Form_Type_EqualService()
    {
        return $this->services['sonata.core.form.type.equal'] = new \Sonata\CoreBundle\Form\Type\EqualType($this->get('translator.default'));
    }
    protected function getSonata_Core_Form_Type_TranslatableChoiceService()
    {
        return $this->services['sonata.core.form.type.translatable_choice'] = new \Sonata\CoreBundle\Form\Type\TranslatableChoiceType($this->get('translator.default'));
    }
    protected function getSonata_Core_Model_Adapter_ChainService()
    {
        $this->services['sonata.core.model.adapter.chain'] = $instance = new \Sonata\CoreBundle\Model\Adapter\AdapterChain();
        $instance->addAdapter(new \Sonata\CoreBundle\Model\Adapter\DoctrineORMAdapter($this->get('doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        return $instance;
    }
    protected function getSonata_Core_Slugify_CocurService()
    {
        return $this->services['sonata.core.slugify.cocur'] = new \Cocur\Slugify\Slugify();
    }
    protected function getSonata_Core_Slugify_NativeService()
    {
        return $this->services['sonata.core.slugify.native'] = new \Sonata\CoreBundle\Component\NativeSlugify();
    }
    protected function getSonata_Core_Twig_Extension_TextService()
    {
        return $this->services['sonata.core.twig.extension.text'] = new \Twig_Extensions_Extension_Text();
    }
    protected function getSonata_Core_Twig_Extension_WrappingService()
    {
        return $this->services['sonata.core.twig.extension.wrapping'] = new \Sonata\CoreBundle\Twig\Extension\FormTypeExtension('standard');
    }
    protected function getSonata_Core_Twig_StatusExtensionService()
    {
        $this->services['sonata.core.twig.status_extension'] = $instance = new \Sonata\CoreBundle\Twig\Extension\StatusExtension();
        $instance->addStatusService($this->get('admin.status.comment_renderer'));
        $instance->addStatusService($this->get('sonata.core.flashmessage.manager'));
        return $instance;
    }
    protected function getSonata_Core_Twig_TemplateExtensionService()
    {
        return $this->services['sonata.core.twig.template_extension'] = new \Sonata\CoreBundle\Twig\Extension\TemplateExtension(false, $this->get('translator.default'), $this->get('sonata.core.model.adapter.chain'));
    }
    protected function getSonata_Core_Validator_InlineService()
    {
        return $this->services['sonata.core.validator.inline'] = new \Sonata\CoreBundle\Validator\InlineValidator($this, $this->get('validator.validator_factory'));
    }
    protected function getSonata_EasyExtends_Doctrine_MapperService()
    {
        $this->services['sonata.easy_extends.doctrine.mapper'] = $instance = new \Sonata\EasyExtendsBundle\Mapper\DoctrineORMMapper($this->get('doctrine'), array());
        $instance->addAssociation('Application\\Sonata\\UserBundle\\Entity\\User', 'mapManyToMany', array(0 => array('fieldName' => 'groups', 'targetEntity' => 'Application\\Sonata\\UserBundle\\Entity\\Group', 'cascade' => array(), 'joinTable' => array('name' => 'fos_user_user_group', 'joinColumns' => array(0 => array('name' => 'user_id', 'referencedColumnName' => 'id', 'onDelete' => 'CASCADE')), 'inverseJoinColumns' => array(0 => array('name' => 'group_id', 'referencedColumnName' => 'id', 'onDelete' => 'CASCADE'))))));
        $instance->addAssociation('Application\\Sonata\\MediaBundle\\Entity\\Media', 'mapOneToMany', array(0 => array('fieldName' => 'galleryHasMedias', 'targetEntity' => 'Application\\Sonata\\MediaBundle\\Entity\\GalleryHasMedia', 'cascade' => array(0 => 'persist'), 'mappedBy' => 'media', 'orphanRemoval' => false)));
        $instance->addAssociation('Application\\Sonata\\MediaBundle\\Entity\\GalleryHasMedia', 'mapManyToOne', array(0 => array('fieldName' => 'gallery', 'targetEntity' => 'Application\\Sonata\\MediaBundle\\Entity\\Gallery', 'cascade' => array(0 => 'persist'), 'mappedBy' => NULL, 'inversedBy' => 'galleryHasMedias', 'joinColumns' => array(0 => array('name' => 'gallery_id', 'referencedColumnName' => 'id')), 'orphanRemoval' => false), 1 => array('fieldName' => 'media', 'targetEntity' => 'Application\\Sonata\\MediaBundle\\Entity\\Media', 'cascade' => array(0 => 'persist'), 'mappedBy' => NULL, 'inversedBy' => 'galleryHasMedias', 'joinColumns' => array(0 => array('name' => 'media_id', 'referencedColumnName' => 'id')), 'orphanRemoval' => false)));
        $instance->addAssociation('Application\\Sonata\\MediaBundle\\Entity\\Gallery', 'mapOneToMany', array(0 => array('fieldName' => 'galleryHasMedias', 'targetEntity' => 'Application\\Sonata\\MediaBundle\\Entity\\GalleryHasMedia', 'cascade' => array(0 => 'persist'), 'mappedBy' => 'gallery', 'orphanRemoval' => true, 'orderBy' => array('position' => 'ASC'))));
        return $instance;
    }
    protected function getSonata_EasyExtends_Generator_BundleService()
    {
        return $this->services['sonata.easy_extends.generator.bundle'] = new \Sonata\EasyExtendsBundle\Generator\BundleGenerator();
    }
    protected function getSonata_EasyExtends_Generator_OdmService()
    {
        return $this->services['sonata.easy_extends.generator.odm'] = new \Sonata\EasyExtendsBundle\Generator\OdmGenerator();
    }
    protected function getSonata_EasyExtends_Generator_OrmService()
    {
        return $this->services['sonata.easy_extends.generator.orm'] = new \Sonata\EasyExtendsBundle\Generator\OrmGenerator();
    }
    protected function getSonata_EasyExtends_Generator_PhpcrService()
    {
        return $this->services['sonata.easy_extends.generator.phpcr'] = new \Sonata\EasyExtendsBundle\Generator\PHPCRGenerator();
    }
    protected function getSonata_EasyExtends_Generator_SerializerService()
    {
        return $this->services['sonata.easy_extends.generator.serializer'] = new \Sonata\EasyExtendsBundle\Generator\SerializerGenerator();
    }
    protected function getSonata_Formatter_Block_FormatterService()
    {
        return $this->services['sonata.formatter.block.formatter'] = new \Sonata\FormatterBundle\Block\FormatterBlockService('sonata.block.empty', $this->get('templating'));
    }
    protected function getSonata_Formatter_Ckeditor_ExtensionService()
    {
        return $this->services['sonata.formatter.ckeditor.extension'] = new \Sonata\FormatterBundle\Admin\CkeditorAdminExtension();
    }
    protected function getSonata_Formatter_Form_Type_SelectorService()
    {
        return $this->services['sonata.formatter.form.type.selector'] = new \Sonata\FormatterBundle\Form\Type\FormatterType($this->get('sonata.formatter.pool'), $this->get('translator.default'), $this->get('ivory_ck_editor.config_manager'));
    }
    protected function getSonata_Formatter_PoolService()
    {
        return $this->services['sonata.formatter.pool'] = new \Sonata\FormatterBundle\Formatter\Pool($this->get('logger'));
    }
    protected function getSonata_Formatter_Text_MarkdownService()
    {
        return $this->services['sonata.formatter.text.markdown'] = new \Sonata\FormatterBundle\Formatter\MarkdownFormatter($this->get('markdown.parser'));
    }
    protected function getSonata_Formatter_Text_RawService()
    {
        return $this->services['sonata.formatter.text.raw'] = new \Sonata\FormatterBundle\Formatter\RawFormatter();
    }
    protected function getSonata_Formatter_Text_TextService()
    {
        return $this->services['sonata.formatter.text.text'] = new \Sonata\FormatterBundle\Formatter\TextFormatter();
    }
    protected function getSonata_Formatter_Text_TwigengineService()
    {
        return $this->services['sonata.formatter.text.twigengine'] = new \Sonata\FormatterBundle\Formatter\TwigFormatter($this->get('twig'));
    }
    protected function getSonata_Formatter_Twig_ControlFlowService()
    {
        return $this->services['sonata.formatter.twig.control_flow'] = new \Sonata\FormatterBundle\Extension\ControlFlowExtension();
    }
    protected function getSonata_Formatter_Twig_GistService()
    {
        return $this->services['sonata.formatter.twig.gist'] = new \Sonata\FormatterBundle\Extension\GistExtension();
    }
    protected function getSonata_Formatter_Validator_FormatterService()
    {
        return $this->services['sonata.formatter.validator.formatter'] = new \Sonata\FormatterBundle\Validator\Constraints\FormatterValidator($this->get('sonata.formatter.pool'));
    }
    protected function getSonata_Intl_LocaleDetector_RequestService()
    {
        return $this->services['sonata.intl.locale_detector.request'] = new \Sonata\IntlBundle\Locale\RequestDetector($this, 'ru');
    }
    protected function getSonata_Intl_Templating_Helper_DatetimeService()
    {
        return $this->services['sonata.intl.templating.helper.datetime'] = new \Sonata\IntlBundle\Templating\Helper\DateTimeHelper($this->get('sonata.intl.timezone_detector.chain'), 'UTF-8', $this->get('sonata.intl.locale_detector.request'));
    }
    protected function getSonata_Intl_Templating_Helper_LocaleService()
    {
        return $this->services['sonata.intl.templating.helper.locale'] = new \Sonata\IntlBundle\Templating\Helper\LocaleHelper('UTF-8', $this->get('sonata.intl.locale_detector.request'));
    }
    protected function getSonata_Intl_Templating_Helper_NumberService()
    {
        return $this->services['sonata.intl.templating.helper.number'] = new \Sonata\IntlBundle\Templating\Helper\NumberHelper('UTF-8', $this->get('sonata.intl.locale_detector.request'));
    }
    protected function getSonata_Intl_TimezoneDetector_ChainService()
    {
        $this->services['sonata.intl.timezone_detector.chain'] = $instance = new \Sonata\IntlBundle\Timezone\ChainTimezoneDetector('Europe/Moscow');
        $instance->addDetector($this->get('sonata.intl.timezone_detector.user'));
        $instance->addDetector($this->get('sonata.intl.timezone_detector.locale'));
        return $instance;
    }
    protected function getSonata_Intl_TimezoneDetector_LocaleService()
    {
        return $this->services['sonata.intl.timezone_detector.locale'] = new \Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector($this->get('sonata.intl.locale_detector.request'), array('ru' => 'Europe/Moscow'));
    }
    protected function getSonata_Intl_TimezoneDetector_UserService()
    {
        return $this->services['sonata.intl.timezone_detector.user'] = new \Sonata\IntlBundle\Timezone\UserBasedTimezoneDetector($this->get('security.context'), '');
    }
    protected function getSonata_Media_Adapter_Filesystem_LocalService()
    {
        return $this->services['sonata.media.adapter.filesystem.local'] = new \Sonata\MediaBundle\Filesystem\Local(($this->targetDirs[2].'/../web/uploads/media'), true);
    }
    protected function getSonata_Media_Adapter_Image_GdService()
    {
        return $this->services['sonata.media.adapter.image.gd'] = new \Application\Sonata\MediaBundle\Imagine\ImagineImagickDecorator();
    }
    protected function getSonata_Media_Adapter_Image_GmagickService()
    {
        return $this->services['sonata.media.adapter.image.gmagick'] = new \Imagine\Gmagick\Imagine();
    }
    protected function getSonata_Media_Adapter_Image_ImagickService()
    {
        return $this->services['sonata.media.adapter.image.imagick'] = new \Application\Sonata\MediaBundle\Imagine\ImagineImagickDecorator();
    }
    protected function getSonata_Media_Adapter_Service_S3Service()
    {
        return $this->services['sonata.media.adapter.service.s3'] = new \AmazonS3(array());
    }
    protected function getSonata_Media_Admin_GalleryService()
    {
        return $this->services['sonata.media.admin.gallery'] = new \SplBool();
    }
    protected function getSonata_Media_Admin_GalleryHasMediaService()
    {
        $instance = new \Sonata\MediaBundle\Admin\GalleryHasMediaAdmin('sonata.media.admin.gallery_has_media', 'Application\\Sonata\\MediaBundle\\Entity\\GalleryHasMedia', 'SonataAdminBundle:CRUD');
        $instance->setTranslationDomain('SonataMediaBundle');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('gallery_has_media');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getSonata_Media_Admin_MediaService()
    {
        $instance = new \Application\Sonata\MediaBundle\Admin\MediaAdmin('sonata.media.admin.media', 'Application\\Sonata\\MediaBundle\\Entity\\Media', 'ApplicationSonataMediaBundle:MediaAdmin', $this->get('sonata.media.pool'));
        $instance->setModelManager($this->get('sonata.media.admin.media.manager'));
        $instance->setTranslationDomain('SonataMediaBundle');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('media');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataMediaBundle:MediaAdmin:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'SonataMediaBundle:MediaAdmin:edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => 'SonataMediaBundle:MediaAdmin:inner_row_media.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_flat_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.media_list'));
        $instance->addExtension($this->get('sonata.formatter.ckeditor.extension'));
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        $instance->setTemplate('short_object_description', 'ApplicationSonataMediaBundle::short_object_description.html.twig');
        return $instance;
    }
    protected function getSonata_Media_Admin_Media_ManagerService()
    {
        return $this->services['sonata.media.admin.media.manager'] = new \Sonata\MediaBundle\Admin\Manager\DoctrineORMManager($this->get('doctrine'), $this->get('sonata.media.manager.media'));
    }
    protected function getSonata_Media_Api_Form_Type_Doctrine_MediaService()
    {
        return $this->services['sonata.media.api.form.type.doctrine.media'] = new \Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType($this->get('jms_serializer.metadata_factory'), $this->get('doctrine'), 'sonata_media_api_form_doctrine_media', 'Application\\Sonata\\MediaBundle\\Entity\\Media', 'sonata_api_write');
    }
    protected function getSonata_Media_Api_Form_Type_GalleryService()
    {
        return $this->services['sonata.media.api.form.type.gallery'] = new \Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType($this->get('jms_serializer.metadata_factory'), $this->get('doctrine'), 'sonata_media_api_form_gallery', 'Application\\Sonata\\MediaBundle\\Entity\\Gallery', 'sonata_api_write');
    }
    protected function getSonata_Media_Api_Form_Type_GalleryHasMediaService()
    {
        return $this->services['sonata.media.api.form.type.gallery_has_media'] = new \Sonata\CoreBundle\Form\Type\DoctrineORMSerializationType($this->get('jms_serializer.metadata_factory'), $this->get('doctrine'), 'sonata_media_api_form_gallery_has_media', 'Application\\Sonata\\MediaBundle\\Entity\\GalleryHasMedia', 'sonata_api_write');
    }
    protected function getSonata_Media_Api_Form_Type_MediaService()
    {
        return $this->services['sonata.media.api.form.type.media'] = new \Sonata\MediaBundle\Form\Type\ApiMediaType($this->get('sonata.media.pool'), 'Application\\Sonata\\MediaBundle\\Entity\\Media');
    }
    protected function getSonata_Media_Block_BreadcrumbIndexService()
    {
        return $this->services['sonata.media.block.breadcrumb_index'] = new \Sonata\MediaBundle\Block\Breadcrumb\GalleryIndexBreadcrumbBlockService('gallery_index', 'sonata.media.block.breadcrumb_view', $this->get('templating'), $this->get('knp_menu.menu_provider'), $this->get('knp_menu.factory'));
    }
    protected function getSonata_Media_Block_BreadcrumbViewService()
    {
        return $this->services['sonata.media.block.breadcrumb_view'] = new \Sonata\MediaBundle\Block\Breadcrumb\GalleryViewBreadcrumbBlockService('gallery_view', 'sonata.media.block.breadcrumb_view', $this->get('templating'), $this->get('knp_menu.menu_provider'), $this->get('knp_menu.factory'));
    }
    protected function getSonata_Media_Block_BreadcrumbViewMediaService()
    {
        return $this->services['sonata.media.block.breadcrumb_view_media'] = new \Sonata\MediaBundle\Block\Breadcrumb\MediaViewBreadcrumbBlockService('media_view', 'sonata.media.block.breadcrumb_view_media', $this->get('templating'), $this->get('knp_menu.menu_provider'), $this->get('knp_menu.factory'));
    }
    protected function getSonata_Media_Block_FeatureMediaService()
    {
        return $this->services['sonata.media.block.feature_media'] = new \Sonata\MediaBundle\Block\FeatureMediaBlockService('sonata.media.block.feature_media', $this->get('templating'), $this, $this->get('sonata.media.manager.media'));
    }
    protected function getSonata_Media_Block_GalleryService()
    {
        return $this->services['sonata.media.block.gallery'] = new \Sonata\MediaBundle\Block\GalleryBlockService('sonata.media.block.gallery', $this->get('templating'), $this, $this->get('sonata.media.manager.gallery'));
    }
    protected function getSonata_Media_Block_MediaService()
    {
        return $this->services['sonata.media.block.media'] = new \Sonata\MediaBundle\Block\MediaBlockService('sonata.media.block.media', $this->get('templating'), $this, $this->get('sonata.media.manager.media'));
    }
    protected function getSonata_Media_Buzz_BrowserService()
    {
        return $this->services['sonata.media.buzz.browser'] = new \Buzz\Browser($this->get('sonata.media.buzz.connector.curl'));
    }
    protected function getSonata_Media_Buzz_Connector_CurlService()
    {
        $this->services['sonata.media.buzz.connector.curl'] = $instance = new \Buzz\Client\Curl();
        $instance->setIgnoreErrors(true);
        $instance->setMaxRedirects(5);
        $instance->setTimeout(5);
        $instance->setVerifyPeer(true);
        $instance->setProxy(NULL);
        return $instance;
    }
    protected function getSonata_Media_Buzz_Connector_FileGetContentsService()
    {
        $this->services['sonata.media.buzz.connector.file_get_contents'] = $instance = new \Buzz\Client\FileGetContents();
        $instance->setIgnoreErrors(true);
        $instance->setMaxRedirects(5);
        $instance->setTimeout(5);
        $instance->setVerifyPeer(true);
        $instance->setProxy(NULL);
        return $instance;
    }
    protected function getSonata_Media_Cdn_ServerService()
    {
        return $this->services['sonata.media.cdn.server'] = new \Sonata\MediaBundle\CDN\Server('/uploads/media');
    }
    protected function getSonata_Media_Doctrine_EventSubscriberService()
    {
        return $this->services['sonata.media.doctrine.event_subscriber'] = new \Sonata\MediaBundle\Listener\ORM\MediaEventSubscriber($this);
    }
    protected function getSonata_Media_EditableFormat_ManagerService()
    {
        return $this->services['sonata.media.editable_format.manager'] = new \Application\Sonata\MediaBundle\EditableFormat\EditableFormatManager($this->targetDirs[2], 'https://stroi.mos.ru');
    }
    protected function getSonata_Media_Filesystem_LocalService()
    {
        return $this->services['sonata.media.filesystem.local'] = new \Import\Gaufrette\NoRegisterFilesystem($this->get('sonata.media.adapter.filesystem.local'));
    }
    protected function getSonata_Media_Form_Type_MediaService()
    {
        return $this->services['sonata.media.form.type.media'] = new \Sonata\MediaBundle\Form\Type\MediaType($this->get('sonata.media.pool'), 'Application\\Sonata\\MediaBundle\\Entity\\Media');
    }
    protected function getSonata_Media_Formatter_TwigService()
    {
        return $this->services['sonata.media.formatter.twig'] = new \Sonata\MediaBundle\Twig\Extension\FormatterMediaExtension($this->get('sonata.media.twig.extension'));
    }
    protected function getSonata_Media_Generator_DefaultService()
    {
        return $this->services['sonata.media.generator.default'] = new \Sonata\MediaBundle\Generator\DefaultGenerator();
    }
    protected function getSonata_Media_Manager_GalleryService()
    {
        return $this->services['sonata.media.manager.gallery'] = new \Sonata\MediaBundle\Entity\GalleryManager('Application\\Sonata\\MediaBundle\\Entity\\Gallery', $this->get('doctrine'));
    }
    protected function getSonata_Media_Manager_MediaService()
    {
        return $this->services['sonata.media.manager.media'] = new \Sonata\MediaBundle\Entity\MediaManager('Application\\Sonata\\MediaBundle\\Entity\\Media', $this->get('doctrine'));
    }
    protected function getSonata_Media_Metadata_AmazonService()
    {
        return $this->services['sonata.media.metadata.amazon'] = new \Sonata\MediaBundle\Metadata\AmazonMetadataBuilder();
    }
    protected function getSonata_Media_Metadata_NoopService()
    {
        return $this->services['sonata.media.metadata.noop'] = new \Sonata\MediaBundle\Metadata\NoopMetadataBuilder();
    }
    protected function getSonata_Media_Metadata_ProxyService()
    {
        return $this->services['sonata.media.metadata.proxy'] = new \Sonata\MediaBundle\Metadata\ProxyMetadataBuilder($this, array());
    }
    protected function getSonata_Media_PoolService()
    {
        $this->services['sonata.media.pool'] = $instance = new \Sonata\MediaBundle\Provider\Pool('main_image');
        $instance->addContext('main_image', array(0 => 'sonata.media.provider.image', 1 => 'sonata.media.provider.external_image'), array('main_image_thumb' => array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb210' => array('width' => 210, 'height' => 150, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb212' => array('width' => 212, 'height' => 128, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb271x125' => array('width' => 271, 'height' => 125, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb295x345' => array('width' => 295, 'height' => 345, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb300' => array('width' => 300, 'height' => 200, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb300x230' => array('width' => 300, 'height' => 230, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb300x420' => array('width' => 300, 'height' => 420, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb306' => array('width' => 306, 'height' => 389, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb323' => array('width' => 323, 'height' => 212, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb336' => array('width' => 336, 'height' => 280, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb385' => array('width' => 385, 'height' => 240, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb451' => array('width' => 451, 'height' => 273, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb465x548' => array('width' => 465, 'height' => 548, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb500' => array('width' => 500, 'height' => NULL, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb589' => array('width' => 589, 'height' => 454, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb596' => array('width' => 596, 'height' => 368, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb630x338' => array('width' => 630, 'height' => 338, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb680x495' => array('width' => 680, 'height' => 495, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb300x90' => array('width' => 300, 'height' => 90, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb340x340' => array('width' => 340, 'height' => 340, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb1440' => array('width' => 1440, 'height' => 454, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb715x250' => array('width' => 715, 'height' => 250, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb960' => array('width' => 960, 'height' => NULL, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb960x470' => array('width' => 960, 'height' => 470, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_thumb469' => array('width' => 469, 'height' => 275, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_full' => array('width' => 1900, 'height' => NULL, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_page_header_700' => array('width' => 700, 'height' => 400, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'main_image_newsletter_highlight' => array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true), 'main_image_newsletter_post_l' => array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true), 'main_image_newsletter_post' => array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true), 'main_image_newsletter_media' => array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true), 'main_image_newsletter_video_play' => array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true)), array('strategy' => 'sonata.media.security.superadmin_strategy', 'mode' => 'http'));
        $instance->addContext('infographics', array(0 => 'sonata.media.provider.image'), array('infographics_thumb' => array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'infographics_thumb200' => array('width' => 200, 'quality' => 95, 'height' => false, 'format' => 'jpg', 'constraint' => true), 'infographics_full' => array('width' => 960, 'quality' => 95, 'height' => false, 'format' => 'jpg', 'constraint' => true)), array('strategy' => 'sonata.media.security.superadmin_strategy', 'mode' => 'http'));
        $instance->addContext('file', array(0 => 'sonata.media.provider.file', 1 => 'sonata.media.provider.image'), array('file_thumb' => array('width' => 64, 'quality' => 95, 'height' => false, 'format' => 'jpg', 'constraint' => true)), array('strategy' => 'sonata.media.security.superadmin_strategy', 'mode' => 'http'));
        $instance->addContext('initiative', array(0 => 'sonata.media.provider.file'), array('initiative_thumb' => array('width' => 64, 'quality' => 95, 'height' => false, 'format' => 'jpg', 'constraint' => true)), array('strategy' => 'sonata.media.security.superadmin_strategy', 'mode' => 'http'));
        $instance->addContext('video', array(0 => 'sonata.media.provider.youtube', 1 => 'sonata.media.provider.video'), array('video_thumb' => array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'video_full' => array('width' => 854, 'quality' => 95, 'height' => false, 'format' => 'jpg', 'constraint' => true)), array('strategy' => 'sonata.media.security.superadmin_strategy', 'mode' => 'http'));
        $instance->addContext('gallery_media', array(0 => 'sonata.media.provider.image', 1 => 'sonata.media.provider.external_image'), array('gallery_media_thumb' => array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb210' => array('width' => 210, 'height' => 150, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb212' => array('width' => 212, 'height' => 128, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb271x125' => array('width' => 271, 'height' => 125, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb295x345' => array('width' => 295, 'height' => 345, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb300' => array('width' => 300, 'height' => 200, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb300x420' => array('width' => 300, 'height' => 420, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb323' => array('width' => 323, 'height' => 212, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb336' => array('width' => 336, 'height' => 280, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb340x340' => array('width' => 340, 'height' => 340, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb385' => array('width' => 385, 'height' => 240, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb465x548' => array('width' => 465, 'height' => 548, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb589' => array('width' => 589, 'height' => 454, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb780' => array('width' => 780, 'height' => NULL, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb1440' => array('width' => 1440, 'height' => 454, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb715x250' => array('width' => 715, 'height' => 250, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb960x470' => array('width' => 960, 'height' => 470, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb680x495' => array('width' => 680, 'height' => 495, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_thumb300x90' => array('width' => 300, 'height' => 90, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_full' => array('width' => 1900, 'height' => NULL, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_page_header_700' => array('width' => 700, 'height' => 400, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'gallery_media_newsletter_highlight' => array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true), 'gallery_media_newsletter_post_l' => array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true), 'gallery_media_newsletter_post' => array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true), 'gallery_media_newsletter_media' => array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true), 'gallery_media_newsletter_video_play' => array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true)), array('strategy' => 'sonata.media.security.superadmin_strategy', 'mode' => 'http'));
        $instance->addContext('person', array(0 => 'sonata.media.provider.image'), array('person_thumb' => array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'person_thumb70' => array('width' => 70, 'height' => 70, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'person_direction' => array('width' => 300, 'height' => 264, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'person_direction_main' => array('width' => 314, 'height' => 375, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'person_struct_list' => array('width' => 305, 'height' => 202, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'person_profile_title' => array('width' => 250, 'height' => 166, 'quality' => 95, 'format' => 'jpg', 'constraint' => true)), array('strategy' => 'sonata.media.security.superadmin_strategy', 'mode' => 'http'));
        $instance->addContext('person_top', array(0 => 'sonata.media.provider.image'), array('person_top_thumb' => array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'person_top_struct_list_top' => array('width' => 320, 'height' => 387, 'quality' => 95, 'format' => 'jpg', 'constraint' => true)), array('strategy' => 'sonata.media.security.superadmin_strategy', 'mode' => 'http'));
        $instance->addContext('metro_timeline', array(0 => 'sonata.media.provider.image'), array('metro_timeline_thumb' => array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true), 'metro_timeline_thumb960' => array('width' => 960, 'height' => NULL, 'quality' => 95, 'format' => 'jpg', 'constraint' => true)), array('strategy' => 'sonata.media.security.superadmin_strategy', 'mode' => 'http'));
        $instance->addDownloadSecurity('sonata.media.security.superadmin_strategy', $this->get('sonata.media.security.superadmin_strategy'));
        $instance->addProvider('sonata.media.provider.image', $this->get('sonata.media.provider.image'));
        $instance->addProvider('sonata.media.provider.external_image', $this->get('sonata.media.provider.external_image'));
        $instance->addProvider('sonata.media.provider.video', $this->get('sonata.media.provider.video'));
        $instance->addProvider('sonata.media.provider.file', $this->get('sonata.media.provider.file'));
        $instance->addProvider('sonata.media.provider.youtube', $this->get('sonata.media.provider.youtube'));
        $instance->addProvider('sonata.media.provider.dailymotion', $this->get('sonata.media.provider.dailymotion'));
        $instance->addProvider('sonata.media.provider.vimeo', $this->get('sonata.media.provider.vimeo'));
        return $instance;
    }
    protected function getSonata_Media_Provider_DailymotionService()
    {
        $this->services['sonata.media.provider.dailymotion'] = $instance = new \Sonata\MediaBundle\Provider\DailyMotionProvider('sonata.media.provider.dailymotion', $this->get('sonata.media.filesystem.local'), $this->get('sonata.media.cdn.server'), $this->get('sonata.media.generator.default'), $this->get('sonata.media.thumbnail.format'), $this->get('sonata.media.buzz.browser'), $this->get('sonata.media.metadata.proxy'));
        $instance->setTemplates(array('helper_thumbnail' => 'SonataMediaBundle:Provider:thumbnail.html.twig', 'helper_view' => 'SonataMediaBundle:Provider:view_dailymotion.html.twig'));
        $instance->setResizer($this->get('sonata.media.resizer.simple'));
        $instance->addFormat('admin', array('quality' => 80, 'width' => 100, 'format' => 'jpg', 'height' => false, 'constraint' => true));
        return $instance;
    }
    protected function getSonata_Media_Provider_ExternalImageService()
    {
        $this->services['sonata.media.provider.external_image'] = $instance = new \AppBundle\Admin\MediaProvider\ExternalImageProvider('sonata.media.provider.external_image', $this->get('sonata.media.filesystem.local'), $this->get('sonata.media.cdn.server'), $this->get('sonata.media.generator.default'), $this->get('sonata.media.thumbnail.format'), array(0 => 'jpg', 1 => 'png', 2 => 'jpeg', 3 => 'gif'), array(0 => 'image/pjpeg', 1 => 'image/jpeg', 2 => 'image/png', 3 => 'image/x-png', 4 => 'image/gif'), $this->get('sonata.media.adapter.image.gd'), $this->get('sonata.media.metadata.proxy'), $this->get('sonata.media.buzz.browser'));
        $instance->setTemplates(array('helper_thumbnail' => 'SonataMediaBundle:Provider:thumbnail.html.twig', 'helper_view' => 'SonataMediaBundle:Provider:view_image.html.twig'));
        $instance->setResizer($this->get('sonata.media.resizer.simple'));
        $instance->addFormat('main_image_thumb', array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb210', array('width' => 210, 'height' => 150, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb212', array('width' => 212, 'height' => 128, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb271x125', array('width' => 271, 'height' => 125, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb295x345', array('width' => 295, 'height' => 345, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb300', array('width' => 300, 'height' => 200, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb300x230', array('width' => 300, 'height' => 230, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb300x420', array('width' => 300, 'height' => 420, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb306', array('width' => 306, 'height' => 389, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb323', array('width' => 323, 'height' => 212, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb336', array('width' => 336, 'height' => 280, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb385', array('width' => 385, 'height' => 240, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb451', array('width' => 451, 'height' => 273, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb465x548', array('width' => 465, 'height' => 548, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb500', array('width' => 500, 'height' => false, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb589', array('width' => 589, 'height' => 454, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb596', array('width' => 596, 'height' => 368, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb630x338', array('width' => 630, 'height' => 338, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb680x495', array('width' => 680, 'height' => 495, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb300x90', array('width' => 300, 'height' => 90, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb340x340', array('width' => 340, 'height' => 340, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb1440', array('width' => 1440, 'height' => 454, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb715x250', array('width' => 715, 'height' => 250, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb960', array('width' => 960, 'height' => false, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb960x470', array('width' => 960, 'height' => 470, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb469', array('width' => 469, 'height' => 275, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_full', array('width' => 1900, 'height' => false, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_page_header_700', array('width' => 700, 'height' => 400, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_newsletter_highlight', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_newsletter_post_l', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_newsletter_post', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_newsletter_media', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_newsletter_video_play', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb', array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb210', array('width' => 210, 'height' => 150, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb212', array('width' => 212, 'height' => 128, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb271x125', array('width' => 271, 'height' => 125, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb295x345', array('width' => 295, 'height' => 345, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb300', array('width' => 300, 'height' => 200, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb300x420', array('width' => 300, 'height' => 420, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb323', array('width' => 323, 'height' => 212, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb336', array('width' => 336, 'height' => 280, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb340x340', array('width' => 340, 'height' => 340, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb385', array('width' => 385, 'height' => 240, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb465x548', array('width' => 465, 'height' => 548, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb589', array('width' => 589, 'height' => 454, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb780', array('width' => 780, 'height' => false, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb1440', array('width' => 1440, 'height' => 454, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb715x250', array('width' => 715, 'height' => 250, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb960x470', array('width' => 960, 'height' => 470, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb680x495', array('width' => 680, 'height' => 495, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb300x90', array('width' => 300, 'height' => 90, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_full', array('width' => 1900, 'height' => false, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_page_header_700', array('width' => 700, 'height' => 400, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_newsletter_highlight', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_newsletter_post_l', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_newsletter_post', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_newsletter_media', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_newsletter_video_play', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('admin', array('quality' => 80, 'width' => 100, 'format' => 'jpg', 'height' => false, 'constraint' => true));
        return $instance;
    }
    protected function getSonata_Media_Provider_FileService()
    {
        $this->services['sonata.media.provider.file'] = $instance = new \Application\Sonata\MediaBundle\Provider\FileProvider('sonata.media.provider.file', $this->get('sonata.media.filesystem.local'), $this->get('sonata.media.cdn.server'), $this->get('sonata.media.generator.default'), $this->get('sonata.media.thumbnail.liip_imagine'), array(0 => 'pdf', 1 => 'txt', 2 => 'rtf', 3 => 'doc', 4 => 'docx', 5 => 'xls', 6 => 'xlsx', 7 => 'ppt', 8 => 'pptx', 9 => 'odt', 10 => 'odg', 11 => 'odp', 12 => 'ods', 13 => 'odc', 14 => 'odf', 15 => 'odb', 16 => 'csv', 17 => 'xml'), array(0 => 'application/pdf', 1 => 'application/x-pdf', 2 => 'application/rtf', 3 => 'text/html', 4 => 'text/rtf', 5 => 'text/plain', 6 => 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 7 => 'application/msword', 8 => 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 9 => 'application/vnd.ms-excel'), $this->get('sonata.media.metadata.proxy'));
        $instance->setTemplates(array('helper_thumbnail' => 'SonataMediaBundle:Provider:thumbnail.html.twig', 'helper_view' => 'SonataMediaBundle:Provider:view_file.html.twig'));
        $instance->addFormat('file_thumb', array('width' => 64, 'quality' => 95, 'height' => false, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('initiative_thumb', array('width' => 64, 'quality' => 95, 'height' => false, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('admin', array('quality' => 80, 'width' => 100, 'format' => 'jpg', 'height' => false, 'constraint' => true));
        return $instance;
    }
    protected function getSonata_Media_Provider_ImageService()
    {
        $this->services['sonata.media.provider.image'] = $instance = new \Application\Sonata\MediaBundle\Provider\ImageProvider('sonata.media.provider.image', $this->get('sonata.media.filesystem.local'), $this->get('sonata.media.cdn.server'), $this->get('sonata.media.generator.default'), $this->get('sonata.media.thumbnail.liip_imagine'), array(0 => 'jpg', 1 => 'png', 2 => 'jpeg', 3 => 'gif'), array(0 => 'image/pjpeg', 1 => 'image/jpeg', 2 => 'image/png', 3 => 'image/x-png', 4 => 'image/gif'), $this->get('sonata.media.adapter.image.imagick'), $this->get('sonata.media.metadata.proxy'));
        $instance->setTemplates(array('helper_thumbnail' => 'SonataMediaBundle:Provider:thumbnail.html.twig', 'helper_view' => 'SonataMediaBundle:Provider:view_image.html.twig'));
        $instance->addFormat('main_image_thumb', array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb210', array('width' => 210, 'height' => 150, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb212', array('width' => 212, 'height' => 128, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb271x125', array('width' => 271, 'height' => 125, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb295x345', array('width' => 295, 'height' => 345, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb300', array('width' => 300, 'height' => 200, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb300x230', array('width' => 300, 'height' => 230, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb300x420', array('width' => 300, 'height' => 420, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb306', array('width' => 306, 'height' => 389, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb323', array('width' => 323, 'height' => 212, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb336', array('width' => 336, 'height' => 280, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb385', array('width' => 385, 'height' => 240, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb451', array('width' => 451, 'height' => 273, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb465x548', array('width' => 465, 'height' => 548, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb500', array('width' => 500, 'height' => false, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb589', array('width' => 589, 'height' => 454, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb596', array('width' => 596, 'height' => 368, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb630x338', array('width' => 630, 'height' => 338, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb680x495', array('width' => 680, 'height' => 495, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb300x90', array('width' => 300, 'height' => 90, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb340x340', array('width' => 340, 'height' => 340, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb1440', array('width' => 1440, 'height' => 454, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb715x250', array('width' => 715, 'height' => 250, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb960', array('width' => 960, 'height' => false, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb960x470', array('width' => 960, 'height' => 470, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_thumb469', array('width' => 469, 'height' => 275, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_full', array('width' => 1900, 'height' => false, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_page_header_700', array('width' => 700, 'height' => 400, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_newsletter_highlight', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_newsletter_post_l', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_newsletter_post', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_newsletter_media', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('main_image_newsletter_video_play', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('infographics_thumb', array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('infographics_thumb200', array('width' => 200, 'quality' => 95, 'height' => false, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('infographics_full', array('width' => 960, 'quality' => 95, 'height' => false, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('file_thumb', array('width' => 64, 'quality' => 95, 'height' => false, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb', array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb210', array('width' => 210, 'height' => 150, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb212', array('width' => 212, 'height' => 128, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb271x125', array('width' => 271, 'height' => 125, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb295x345', array('width' => 295, 'height' => 345, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb300', array('width' => 300, 'height' => 200, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb300x420', array('width' => 300, 'height' => 420, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb323', array('width' => 323, 'height' => 212, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb336', array('width' => 336, 'height' => 280, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb340x340', array('width' => 340, 'height' => 340, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb385', array('width' => 385, 'height' => 240, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb465x548', array('width' => 465, 'height' => 548, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb589', array('width' => 589, 'height' => 454, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb780', array('width' => 780, 'height' => false, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb1440', array('width' => 1440, 'height' => 454, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb715x250', array('width' => 715, 'height' => 250, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb960x470', array('width' => 960, 'height' => 470, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb680x495', array('width' => 680, 'height' => 495, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_thumb300x90', array('width' => 300, 'height' => 90, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_full', array('width' => 1900, 'height' => false, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_page_header_700', array('width' => 700, 'height' => 400, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_newsletter_highlight', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_newsletter_post_l', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_newsletter_post', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_newsletter_media', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('gallery_media_newsletter_video_play', array('width' => false, 'height' => false, 'quality' => 80, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('person_thumb', array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('person_thumb70', array('width' => 70, 'height' => 70, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('person_direction', array('width' => 300, 'height' => 264, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('person_direction_main', array('width' => 314, 'height' => 375, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('person_struct_list', array('width' => 305, 'height' => 202, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('person_profile_title', array('width' => 250, 'height' => 166, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('person_top_thumb', array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('person_top_struct_list_top', array('width' => 320, 'height' => 387, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('metro_timeline_thumb', array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('metro_timeline_thumb960', array('width' => 960, 'height' => false, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->setResizer($this->get('sonata.media.resizer.simple'));
        $instance->addFormat('admin', array('quality' => 80, 'width' => 100, 'format' => 'jpg', 'height' => false, 'constraint' => true));
        return $instance;
    }
    protected function getSonata_Media_Provider_VideoService()
    {
        $this->services['sonata.media.provider.video'] = $instance = new \AppBundle\Admin\MediaProvider\VideoProvider('sonata.media.provider.video', $this->get('sonata.media.filesystem.local'), $this->get('sonata.media.cdn.server'), $this->get('sonata.media.generator.default'), $this->get('sonata.media.thumbnail.format'), array(0 => 'mpeg', 1 => 'mp4'), array(0 => 'video/mpeg', 1 => 'video/mp4'), $this->get('sonata.media.metadata.proxy'));
        $instance->setTemplates(array('helper_thumbnail' => 'SonataMediaBundle:Provider:thumbnail_video.html.twig', 'helper_view' => 'SonataMediaBundle:Provider:view_video.html.twig'));
        $instance->addFormat('video_thumb', array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('video_full', array('width' => 854, 'quality' => 95, 'height' => false, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('admin', array('quality' => 80, 'width' => 100, 'format' => 'jpg', 'height' => false, 'constraint' => true));
        return $instance;
    }
    protected function getSonata_Media_Provider_VimeoService()
    {
        $this->services['sonata.media.provider.vimeo'] = $instance = new \Sonata\MediaBundle\Provider\VimeoProvider('sonata.media.provider.vimeo', $this->get('sonata.media.filesystem.local'), $this->get('sonata.media.cdn.server'), $this->get('sonata.media.generator.default'), $this->get('sonata.media.thumbnail.format'), $this->get('sonata.media.buzz.browser'), $this->get('sonata.media.metadata.proxy'));
        $instance->setTemplates(array('helper_thumbnail' => 'SonataMediaBundle:Provider:thumbnail.html.twig', 'helper_view' => 'SonataMediaBundle:Provider:view_vimeo.html.twig'));
        $instance->setResizer($this->get('sonata.media.resizer.simple'));
        $instance->addFormat('admin', array('quality' => 80, 'width' => 100, 'format' => 'jpg', 'height' => false, 'constraint' => true));
        return $instance;
    }
    protected function getSonata_Media_Provider_YoutubeService()
    {
        $this->services['sonata.media.provider.youtube'] = $instance = new \Application\Sonata\MediaBundle\Provider\YouTubeProvider('sonata.media.provider.youtube', $this->get('sonata.media.filesystem.local'), $this->get('sonata.media.cdn.server'), $this->get('sonata.media.generator.default'), $this->get('sonata.media.thumbnail.liip_imagine'), $this->get('sonata.media.buzz.browser'), $this->get('sonata.media.metadata.proxy'), false);
        $instance->setTemplates(array('helper_thumbnail' => 'SonataMediaBundle:Provider:thumbnail.html.twig', 'helper_view' => 'SonataMediaBundle:Provider:view_youtube.html.twig'));
        $instance->addFormat('video_thumb', array('width' => 140, 'height' => 100, 'quality' => 95, 'format' => 'jpg', 'constraint' => true));
        $instance->addFormat('video_full', array('width' => 854, 'quality' => 95, 'height' => false, 'format' => 'jpg', 'constraint' => true));
        $instance->setResizer($this->get('sonata.media.resizer.simple'));
        $instance->addFormat('admin', array('quality' => 80, 'width' => 100, 'format' => 'jpg', 'height' => false, 'constraint' => true));
        return $instance;
    }
    protected function getSonata_Media_Resizer_SimpleService()
    {
        return $this->services['sonata.media.resizer.simple'] = new \Sonata\MediaBundle\Resizer\SimpleResizer($this->get('sonata.media.adapter.image.gd'), 'inset', $this->get('sonata.media.metadata.proxy'));
    }
    protected function getSonata_Media_Resizer_SquareService()
    {
        return $this->services['sonata.media.resizer.square'] = new \Sonata\MediaBundle\Resizer\SquareResizer($this->get('sonata.media.adapter.image.gd'), 'inset', $this->get('sonata.media.metadata.proxy'));
    }
    protected function getSonata_Media_Security_ConnectedStrategyService()
    {
        return $this->services['sonata.media.security.connected_strategy'] = new \Sonata\MediaBundle\Security\RolesDownloadStrategy($this->get('translator.default'), $this->get('security.context'), array(0 => 'IS_AUTHENTICATED_FULLY', 1 => 'IS_AUTHENTICATED_REMEMBERED'));
    }
    protected function getSonata_Media_Security_ForbiddenStrategyService()
    {
        return $this->services['sonata.media.security.forbidden_strategy'] = new \Sonata\MediaBundle\Security\ForbiddenDownloadStrategy($this->get('translator.default'));
    }
    protected function getSonata_Media_Security_PublicStrategyService()
    {
        return $this->services['sonata.media.security.public_strategy'] = new \Sonata\MediaBundle\Security\PublicDownloadStrategy($this->get('translator.default'));
    }
    protected function getSonata_Media_Security_SuperadminStrategyService()
    {
        return $this->services['sonata.media.security.superadmin_strategy'] = new \Sonata\MediaBundle\Security\RolesDownloadStrategy($this->get('translator.default'), $this->get('security.context'), array(0 => 'ROLE_SUPER_ADMIN', 1 => 'ROLE_ADMIN'));
    }
    protected function getSonata_Media_Serializer_Handler_GalleryService()
    {
        return $this->services['sonata.media.serializer.handler.gallery'] = new \Sonata\MediaBundle\Serializer\GallerySerializerHandler($this->get('sonata.media.manager.gallery'));
    }
    protected function getSonata_Media_Serializer_Handler_MediaService()
    {
        return $this->services['sonata.media.serializer.handler.media'] = new \Sonata\MediaBundle\Serializer\MediaSerializerHandler($this->get('sonata.media.manager.media'));
    }
    protected function getSonata_Media_Thumbnail_FormatService()
    {
        return $this->services['sonata.media.thumbnail.format'] = new \Sonata\MediaBundle\Thumbnail\FormatThumbnail('jpg');
    }
    protected function getSonata_Media_Thumbnail_LiipImagineService()
    {
        return $this->services['sonata.media.thumbnail.liip_imagine'] = new \Application\Sonata\MediaBundle\Thumbnail\EditableFormatWithLiipImagineThumbnail($this->get('liip_imagine.templating.helper'), $this->get('sonata.media.editable_format.manager'));
    }
    protected function getSonata_Media_Twig_ExtensionService()
    {
        return $this->services['sonata.media.twig.extension'] = new \Sonata\MediaBundle\Twig\Extension\MediaExtension($this->get('sonata.media.pool'), $this->get('sonata.media.manager.media'));
    }
    protected function getSonata_Media_Twig_GlobalService()
    {
        return $this->services['sonata.media.twig.global'] = new \Sonata\MediaBundle\Twig\GlobalVariables($this);
    }
    protected function getSonata_Media_Validator_FormatService()
    {
        return $this->services['sonata.media.validator.format'] = new \Sonata\MediaBundle\Validator\FormatValidator($this->get('sonata.media.pool'));
    }
    protected function getSonata_Seo_Block_Breadcrumb_HomepageService()
    {
        return $this->services['sonata.seo.block.breadcrumb.homepage'] = new \Sonata\SeoBundle\Block\Breadcrumb\HomepageBreadcrumbBlockService('homepage', 'sonata.seo.block.breadcrumb.homepage', $this->get('templating'), $this->get('knp_menu.menu_provider'), $this->get('knp_menu.factory'));
    }
    protected function getSonata_Seo_Block_Email_ShareButtonService()
    {
        return $this->services['sonata.seo.block.email.share_button'] = new \Sonata\SeoBundle\Block\Social\EmailShareButtonBlockService('sonata.seo.block.email.share_button', $this->get('templating'));
    }
    protected function getSonata_Seo_Block_Facebook_LikeBoxService()
    {
        return $this->services['sonata.seo.block.facebook.like_box'] = new \Sonata\SeoBundle\Block\Social\FacebookLikeBoxBlockService('sonata.seo.block.facebook.like_box', $this->get('templating'));
    }
    protected function getSonata_Seo_Block_Facebook_LikeButtonService()
    {
        return $this->services['sonata.seo.block.facebook.like_button'] = new \Sonata\SeoBundle\Block\Social\FacebookLikeButtonBlockService('sonata.seo.block.facebook.like_button', $this->get('templating'));
    }
    protected function getSonata_Seo_Block_Facebook_SendButtonService()
    {
        return $this->services['sonata.seo.block.facebook.send_button'] = new \Sonata\SeoBundle\Block\Social\FacebookSendButtonBlockService('sonata.seo.block.facebook.send_button', $this->get('templating'));
    }
    protected function getSonata_Seo_Block_Facebook_ShareButtonService()
    {
        return $this->services['sonata.seo.block.facebook.share_button'] = new \Sonata\SeoBundle\Block\Social\FacebookShareButtonBlockService('sonata.seo.block.facebook.share_button', $this->get('templating'));
    }
    protected function getSonata_Seo_Block_Pinterest_PinButtonService()
    {
        return $this->services['sonata.seo.block.pinterest.pin_button'] = new \Sonata\SeoBundle\Block\Social\PinterestPinButtonBlockService('sonata.seo.block.pinterest.pin_button', $this->get('templating'));
    }
    protected function getSonata_Seo_Block_Twitter_EmbedService()
    {
        return $this->services['sonata.seo.block.twitter.embed'] = new \Sonata\SeoBundle\Block\Social\TwitterEmbedTweetBlockService('sonata.seo.block.twitter.embed', $this->get('templating'));
    }
    protected function getSonata_Seo_Block_Twitter_FollowButtonService()
    {
        return $this->services['sonata.seo.block.twitter.follow_button'] = new \Sonata\SeoBundle\Block\Social\TwitterFollowButtonBlockService('sonata.seo.block.twitter.follow_button', $this->get('templating'));
    }
    protected function getSonata_Seo_Block_Twitter_HashtagButtonService()
    {
        return $this->services['sonata.seo.block.twitter.hashtag_button'] = new \Sonata\SeoBundle\Block\Social\TwitterHashtagButtonBlockService('sonata.seo.block.twitter.hashtag_button', $this->get('templating'));
    }
    protected function getSonata_Seo_Block_Twitter_MentionButtonService()
    {
        return $this->services['sonata.seo.block.twitter.mention_button'] = new \Sonata\SeoBundle\Block\Social\TwitterMentionButtonBlockService('sonata.seo.block.twitter.mention_button', $this->get('templating'));
    }
    protected function getSonata_Seo_Block_Twitter_ShareButtonService()
    {
        return $this->services['sonata.seo.block.twitter.share_button'] = new \Sonata\SeoBundle\Block\Social\TwitterShareButtonBlockService('sonata.seo.block.twitter.share_button', $this->get('templating'));
    }
    protected function getSonata_Seo_Event_BreadcrumbService()
    {
        $this->services['sonata.seo.event.breadcrumb'] = $instance = new \Sonata\SeoBundle\Event\BreadcrumbListener();
        $instance->addBlockService('sonata.user.block.breadcrumb_index', $this->get('sonata.user.block.breadcrumb_index'));
        $instance->addBlockService('sonata.user.block.breadcrumb_profile', $this->get('sonata.user.block.breadcrumb_profile'));
        $instance->addBlockService('sonata.media.block.breadcrumb_view', $this->get('sonata.media.block.breadcrumb_view'));
        $instance->addBlockService('sonata.media.block.breadcrumb_index', $this->get('sonata.media.block.breadcrumb_index'));
        $instance->addBlockService('sonata.media.block.breadcrumb_view_media', $this->get('sonata.media.block.breadcrumb_view_media'));
        $instance->addBlockService('sonata.seo.block.breadcrumb.homepage', $this->get('sonata.seo.block.breadcrumb.homepage'));
        return $instance;
    }
    protected function getSonata_Seo_Page_DefaultService()
    {
        $this->services['sonata.seo.page.default'] = $instance = new \AppBundle\Seo\SeoPage();
        $instance->setTitle('Комплекс градостроительной политики и строительства города Москвы');
        $instance->setMetas(array());
        $instance->setHtmlAttributes(array());
        $instance->setSeparator(' — ');
        return $instance;
    }
    protected function getSonata_Seo_Sitemap_ManagerService()
    {
        return new \Sonata\SeoBundle\Sitemap\SourceManager();
    }
    protected function getSonata_User_Admin_GroupService()
    {
        $instance = new \Application\Sonata\UserBundle\Admin\GroupAdmin('sonata.user.admin.group', 'Application\\Sonata\\UserBundle\\Entity\\Group', 'SonataAdminBundle:CRUD');
        $instance->setTranslationDomain('SonataUserBundle');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('groups');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getSonata_User_Admin_UserService()
    {
        $instance = new \Application\Sonata\UserBundle\Admin\UserAdmin('sonata.user.admin.user', 'Application\\Sonata\\UserBundle\\Entity\\User', 'AppBundle:Admin\\UserCRUD');
        $instance->setUserManager($this->get('fos_user.user_manager'));
        $instance->setTranslationDomain('SonataUserBundle');
        $instance->setFormTheme(array(0 => ':SonataAdmin/Form:form_admin_fields.html.twig'));
        $instance->setFilterTheme(array(0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig'));
        $instance->setLabelTranslatorStrategy($this->get('sonata.admin.label.strategy.underscore'));
        $instance->setManagerType('orm');
        $instance->setModelManager($this->get('sonata.admin.manager.orm'));
        $instance->setFormContractor($this->get('sonata.admin.builder.orm_form'));
        $instance->setShowBuilder($this->get('sonata.admin.builder.orm_show'));
        $instance->setListBuilder($this->get('sonata.admin.builder.orm_list'));
        $instance->setDatagridBuilder($this->get('sonata.admin.builder.orm_datagrid'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setConfigurationPool($this->get('sonata.admin.pool'));
        $instance->setRouteGenerator($this->get('sonata.admin.route.default_generator'));
        $instance->setValidator($this->get('validator'));
        $instance->setSecurityHandler($this->get('sonata.admin.security.handler'));
        $instance->setMenuFactory($this->get('knp_menu.factory'));
        $instance->setRouteBuilder($this->get('sonata.admin.route.path_info'));
        $instance->setLabel('users');
        $instance->setPersistFilters(false);
        $instance->setTemplates(array('user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig', 'add_block' => 'SonataAdminBundle:Core:add_block.html.twig', 'layout' => '::SonataAdmin/standard_layout.html.twig', 'ajax' => 'SonataAdminBundle::ajax_layout.html.twig', 'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig', 'list' => 'SonataAdminBundle:CRUD:list.html.twig', 'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig', 'show' => 'SonataAdminBundle:CRUD:show.html.twig', 'show_compare' => '::SonataAdmin/show_compare.html.twig', 'edit' => 'AmgAdminBundle::locking_edit.html.twig', 'history' => '::SonataAdmin/history.html.twig', 'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig', 'acl' => 'SonataAdminBundle:CRUD:acl.html.twig', 'action' => 'SonataAdminBundle:CRUD:action.html.twig', 'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig', 'preview' => 'SonataAdminBundle:CRUD:preview.html.twig', 'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig', 'delete' => 'SonataAdminBundle:CRUD:delete.html.twig', 'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig', 'select' => 'SonataAdminBundle:CRUD:list__select.html.twig', 'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig', 'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig', 'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig', 'pager_links' => ':SonataAdmin:Pager/links.html.twig', 'pager_results' => 'SonataAdminBundle:Pager:results.html.twig', 'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig', 'search' => 'SonataAdminBundle:Core:search.html.twig', 'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig'));
        $instance->setSecurityInformation(array('EDIT' => array(0 => 'EDIT'), 'LIST' => array(0 => 'LIST'), 'CREATE' => array(0 => 'CREATE'), 'VIEW' => array(0 => 'VIEW'), 'DELETE' => array(0 => 'DELETE'), 'MASTER' => array(0 => 'MASTER')));
        $instance->initialize();
        $instance->addExtension($this->get('app.admin.extension.action_logger'));
        $instance->addExtension($this->get('sonata.admin.event.extension'));
        return $instance;
    }
    protected function getSonata_User_Block_AccountService()
    {
        return $this->services['sonata.user.block.account'] = new \Sonata\UserBundle\Block\AccountBlockService('sonata.user.block.account', $this->get('templating'), $this->get('security.context'));
    }
    protected function getSonata_User_Block_BreadcrumbIndexService()
    {
        return $this->services['sonata.user.block.breadcrumb_index'] = new \Sonata\UserBundle\Block\Breadcrumb\UserIndexBreadcrumbBlockService('user_index', 'sonata.user.block.breadcrumb_index', $this->get('templating'), $this->get('knp_menu.menu_provider'), $this->get('knp_menu.factory'));
    }
    protected function getSonata_User_Block_BreadcrumbProfileService()
    {
        return $this->services['sonata.user.block.breadcrumb_profile'] = new \Sonata\UserBundle\Block\Breadcrumb\UserProfileBreadcrumbBlockService('user_profile', 'sonata.user.block.breadcrumb_profile', $this->get('templating'), $this->get('knp_menu.menu_provider'), $this->get('knp_menu.factory'));
    }
    protected function getSonata_User_Block_MenuService()
    {
        return $this->services['sonata.user.block.menu'] = new \Sonata\UserBundle\Block\ProfileMenuBlockService('sonata.user.block.menu', $this->get('templating'), $this->get('knp_menu.menu_provider'), $this->get('sonata.user.profile.menu_builder'));
    }
    protected function getSonata_User_EditableRoleBuilderService()
    {
        $this->services['sonata.user.editable_role_builder'] = $instance = new \AppBundle\Role\EditableRolesBuilder($this->get('security.context'), $this->get('sonata.admin.pool'), $this->get('doctrine.orm.default_entity_manager'), $this->get('translator.default'), array('ROLE_ADMIN' => array(0 => 'ROLE_USER', 1 => 'ROLE_SONATA_ADMIN'), 'ROLE_SUPER_ADMIN' => array(0 => 'ROLE_ADMIN', 1 => 'ROLE_ALLOWED_TO_SWITCH', 2 => 'ROLE_NOTIFICATION_SENDER'), 'ROLE_VIP_JOURNALIST' => array(0 => 'ROLE_JOURNALIST'), 'ROLE_JOURNALIST' => array(), 'ROLE_EVENT_MODERATOR' => array(), 'ROLE_NOTIFICATION_SENDER' => array()));
        $instance->setAdminAttributes(array('ROLE_ADMIN_POST_%s' => array('code' => 'admin.post', 'group' => 'Публикации', 'label' => 'Публикации', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_EMBEDDED_CONTENT_BANNER_%s' => array('code' => 'admin.embedded_content.banner', 'group' => 'Встраиваемый контент', 'label' => 'Баннеры', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_EMBEDDED_CONTENT_TEXT_BLOCK_%s' => array('code' => 'admin.embedded_content.text_block', 'group' => 'Встраиваемый контент', 'label' => 'Текстовые блоки', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_EMBEDDED_CONTENT_QUOTE_%s' => array('code' => 'admin.embedded_content.quote', 'group' => 'Встраиваемый контент', 'label' => 'Цитаты', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_EMBEDDED_CONTENT_FAQ_%s' => array('code' => 'admin.embedded_content.faq', 'group' => 'Встраиваемый контент', 'label' => 'Блоки вопрос-ответ', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_ADMINISTRATIVE_UNIT_%s' => array('code' => 'admin.administrative_unit', 'group' => 'Объекты строительства', 'label' => 'Административная единица', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_ADMINISTRATIVE_AREA_%s' => array('code' => 'admin.administrative_area', 'group' => 'Объекты строительства', 'label' => 'Административный округ', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_CITY_DISTRICT_%s' => array('code' => 'admin.city_district', 'group' => 'Объекты строительства', 'label' => 'Район', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_CATEGORY_%s' => array('code' => 'admin.category', 'group' => 'Публикации', 'label' => 'Категории', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_GALLERY_%s' => array('code' => 'admin.gallery', 'group' => 'Медиа', 'label' => 'Фотогалереи', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_GALLERY_MEDIA_%s' => array('code' => 'admin.gallery_media', 'group' => 'Медиа', 'label' => 'Элемент галереи', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_POST_ATTACHMENT_%s' => array('code' => 'admin.post_attachment', 'group' => 'Медиа', 'label' => 'Прикреплённый файл', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_VIDEO_%s' => array('code' => 'admin.video', 'group' => 'Медиа', 'label' => 'Видеоклипы', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_INFOGRAPHICS_%s' => array('code' => 'admin.infographics', 'group' => 'Медиа', 'label' => 'Инфографика', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_CONSTRUCTION_%s' => array('code' => 'admin.construction', 'group' => 'Объекты строительства', 'label' => 'Объект строительства', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_CONSTRUCTION_TYPE_%s' => array('code' => 'admin.construction_type', 'group' => 'Объекты строительства', 'label' => 'Разделы', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_MENU_NODES_%s' => array('code' => 'admin.menu_nodes', 'group' => 'Меню', 'label' => 'Меню', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_MENU_%s' => array('code' => 'admin.menu', 'group' => 'Меню', 'label' => 'Меню', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_SPOTLIGHT_ITEM_%s' => array('code' => 'admin.spotlight_item', 'group' => 'Главная страница', 'label' => 'В центре внимания', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_DOCUMENT_%s' => array('code' => 'admin.document', 'group' => 'Документы', 'label' => 'Документ', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_DECISION_DOCUMENT_%s' => array('code' => 'admin.decision_document', 'group' => 'Документы', 'label' => 'Решения об утверждении проектной документации', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_LAW_DOCUMENT_%s' => array('code' => 'admin.law_document', 'group' => 'Документы', 'label' => 'Законы указы постановления распоряжения', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_DRAFT_DOCUMENT_%s' => array('code' => 'admin.draft_document', 'group' => 'Документы', 'label' => 'Проекты правовых нормативных актов', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_DOCUMENT_HAS_MEDIA_%s' => array('code' => 'admin.document_has_media', 'group' => 'Документы', 'label' => 'Файлы документов', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_OUTGOING_AGENCY_%s' => array('code' => 'admin.outgoing_agency', 'group' => 'Документы', 'label' => 'Исходящий орган', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_PERSON_%s' => array('code' => 'admin.person', 'group' => 'Справочники', 'label' => 'Персоны', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_NEWSLETTER_%s' => array('code' => 'admin.newsletter', 'group' => 'Рассылки', 'label' => 'Формирование', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_NEWSLETTER_UNSUBSCRIBE_REASON_%s' => array('code' => 'admin.newsletter.unsubscribe_reason', 'group' => 'Рассылки', 'label' => 'Причины отказа', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_EMAI_SUBSCRIPTION_%s' => array('code' => 'admin.emai_subscription', 'group' => 'Рассылки', 'label' => 'Подписчики', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_THREAD_%s' => array('code' => 'admin.thread', 'group' => 'Комментарии и обр. связь', 'label' => 'Комментарии', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_APP_ADMIN_APPEAL_%s' => array('code' => 'app.admin.appeal', 'group' => 'Комментарии и обр. связь', 'label' => 'Обращения', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_COMMENT_%s' => array('code' => 'admin.comment', 'group' => 'Комментарии и обр. связь', 'label' => 'Комментарии', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_GALLERY_PICKS_%s' => array('code' => 'admin.gallery_picks', 'group' => 'Главная страница', 'label' => 'Фото на главной', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_VIDEO_PICKS_%s' => array('code' => 'admin.video_picks', 'group' => 'Главная страница', 'label' => 'Видео на главной', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_DRAFT_%s' => array('code' => 'admin.draft', 'group' => 'Публикации', 'label' => 'Черновики', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_ARTICLE_RUBRICS_%s' => array('code' => 'admin.article_rubrics', 'group' => 'Публикации', 'label' => 'Рубрики', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_ORGANIZATION_DIRECTORY_%s' => array('code' => 'admin.organization_directory', 'group' => 'Справочники', 'label' => 'Справочники', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_CONTACT_PERSON_%s' => array('code' => 'admin.contact_person', 'group' => 'Справочники', 'label' => 'Контакты', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_ORGANIZATION_%s' => array('code' => 'admin.organization', 'group' => 'Справочники', 'label' => 'Организации', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_ACTION_LOG_%s' => array('code' => 'admin.action_log', 'group' => 'sonata_user', 'label' => 'Учет действий', 'label_catalogue' => 'SonataUserBundle'), 'ROLE_ADMIN_DOCUMENT_RUBRIC_%s' => array('code' => 'admin.document_rubric', 'group' => 'Документы', 'label' => 'Рубрики', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_ERROR_REPORT_%s' => array('code' => 'admin.error_report', 'group' => 'Комментарии и обр. связь', 'label' => 'Отчеты об ошибках', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_AUTHOR_%s' => array('code' => 'admin.author', 'group' => 'Публикации', 'label' => 'Авторы', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_ARTICLE_SOURCE_%s' => array('code' => 'admin.article_source', 'group' => 'Публикации', 'label' => 'Ведомства', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_USER_ROLE_%s' => array('code' => 'admin.user_role', 'group' => 'sonata_user', 'label' => 'Описания ролей', 'label_catalogue' => 'SonataUserBundle'), 'ROLE_ADMIN_METRO_LINE_%s' => array('code' => 'admin.metro_line', 'group' => 'Объекты строительства', 'label' => 'Линии метро', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_METRO_STATION_%s' => array('code' => 'admin.metro_station', 'group' => 'Объекты строительства', 'label' => 'Станции метро', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_METRO_STATION_IMAGE_%s' => array('code' => 'admin.metro_station_image', 'group' => 'Объекты строительства', 'label' => 'Изображения станции метро', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_METRO_TIMELINE_YEAR_%s' => array('code' => 'admin.metro_timeline_year', 'group' => 'Объекты строительства', 'label' => 'Таймлайн метро', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_ROAD_%s' => array('code' => 'admin.road', 'group' => 'Объекты строительства', 'label' => 'Дороги', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_DESTRUCTION_%s' => array('code' => 'admin.destruction', 'group' => 'Объекты строительства', 'label' => 'Снос пятиэтажек', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_REDIRECT_%s' => array('code' => 'admin.redirect', 'group' => 'Admin', 'label' => 'Redirects', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_MEDIA_CATEGORY_%s' => array('code' => 'admin.media_category', 'group' => 'sonata_media', 'label' => 'Категории', 'label_catalogue' => 'SonataMediaBundle'), 'ROLE_ADMIN_POST_NEWSLETTER_%s' => array('code' => 'admin.post_newsletter', 'group' => 'Рассылки', 'label' => 'post', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_GALLERY_NEWSLETTER_%s' => array('code' => 'admin.gallery_newsletter', 'group' => 'Рассылки', 'label' => 'gallery', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_VIDEO_NEWSLETTER_%s' => array('code' => 'admin.video_newsletter', 'group' => 'Рассылки', 'label' => 'video', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_INFOGRAPHOICS_NEWSLETTER_%s' => array('code' => 'admin.infographoics_newsletter', 'group' => 'Рассылки', 'label' => 'infographics', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_HIGHTLIGHT_NEWSLETTER_%s' => array('code' => 'admin.hightlight_newsletter', 'group' => 'Рассылки', 'label' => 'Блоки', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_ANNOUNCEMENT_%s' => array('code' => 'admin.announcement', 'group' => 'Главная страница', 'label' => 'Анонсы', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_OWNER_%s' => array('code' => 'admin.owner', 'group' => 'Справочники', 'label' => 'Департаменты и комитеты', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_SUBORDINATE_SOCIALS_%s' => array('code' => 'admin.subordinate_socials', 'group' => 'Справочники', 'label' => 'Соцсети ДК', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_CONSTRUCTION_FILTER_%s' => array('code' => 'admin.construction_filter', 'group' => 'Объекты строительства', 'label' => 'Фильтры импорта', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_CONSTRUCTION_PARAMETER_%s' => array('code' => 'admin.construction_parameter', 'group' => 'Объекты строительства', 'label' => 'Характеристики', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_CONSTRUCTION_PARAMETER_VALUE_%s' => array('code' => 'admin.construction_parameter_value', 'group' => 'Объекты строительства', 'label' => 'Значения характеристик', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_ROAD_PARAMETER_VALUE_%s' => array('code' => 'admin.road_parameter_value', 'group' => 'Объекты строительства', 'label' => 'Значения характеристик', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_QUESTIONS_AND_ANSWERS_%s' => array('code' => 'admin.questions_and_answers', 'group' => 'Встраиваемый контент', 'label' => 'Вопросы и ответы', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_ADMIN_EXTRA_INFORMATION_%s' => array('code' => 'admin.extra_information', 'group' => 'Тест', 'label' => 'Дополнительная информация', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_SONATA_USER_ADMIN_USER_%s' => array('code' => 'sonata.user.admin.user', 'group' => 'sonata_user', 'label' => 'users', 'label_catalogue' => 'SonataUserBundle'), 'ROLE_SONATA_USER_ADMIN_GROUP_%s' => array('code' => 'sonata.user.admin.group', 'group' => 'sonata_user', 'label' => 'groups', 'label_catalogue' => 'SonataUserBundle'), 'ROLE_SONATA_MEDIA_ADMIN_MEDIA_%s' => array('code' => 'sonata.media.admin.media', 'group' => 'sonata_media', 'label' => 'media', 'label_catalogue' => 'SonataMediaBundle'), 'ROLE_SONATA_MEDIA_ADMIN_GALLERY_HAS_MEDIA_%s' => array('code' => 'sonata.media.admin.gallery_has_media', 'group' => 'sonata_media', 'label' => 'gallery_has_media', 'label_catalogue' => 'SonataMediaBundle'), 'ROLE_AMG_PAGE_ADMIN_PAGE_%s' => array('code' => 'amg_page.admin.page', 'group' => 'Публикации', 'label' => 'Страницы', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_AMG_PAGE_ADMIN_BLOCK_%s' => array('code' => 'amg_page.admin.block', 'group' => 'Блоки', 'label' => 'Блоки', 'label_catalogue' => 'SonataAdminBundle'), 'ROLE_AMG_TAG_ADMIN_TAG_%s' => array('code' => 'amg_tag.admin.tag', 'group' => 'Публикации', 'label' => 'Теги', 'label_catalogue' => 'SonataAdminBundle')));
        return $instance;
    }
    protected function getSonata_User_Form_GenderListService()
    {
        return $this->services['sonata.user.form.gender_list'] = new \Sonata\CoreBundle\Form\Type\StatusType('Application\\Sonata\\UserBundle\\Entity\\User', 'getGenderList', 'sonata_user_gender');
    }
    protected function getSonata_User_Form_Type_SecurityRolesService()
    {
        return $this->services['sonata.user.form.type.security_roles'] = new \AppBundle\Form\Type\SecurityRolesType($this->get('sonata.user.editable_role_builder'));
    }
    protected function getSonata_User_Manager_UserService()
    {
        return $this->services['sonata.user.manager.user'] = new \Sonata\UserBundle\Entity\UserManagerProxy('Sonata\\UserBundle\\Entity\\User', $this->get('doctrine'), $this->get('fos_user.user_manager'));
    }
    protected function getSonata_User_Profile_FormService()
    {
        return $this->services['sonata.user.profile.form'] = $this->get('form.factory')->createNamed('sonata_user_profile_form', 'app_user_profile', NULL, array('validation_groups' => array(0 => 'Profile', 1 => 'Default'), 'translation_domain' => 'SonataUserBundle'));
    }
    protected function getSonata_User_Profile_Form_HandlerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('sonata.user.profile.form.handler', 'request');
        }
        return $this->services['sonata.user.profile.form.handler'] = $this->scopedServices['request']['sonata.user.profile.form.handler'] = new \Sonata\UserBundle\Form\Handler\ProfileFormHandler($this->get('sonata.user.profile.form'), $this->get('request'), $this->get('fos_user.user_manager'));
    }
    protected function getSonata_User_Profile_Form_TypeService()
    {
        return $this->services['sonata.user.profile.form.type'] = new \Sonata\UserBundle\Form\Type\ProfileType('Application\\Sonata\\UserBundle\\Entity\\User');
    }
    protected function getSonata_User_Profile_MenuBuilderService()
    {
        return $this->services['sonata.user.profile.menu_builder'] = new \Sonata\UserBundle\Menu\ProfileMenuBuilder($this->get('knp_menu.factory'), $this->get('translator.default'), array(0 => array('route' => 'sonata_user_profile_edit', 'label' => 'link_edit_profile', 'domain' => 'SonataUserBundle', 'route_parameters' => array()), 1 => array('route' => 'sonata_user_profile_edit_authentication', 'label' => 'link_edit_authentication', 'domain' => 'SonataUserBundle', 'route_parameters' => array())), $this->get('event_dispatcher'));
    }
    protected function getSonata_User_Registration_FormService()
    {
        return $this->services['sonata.user.registration.form'] = $this->get('form.factory')->createNamed('sonata_user_registration_form', 'sonata_user_registration', NULL, array('validation_groups' => array(0 => 'Registration', 1 => 'Default')));
    }
    protected function getSonata_User_Registration_Form_HandlerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('sonata.user.registration.form.handler', 'request');
        }
        return $this->services['sonata.user.registration.form.handler'] = $this->scopedServices['request']['sonata.user.registration.form.handler'] = new \Sonata\UserBundle\Form\Handler\RegistrationFormHandler($this->get('sonata.user.registration.form'), $this->get('request'), $this->get('fos_user.user_manager'), $this->get('fos_user.mailer'), $this->get('fos_user.util.token_generator'));
    }
    protected function getSonata_User_Registration_Form_TypeService()
    {
        return $this->services['sonata.user.registration.form.type'] = new \Sonata\UserBundle\Form\Type\RegistrationFormType('Application\\Sonata\\UserBundle\\Entity\\User', array());
    }
    protected function getSonata_User_Serializer_Handler_UserService()
    {
        return $this->services['sonata.user.serializer.handler.user'] = new \Sonata\UserBundle\Serializer\UserSerializerHandler($this->get('sonata.user.manager.user'));
    }
    protected function getSonata_User_Twig_GlobalService()
    {
        return $this->services['sonata.user.twig.global'] = new \Sonata\UserBundle\Twig\GlobalVariables($this);
    }
    protected function getStofDoctrineExtensions_EventListener_LoggerService()
    {
        return $this->services['stof_doctrine_extensions.event_listener.logger'] = new \Stof\DoctrineExtensionsBundle\EventListener\LoggerListener($this->get('stof_doctrine_extensions.listener.loggable'), $this->get('security.token_storage'), $this->get('security.authorization_checker'));
    }
    protected function getStofDoctrineExtensions_Uploadable_ManagerService()
    {
        $a = new \Gedmo\Uploadable\UploadableListener(new \Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter());
        $a->setAnnotationReader($this->get('annotation_reader'));
        $a->setDefaultFileInfoClass('Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo');
        return $this->services['stof_doctrine_extensions.uploadable.manager'] = new \Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager($a, 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo');
    }
    protected function getStreamedResponseListenerService()
    {
        return $this->services['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener();
    }
    protected function getSubordinateDirectionService()
    {
        $this->services['subordinate_direction'] = $instance = new \AppBundle\Block\SubordinateDirectionBlock('subordinate_direction', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setCache(false);
        return $instance;
    }
    protected function getSubordinateHeaderService()
    {
        $this->services['subordinate_header'] = $instance = new \AppBundle\Block\SubordinateHeaderBlock('subordinate_header', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setCache(false);
        return $instance;
    }
    protected function getSubordinateHomepagePostsService()
    {
        $this->services['subordinate_homepage_posts'] = $instance = new \AppBundle\Block\SubordinateHomepagePostsBlock('subordinate_homepage_posts', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setCache(false);
        return $instance;
    }
    protected function getSubordinateMediaService()
    {
        $this->services['subordinate_media'] = $instance = new \AppBundle\Block\SubordinateMediaBlock('subordiante_media', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setCache(false);
        return $instance;
    }
    protected function getSubordinatePublicationsListService()
    {
        $this->services['subordinate_publications_list'] = $instance = new \AppBundle\Block\SubordinatePublicationsListBlock('subordinate_publications_list', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setFinder($this->get('fos_elastica.finder.app'));
        return $instance;
    }
    protected function getSubordinateSmiService()
    {
        $this->services['subordinate_smi'] = $instance = new \AppBundle\Block\SubordinateSmiBlock('subordiante_smi', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setCache(false);
        return $instance;
    }
    protected function getSwiftmailer_EmailSender_ListenerService()
    {
        return $this->services['swiftmailer.email_sender.listener'] = new \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener($this, $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSwiftmailer_Mailer_DefaultService()
    {
        return $this->services['swiftmailer.mailer.default'] = new \Swift_Mailer($this->get('swiftmailer.mailer.default.transport'));
    }
    protected function getSwiftmailer_Mailer_Default_SpoolService()
    {
        return $this->services['swiftmailer.mailer.default.spool'] = new \Swift_FileSpool('/var/www/html/main/shared/swiftmailer_spool/default');
    }
    protected function getSwiftmailer_Mailer_Default_TransportService()
    {
        $this->services['swiftmailer.mailer.default.transport'] = $instance = new \Swift_Transport_SpoolTransport($this->get('swiftmailer.mailer.default.transport.eventdispatcher'), $this->get('swiftmailer.mailer.default.spool'));
        $instance->registerPlugin($this->get('swiftmailer.plugin.impersonate'));
        return $instance;
    }
    protected function getSwiftmailer_Mailer_Default_Transport_RealService()
    {
        $a = new \Swift_Transport_Esmtp_AuthHandler(array(0 => new \Swift_Transport_Esmtp_Auth_CramMd5Authenticator(), 1 => new \Swift_Transport_Esmtp_Auth_LoginAuthenticator(), 2 => new \Swift_Transport_Esmtp_Auth_PlainAuthenticator()));
        $a->setUsername(NULL);
        $a->setPassword(NULL);
        $a->setAuthMode(NULL);
        $this->services['swiftmailer.mailer.default.transport.real'] = $instance = new \Swift_Transport_EsmtpTransport(new \Swift_Transport_StreamBuffer(new \Swift_StreamFilters_StringReplacementFilterFactory()), array(0 => $a), $this->get('swiftmailer.mailer.default.transport.eventdispatcher'));
        $instance->setHost('127.0.0.1');
        $instance->setPort(25);
        $instance->setEncryption(NULL);
        $instance->setTimeout(30);
        $instance->setSourceIp(NULL);
        return $instance;
    }
    protected function getSwiftmailer_Plugin_ImpersonateService()
    {
        return $this->services['swiftmailer.plugin.impersonate'] = new \Swift_Plugins_ImpersonatePlugin('info-stroi@mos.ru');
    }
    protected function getTemplatingService()
    {
        return $this->services['templating'] = new \Symfony\Bundle\TwigBundle\TwigEngine($this->get('twig'), $this->get('templating.name_parser'), $this->get('templating.locator'));
    }
    protected function getTemplating_FilenameParserService()
    {
        return $this->services['templating.filename_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser();
    }
    protected function getTemplating_Helper_AssetsService()
    {
        return $this->services['templating.helper.assets'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper($this->get('assets.packages'), array());
    }
    protected function getTemplating_Helper_LogoutUrlService()
    {
        return $this->services['templating.helper.logout_url'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper($this->get('security.logout_url_generator'));
    }
    protected function getTemplating_Helper_RouterService()
    {
        return $this->services['templating.helper.router'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper($this->get('cmf_routing.router'));
    }
    protected function getTemplating_Helper_SecurityService()
    {
        return $this->services['templating.helper.security'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper($this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getTemplating_LoaderService()
    {
        return $this->services['templating.loader'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader($this->get('templating.locator'));
    }
    protected function getTemplating_NameParserService()
    {
        return $this->services['templating.name_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser($this->get('kernel'));
    }
    protected function getTranslation_Dumper_CsvService()
    {
        return $this->services['translation.dumper.csv'] = new \Symfony\Component\Translation\Dumper\CsvFileDumper();
    }
    protected function getTranslation_Dumper_IniService()
    {
        return $this->services['translation.dumper.ini'] = new \Symfony\Component\Translation\Dumper\IniFileDumper();
    }
    protected function getTranslation_Dumper_JsonService()
    {
        return $this->services['translation.dumper.json'] = new \Symfony\Component\Translation\Dumper\JsonFileDumper();
    }
    protected function getTranslation_Dumper_MoService()
    {
        return $this->services['translation.dumper.mo'] = new \Symfony\Component\Translation\Dumper\MoFileDumper();
    }
    protected function getTranslation_Dumper_PhpService()
    {
        return $this->services['translation.dumper.php'] = new \Symfony\Component\Translation\Dumper\PhpFileDumper();
    }
    protected function getTranslation_Dumper_PoService()
    {
        return $this->services['translation.dumper.po'] = new \Symfony\Component\Translation\Dumper\PoFileDumper();
    }
    protected function getTranslation_Dumper_QtService()
    {
        return $this->services['translation.dumper.qt'] = new \Symfony\Component\Translation\Dumper\QtFileDumper();
    }
    protected function getTranslation_Dumper_ResService()
    {
        return $this->services['translation.dumper.res'] = new \Symfony\Component\Translation\Dumper\IcuResFileDumper();
    }
    protected function getTranslation_Dumper_XliffService()
    {
        return $this->services['translation.dumper.xliff'] = new \Symfony\Component\Translation\Dumper\XliffFileDumper();
    }
    protected function getTranslation_Dumper_YmlService()
    {
        return $this->services['translation.dumper.yml'] = new \Symfony\Component\Translation\Dumper\YamlFileDumper();
    }
    protected function getTranslation_ExtractorService()
    {
        $this->services['translation.extractor'] = $instance = new \Symfony\Component\Translation\Extractor\ChainExtractor();
        $instance->addExtractor('php', $this->get('translation.extractor.php'));
        $instance->addExtractor('twig', $this->get('twig.translation.extractor'));
        return $instance;
    }
    protected function getTranslation_Extractor_PhpService()
    {
        return $this->services['translation.extractor.php'] = new \Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor();
    }
    protected function getTranslation_LoaderService()
    {
        $a = $this->get('translation.loader.xliff');
        $this->services['translation.loader'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader();
        $instance->addLoader('php', $this->get('translation.loader.php'));
        $instance->addLoader('yml', $this->get('translation.loader.yml'));
        $instance->addLoader('xlf', $a);
        $instance->addLoader('xliff', $a);
        $instance->addLoader('po', $this->get('translation.loader.po'));
        $instance->addLoader('mo', $this->get('translation.loader.mo'));
        $instance->addLoader('ts', $this->get('translation.loader.qt'));
        $instance->addLoader('csv', $this->get('translation.loader.csv'));
        $instance->addLoader('res', $this->get('translation.loader.res'));
        $instance->addLoader('dat', $this->get('translation.loader.dat'));
        $instance->addLoader('ini', $this->get('translation.loader.ini'));
        $instance->addLoader('json', $this->get('translation.loader.json'));
        return $instance;
    }
    protected function getTranslation_Loader_CsvService()
    {
        return $this->services['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader();
    }
    protected function getTranslation_Loader_DatService()
    {
        return $this->services['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader();
    }
    protected function getTranslation_Loader_IniService()
    {
        return $this->services['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader();
    }
    protected function getTranslation_Loader_JsonService()
    {
        return $this->services['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader();
    }
    protected function getTranslation_Loader_MoService()
    {
        return $this->services['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader();
    }
    protected function getTranslation_Loader_PhpService()
    {
        return $this->services['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader();
    }
    protected function getTranslation_Loader_PoService()
    {
        return $this->services['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader();
    }
    protected function getTranslation_Loader_QtService()
    {
        return $this->services['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader();
    }
    protected function getTranslation_Loader_ResService()
    {
        return $this->services['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader();
    }
    protected function getTranslation_Loader_XliffService()
    {
        return $this->services['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader();
    }
    protected function getTranslation_Loader_YmlService()
    {
        return $this->services['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader();
    }
    protected function getTranslation_WriterService()
    {
        $this->services['translation.writer'] = $instance = new \Symfony\Component\Translation\Writer\TranslationWriter();
        $instance->addDumper('php', $this->get('translation.dumper.php'));
        $instance->addDumper('xlf', $this->get('translation.dumper.xliff'));
        $instance->addDumper('po', $this->get('translation.dumper.po'));
        $instance->addDumper('mo', $this->get('translation.dumper.mo'));
        $instance->addDumper('yml', $this->get('translation.dumper.yml'));
        $instance->addDumper('ts', $this->get('translation.dumper.qt'));
        $instance->addDumper('csv', $this->get('translation.dumper.csv'));
        $instance->addDumper('ini', $this->get('translation.dumper.ini'));
        $instance->addDumper('json', $this->get('translation.dumper.json'));
        $instance->addDumper('res', $this->get('translation.dumper.res'));
        return $instance;
    }
    protected function getTranslator_DefaultService()
    {
        $this->services['translator.default'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\Translator($this, new \Symfony\Component\Translation\MessageSelector(), array('translation.loader.php' => array(0 => 'php'), 'translation.loader.yml' => array(0 => 'yml'), 'translation.loader.xliff' => array(0 => 'xlf', 1 => 'xliff'), 'translation.loader.po' => array(0 => 'po'), 'translation.loader.mo' => array(0 => 'mo'), 'translation.loader.qt' => array(0 => 'ts'), 'translation.loader.csv' => array(0 => 'csv'), 'translation.loader.res' => array(0 => 'res'), 'translation.loader.dat' => array(0 => 'dat'), 'translation.loader.ini' => array(0 => 'ini'), 'translation.loader.json' => array(0 => 'json')), array('cache_dir' => (__DIR__.'/translations'), 'debug' => false, 'resource_files' => array('es' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.es.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.es.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.es.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.es.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.es.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.es.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.es.xliff')), 'cy' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf')), 'pl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pl.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.pl.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.pl.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pl.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pl.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.pl.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.pl.xliff'), 9 => ($this->targetDirs[3].'/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.pl.xliff'), 10 => ($this->targetDirs[3].'/vendor/symfony-cmf/routing-bundle/Resources/translations/CmfRoutingBundle.pl.xliff')), 'bg' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.bg.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.bg.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.bg.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.bg.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.bg.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.bg.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.bg.xliff')), 'fa' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fa.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.fa.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.fa.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fa.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.fa.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.fa.xliff')), 'mn' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf')), 'it' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.it.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.it.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.it.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.it.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.it.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.it.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.it.xliff'), 9 => ($this->targetDirs[3].'/vendor/symfony-cmf/routing-bundle/Resources/translations/CmfRoutingBundle.it.xliff')), 'hr' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.hr.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.hr.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.hr.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hr.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.hr.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/FOSUserBundle.hr.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.hr.xliff')), 'af' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf')), 'id' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.id.xlf')), 'az' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.az.xlf')), 'sr_Cyrl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Cyrl.xlf')), 'zh_TW' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf'), 1 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.zh_TW.xliff')), 'sk' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sk.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.sk.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.sk.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sk.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sk.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.sk.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.sk.xliff')), 'fr' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fr.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.fr.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.fr.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fr.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.fr.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/FOSUserBundle.fr.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.fr.xliff'), 9 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.fr.xliff'), 10 => ($this->targetDirs[3].'/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.fr.xliff'), 11 => ($this->targetDirs[3].'/vendor/sonata-project/seo-bundle/Resources/translations/SonataSeoBundle.fr.xliff'), 12 => ($this->targetDirs[3].'/vendor/symfony-cmf/routing-bundle/Resources/translations/CmfRoutingBundle.fr.xliff')), 'fi' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf'), 2 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.fi.yml'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.fi.yml'), 4 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fi.xliff')), 'sv' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sv.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.sv.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.sv.yml')), 'en' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.en.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.en.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.en.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.en.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.en.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/FOSUserBundle.en.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.en.xliff'), 9 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.en.xliff'), 10 => ($this->targetDirs[3].'/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.en.xliff'), 11 => ($this->targetDirs[3].'/vendor/sonata-project/seo-bundle/Resources/translations/SonataSeoBundle.en.xliff'), 12 => ($this->targetDirs[3].'/vendor/symfony-cmf/routing-bundle/Resources/translations/CmfRoutingBundle.en.xliff')), 'cs' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.cs.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.cs.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.cs.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.cs.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.cs.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.cs.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.cs.xliff')), 'gl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.gl.xlf')), 'de' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.de.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.de.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.de.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.de.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.de.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.de.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.de.xliff'), 9 => ($this->targetDirs[3].'/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.de.xliff'), 10 => ($this->targetDirs[3].'/vendor/symfony-cmf/routing-bundle/Resources/translations/CmfRoutingBundle.de.xliff')), 'pt' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf'), 2 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.pt.yml'), 3 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt.xliff'), 4 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pt.xliff'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.pt.xliff')), 'sl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sl.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.sl.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.sl.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sl.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sl.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.sl.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.sl.xliff'), 9 => ($this->targetDirs[3].'/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.sl.xliff')), 'pt_BR' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_BR.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.pt_BR.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.pt_BR.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt_BR.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pt_BR.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.pt_BR.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.pt_BR.xliff')), 'hu' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.hu.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.hu.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.hu.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hu.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.hu.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.hu.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.hu.xliff')), 'da' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.da.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.da.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.da.yml')), 'hy' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf')), 'tr' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.tr.xlf'), 2 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.tr.yml'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.tr.yml')), 'zh_CN' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.zh_CN.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.zh_CN.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.zh_CN.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.zh_CN.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.zh_CN.xliff')), 'ja' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ja.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.ja.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.ja.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ja.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ja.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.ja.xliff')), 'eu' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf'), 2 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.eu.yml'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.eu.yml'), 4 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.eu.xliff'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.eu.xliff')), 'uk' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf'), 2 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.uk.yml'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.uk.yml'), 4 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.uk.xliff'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.uk.xliff')), 'el' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.el.xlf')), 'et' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf'), 2 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.et.yml')), 'sq' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf')), 'ru' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ru.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.ru.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.ru.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ru.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ru.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.ru.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.ru.xliff'), 9 => ($this->targetDirs[3].'/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.ru.xliff'), 10 => ($this->targetDirs[2].'/Resources/translations/FOSUserBundle.ru.yml'), 11 => ($this->targetDirs[2].'/Resources/translations/messages.ru.yml'), 12 => ($this->targetDirs[2].'/Resources/translations/SonataMediaBundle.ru.yml'), 13 => ($this->targetDirs[2].'/Resources/translations/soap.ru.yml'), 14 => ($this->targetDirs[2].'/Resources/translations/SonataUserBundle.ru.yml'), 15 => ($this->targetDirs[2].'/Resources/translations/SonataAdminBundle.ru.yml')), 'vi' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.vi.xlf')), 'nl' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.nl.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.nl.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.nl.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.nl.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.nl.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.nl.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.nl.xliff'), 9 => ($this->targetDirs[3].'/vendor/sonata-project/seo-bundle/Resources/translations/SonataSeoBundle.nl.xliff'), 10 => ($this->targetDirs[3].'/vendor/symfony-cmf/routing-bundle/Resources/translations/CmfRoutingBundle.nl.xliff')), 'ro' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ro.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.ro.yml'), 4 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ro.xliff'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ro.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.ro.xliff')), 'no' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.no.xlf')), 'sr_Latn' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Latn.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.sr_Latn.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.sr_Latn.yml')), 'ca' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ca.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.ca.yml'), 4 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ca.xliff'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ca.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.ca.xliff')), 'th' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.th.xlf')), 'lb' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.lb.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.lb.yml'), 4 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lb.xliff'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.lb.xliff')), 'nb' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nb.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nb.xlf')), 'he' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.he.xlf')), 'lt' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.lt.xlf'), 3 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.lt.yml'), 4 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.lt.yml'), 5 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lt.xliff'), 6 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.lt.xliff'), 7 => ($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/translations/SonataUserBundle.lt.xliff'), 8 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.lt.xliff')), 'ar' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf'), 1 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf'), 2 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ar.xlf'), 3 => ($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ar.xliff'), 4 => ($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ar.xliff')), 'lv' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf'), 1 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/validators.lv.yml'), 2 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.lv.yml')), 'ua' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ua.xlf')), 'pt_PT' => array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_PT.xlf'), 1 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/translations/FOSUserBundle.pt_PT.yml')))), array());
        $instance->setFallbackLocales(array(0 => 'en'));
        return $instance;
    }
    protected function getTranslatorListenerService()
    {
        return $this->services['translator_listener'] = new \Symfony\Component\HttpKernel\EventListener\TranslatorListener($this->get('translator.default'), $this->get('request_stack'));
    }
    protected function getTwigService()
    {
        $a = $this->get('request_stack');
        $b = $this->get('fragment.handler');
        $c = $this->get('markdown.parser');
        $d = new \Symfony\Bridge\Twig\Extension\HttpFoundationExtension($a);
        $e = new \Knp\Bundle\MarkdownBundle\Helper\MarkdownHelper($c);
        $e->addParser(new \Knp\Bundle\MarkdownBundle\Parser\Preset\Min(), 'min');
        $e->addParser(new \Knp\Bundle\MarkdownBundle\Parser\Preset\Light(), 'light');
        $e->addParser(new \Knp\Bundle\MarkdownBundle\Parser\Preset\Medium(), 'medium');
        $e->addParser($c, 'default');
        $e->addParser(new \Knp\Bundle\MarkdownBundle\Parser\Preset\Flavored(), 'flavored');
        $f = new \Symfony\Bridge\Twig\AppVariable();
        $f->setEnvironment('prod');
        $f->setDebug(false);
        if ($this->has('security.token_storage')) {
            $f->setTokenStorage($this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        if ($this->has('request_stack')) {
            $f->setRequestStack($a);
        }
        $f->setContainer($this);
        $this->services['twig'] = $instance = new \Twig_Environment($this->get('twig.loader'), array('debug' => false, 'strict_variables' => false, 'date' => array('timezone' => 'Europe/Moscow', 'format' => 'F j, Y H:i', 'interval_format' => '%d days'), 'exception_controller' => 'twig.controller.exception:showAction', 'form_themes' => array(0 => 'form_div_layout.html.twig', 1 => 'AmgPageBundle:Admin:Form/page_tree_widget.html.twig', 2 => ':Admin:Form/hyperlink.html.twig', 3 => ':Admin:Form/address.html.twig', 4 => ':Admin:Form/copy_content_button.html.twig', 5 => ':Admin:Form/geopoint.html.twig', 6 => ':Admin:Form/construction_data_text.html.twig', 7 => ':Admin:Form/construction_data_choice.html.twig', 8 => ':Admin:Form/construction_data_geo_point.html.twig', 9 => ':Admin:Form/construction_data_geo_polygon.html.twig', 10 => ':Admin:Form/menu_tree_widget.html.twig', 11 => ':Admin:Form/media_category_tree.html.twig', 12 => ':Admin:Form/media_collection.html.twig', 13 => ':Admin:Form/media_list.html.twig', 14 => ':Admin:Form/secret_link.html.twig', 15 => ':Admin:Form/image_type_extension.html.twig', 16 => ':Admin:Form/collection_list.html.twig', 17 => 'SonataCoreBundle:Form:datepicker.html.twig', 18 => 'SonataMediaBundle:Form:media_widgets.html.twig', 19 => ':Admin:Form/gif_generator.html.twig', 20 => ':Form:re_captcha.html.twig'), 'autoescape' => 'filename', 'cache' => (__DIR__.'/twig'), 'charset' => 'UTF-8', 'paths' => array(), 'number_format' => array('decimals' => 0, 'decimal_point' => '.', 'thousands_separator' => ',')));
        $instance->addExtension($this->get('twig.block'));
        $instance->addExtension($this->get('twig.diff'));
        $instance->addExtension($this->get('twig.entity'));
        $instance->addExtension($this->get('twig.breadcrumbs'));
        $instance->addExtension($this->get('twig.embedder'));
        $instance->addExtension($this->get('twig.media_helper'));
        $instance->addExtension($this->get('twig.construction'));
        $instance->addExtension($this->get('twig.distance'));
        $instance->addExtension($this->get('twig.sonata_admin'));
        $instance->addExtension($this->get('twig.html'));
        $instance->addExtension($this->get('twig.url_hash_utm_fix'));
        $instance->addExtension($this->get('twig.newsletter_post_text_crop'));
        $instance->addExtension($this->get('twig.darken_hex'));
        $instance->addExtension($this->get('twig.image_generator'));
        $instance->addExtension($this->get('twig.entity_manager_helper'));
        $instance->addExtension($this->get('twig.extension.sortbyfield'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\LogoutUrlExtension($this->get('security.logout_url_generator')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\SecurityExtension($this->get('security.authorization_checker', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension($this->get('translator.default')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\AssetExtension($this->get('assets.packages'), $d));
        $instance->addExtension(new \Symfony\Bundle\TwigBundle\Extension\ActionsExtension($b));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension(NULL, $this->targetDirs[2], 'UTF-8'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\RoutingExtension($this->get('cmf_routing.router')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\StopwatchExtension($this->get('debug.stopwatch', ContainerInterface::NULL_ON_INVALID_REFERENCE), false));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpKernelExtension($b));
        $instance->addExtension($d);
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\FormExtension(new \Symfony\Bridge\Twig\Form\TwigRenderer(new \Symfony\Bridge\Twig\Form\TwigRendererEngine(array(0 => 'IvoryCKEditorBundle:Form:ckeditor_widget.html.twig', 1 => 'form_div_layout.html.twig', 2 => 'AmgPageBundle:Admin:Form/page_tree_widget.html.twig', 3 => ':Admin:Form/hyperlink.html.twig', 4 => ':Admin:Form/address.html.twig', 5 => ':Admin:Form/copy_content_button.html.twig', 6 => ':Admin:Form/geopoint.html.twig', 7 => ':Admin:Form/construction_data_text.html.twig', 8 => ':Admin:Form/construction_data_choice.html.twig', 9 => ':Admin:Form/construction_data_geo_point.html.twig', 10 => ':Admin:Form/construction_data_geo_polygon.html.twig', 11 => ':Admin:Form/menu_tree_widget.html.twig', 12 => ':Admin:Form/media_category_tree.html.twig', 13 => ':Admin:Form/media_collection.html.twig', 14 => ':Admin:Form/media_list.html.twig', 15 => ':Admin:Form/secret_link.html.twig', 16 => ':Admin:Form/image_type_extension.html.twig', 17 => ':Admin:Form/collection_list.html.twig', 18 => 'SonataCoreBundle:Form:datepicker.html.twig', 19 => 'SonataMediaBundle:Form:media_widgets.html.twig', 20 => ':Admin:Form/gif_generator.html.twig', 21 => ':Form:re_captcha.html.twig', 22 => 'SonataUserBundle:Form:form_admin_fields.html.twig', 23 => 'LiipImagineBundle:Form:form_div_layout.html.twig')), $this->get('security.csrf.token_manager', ContainerInterface::NULL_ON_INVALID_REFERENCE))));
        $instance->addExtension(new \Symfony\Bundle\AsseticBundle\Twig\AsseticExtension($this->get('assetic.asset_factory'), $this->get('templating.name_parser'), false, array(), array(), new \Symfony\Bundle\AsseticBundle\DefaultValueSupplier($this)));
        $instance->addExtension(new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
        $instance->addExtension($this->get('sonata.core.flashmessage.twig.extension'));
        $instance->addExtension($this->get('sonata.core.twig.extension.wrapping'));
        $instance->addExtension($this->get('sonata.core.twig.extension.text'));
        $instance->addExtension($this->get('sonata.core.twig.status_extension'));
        $instance->addExtension($this->get('sonata.core.twig.template_extension'));
        $instance->addExtension(new \Sonata\BlockBundle\Twig\Extension\BlockExtension($this->get('sonata.block.templating.helper')));
        $instance->addExtension(new \Knp\Menu\Twig\MenuExtension($this->get('knp_menu.helper')));
        $instance->addExtension($this->get('sonata.admin.twig.extension'));
        $instance->addExtension($this->get('sonata.media.twig.extension'));
        $instance->addExtension(new \Sonata\IntlBundle\Twig\Extension\LocaleExtension($this->get('sonata.intl.templating.helper.locale')));
        $instance->addExtension(new \Sonata\IntlBundle\Twig\Extension\NumberExtension($this->get('sonata.intl.templating.helper.number')));
        $instance->addExtension(new \Sonata\IntlBundle\Twig\Extension\DateTimeExtension($this->get('sonata.intl.templating.helper.datetime')));
        $instance->addExtension(new \JMS\Serializer\Twig\SerializerExtension($this->get('jms_serializer')));
        $instance->addExtension(new \Knp\Bundle\MarkdownBundle\Twig\Extension\MarkdownTwigExtension($e));
        $instance->addExtension($this->get('ivory_ck_editor.twig_extension'));
        $instance->addExtension(new \Sonata\FormatterBundle\Twig\Extension\TextFormatterExtension($this->get('sonata.formatter.pool')));
        $instance->addExtension(new \Sonata\SeoBundle\Twig\Extension\SeoExtension($this->get('sonata.seo.page.default'), 'UTF-8'));
        $instance->addExtension($this->get('amg_page.twig.page_extension'));
        $instance->addExtension($this->get('amg_page.twig.page_menu_extension'));
        $instance->addExtension(new \Liip\ImagineBundle\Templating\ImagineExtension($this->get('liip_imagine.cache.manager')));
        $instance->addExtension($this->get('amg_tag.twig.tag'));
        $instance->addExtension($this->get('app.mobile.twig.embedder'));
        $instance->addGlobal('app', $f);
        $instance->addGlobal('full_frontend', true);
        $instance->addGlobal('new_design', false);
        $instance->addGlobal('sendpulse_website_id', 64683);
        $instance->addGlobal('sendsay_account', 'x_1682426891713939');
        $instance->addGlobal('noindex', false);
        $instance->addGlobal('gg_recaptcha_site_key', '6LfciQ0eAAAAACmU275GNEwq3sRqZfawqjY1rtCs');
        $instance->addGlobal('yandex_captcha_site_key', 'pa5HzaIaNvURE823drHhexcxVX7N8mVEY8s8uCFu');
        $instance->addGlobal('sonata_block', $this->get('sonata.block.twig.global'));
        $instance->addGlobal('sonata_user', $this->get('sonata.user.twig.global'));
        $instance->addGlobal('sonata_media', $this->get('sonata.media.twig.global'));
        call_user_func(array(new \Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator('F j, Y H:i', '%d days', 'Europe/Moscow', 0, '.', ','), 'configure'), $instance);
        return $instance;
    }
    protected function getTwig_BlockService()
    {
        $this->services['twig.block'] = $instance = new \AppBundle\Twig\BlockTwigExtension();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getTwig_BreadcrumbsService()
    {
        $this->services['twig.breadcrumbs'] = $instance = new \AppBundle\Menu\Twig\BreadcrumbsExtension($this->get('knp_menu.matcher'), $this->get('knp_menu.menu_provider'), $this->get('snc_redis.default'));
        $instance->setRequestStack($this->get('request_stack'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        return $instance;
    }
    protected function getTwig_ConstructionService()
    {
        return $this->services['twig.construction'] = new \AppBundle\Twig\ConstructionObjectTwigExtension($this->get('doctrine.orm.default_entity_manager'));
    }
    protected function getTwig_Controller_ExceptionService()
    {
        return $this->services['twig.controller.exception'] = new \Symfony\Bundle\TwigBundle\Controller\ExceptionController($this->get('twig'), false);
    }
    protected function getTwig_Controller_PreviewErrorService()
    {
        return $this->services['twig.controller.preview_error'] = new \Symfony\Bundle\TwigBundle\Controller\PreviewErrorController($this->get('http_kernel'), 'twig.controller.exception:showAction');
    }
    protected function getTwig_DarkenHexService()
    {
        return $this->services['twig.darken_hex'] = new \AppBundle\Twig\DarkenHexExtension();
    }
    protected function getTwig_DiffService()
    {
        return $this->services['twig.diff'] = new \AppBundle\Twig\DiffTwigExtension($this->get('sonata.admin.pool'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getTwig_DistanceService()
    {
        return $this->services['twig.distance'] = new \AppBundle\Twig\DistanceTwigExtension();
    }
    protected function getTwig_EmbedderService()
    {
        $this->services['twig.embedder'] = $instance = new \AppBundle\Twig\EmbedderTwigExtension();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getTwig_EntityService()
    {
        return $this->services['twig.entity'] = new \AppBundle\Twig\EntityTwigExtension($this->get('app.entity_url_generator'));
    }
    protected function getTwig_EntityManagerHelperService()
    {
        $this->services['twig.entity_manager_helper'] = $instance = new \AppBundle\Twig\EntityManagerTwigExtension();
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        return $instance;
    }
    protected function getTwig_ExceptionListenerService()
    {
        return $this->services['twig.exception_listener'] = new \Symfony\Component\HttpKernel\EventListener\ExceptionListener('twig.controller.exception:showAction', $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getTwig_Extension_SortbyfieldService()
    {
        return $this->services['twig.extension.sortbyfield'] = new \Snilius\Twig\SortByFieldExtension();
    }
    protected function getTwig_HtmlService()
    {
        return $this->services['twig.html'] = new \AppBundle\Twig\HtmlTwigExtension();
    }
    protected function getTwig_ImageGeneratorService()
    {
        return $this->services['twig.image_generator'] = new \AppBundle\Twig\ImageGeneratorExtension(($this->targetDirs[2].'/../web'), '/uploads/media');
    }
    protected function getTwig_LoaderService()
    {
        $this->services['twig.loader'] = $instance = new \Symfony\Bundle\TwigBundle\Loader\FilesystemLoader($this->get('templating.locator'), $this->get('templating.name_parser'));
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views'), 'Framework');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views'), 'Security');
        $instance->addPath(($this->targetDirs[2].'/Resources/TwigBundle/views'), 'Twig');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views'), 'Twig');
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/swiftmailer-bundle/Resources/views'), 'Swiftmailer');
        $instance->addPath(($this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/Resources/views'), 'Doctrine');
        $instance->addPath(($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/views'), 'FOSUser');
        $instance->addPath(($this->targetDirs[3].'/vendor/sonata-project/core-bundle/Resources/views'), 'SonataCore');
        $instance->addPath(($this->targetDirs[2].'/Resources/SonataBlockBundle/views'), 'SonataBlock');
        $instance->addPath(($this->targetDirs[3].'/vendor/sonata-project/block-bundle/Resources/views'), 'SonataBlock');
        $instance->addPath(($this->targetDirs[2].'/Resources/SonataDoctrineORMAdminBundle/views'), 'SonataDoctrineORMAdmin');
        $instance->addPath(($this->targetDirs[3].'/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/views'), 'SonataDoctrineORMAdmin');
        $instance->addPath(($this->targetDirs[3].'/vendor/sonata-project/admin-bundle/Resources/views'), 'SonataAdmin');
        $instance->addPath(($this->targetDirs[2].'/Resources/SonataUserBundle/views'), 'SonataUser');
        $instance->addPath(($this->targetDirs[3].'/vendor/sonata-project/user-bundle/Resources/views'), 'SonataUser');
        $instance->addPath(($this->targetDirs[2].'/Resources/SonataMediaBundle/views'), 'SonataMedia');
        $instance->addPath(($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/views'), 'SonataMedia');
        $instance->addPath(($this->targetDirs[2].'/Resources/ApplicationSonataUserBundle/views'), 'ApplicationSonataUser');
        $instance->addPath(($this->targetDirs[3].'/src/Application/Sonata/UserBundle/Resources/views'), 'ApplicationSonataUser');
        $instance->addPath(($this->targetDirs[3].'/vendor/sonata-project/intl-bundle/Resources/views'), 'SonataIntl');
        $instance->addPath(($this->targetDirs[3].'/src/Application/Sonata/MediaBundle/Resources/views'), 'ApplicationSonataMedia');
        $instance->addPath(($this->targetDirs[3].'/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/Resources/views'), 'SimpleThingsEntityAudit');
        $instance->addPath(($this->targetDirs[3].'/vendor/egeloen/ckeditor-bundle/Resources/views'), 'IvoryCKEditor');
        $instance->addPath(($this->targetDirs[3].'/vendor/sonata-project/formatter-bundle/Resources/views'), 'SonataFormatter');
        $instance->addPath(($this->targetDirs[3].'/vendor/sonata-project/seo-bundle/Resources/views'), 'SonataSeo');
        $instance->addPath(($this->targetDirs[3].'/src/Amg/Bundle/PageBundle/Resources/views'), 'AmgPage');
        $instance->addPath(($this->targetDirs[3].'/src/Amg/Bundle/AdminBundle/Resources/views'), 'AmgAdmin');
        $instance->addPath(($this->targetDirs[3].'/vendor/friendsofsymfony/elastica-bundle/Resources/views'), 'FOSElastica');
        $instance->addPath(($this->targetDirs[3].'/vendor/liip/imagine-bundle/Liip/ImagineBundle/Resources/views'), 'LiipImagine');
        $instance->addPath(($this->targetDirs[3].'/src/Amg/Bundle/TagBundle/Resources/views'), 'AmgTag');
        $instance->addPath(($this->targetDirs[3].'/vendor/snc/redis-bundle/Snc/RedisBundle/Resources/views'), 'SncRedis');
        $instance->addPath(($this->targetDirs[3].'/vendor/alexander_nemanov/stroi-mobile/Resources/views'), 'StroiMobile');
        $instance->addPath(($this->targetDirs[2].'/Resources/views'));
        $instance->addPath(($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form'));
        $instance->addPath(($this->targetDirs[3].'/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views'));
        return $instance;
    }
    protected function getTwig_MediaHelperService()
    {
        $this->services['twig.media_helper'] = $instance = new \AppBundle\Twig\MediaHelperExtension();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getTwig_NewsletterPostTextCropService()
    {
        return $this->services['twig.newsletter_post_text_crop'] = new \AppBundle\Twig\NewsletterPostTextCropExtension();
    }
    protected function getTwig_ProfileService()
    {
        return $this->services['twig.profile'] = new \Twig_Profiler_Profile();
    }
    protected function getTwig_SonataAdminService()
    {
        $this->services['twig.sonata_admin'] = $instance = new \AppBundle\Twig\AppSonataAdminExtension();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getTwig_Translation_ExtractorService()
    {
        return $this->services['twig.translation.extractor'] = new \Symfony\Bridge\Twig\Translation\TwigExtractor($this->get('twig'));
    }
    protected function getTwig_UrlHashUtmFixService()
    {
        return $this->services['twig.url_hash_utm_fix'] = new \AppBundle\Twig\UrlHashUtmFixExtension();
    }
    protected function getUriSignerService()
    {
        return $this->services['uri_signer'] = new \Symfony\Component\HttpKernel\UriSigner('dfloiuygHJNKL-----------3hfdasfghghasdhfkfffffffffff');
    }
    protected function getValidatorService()
    {
        return $this->services['validator'] = $this->get('validator.builder')->getValidator();
    }
    protected function getValidator_BuilderService()
    {
        $this->services['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();
        $instance->setConstraintValidatorFactory($this->get('validator.validator_factory'));
        $instance->setTranslator($this->get('translator.default'));
        $instance->setTranslationDomain('validators');
        $instance->addXmlMappings(array(0 => ($this->targetDirs[3].'/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml'), 1 => ($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/Resources/config/validation.xml'), 2 => ($this->targetDirs[3].'/vendor/sonata-project/media-bundle/Resources/config/validation.xml'), 3 => ($this->targetDirs[3].'/vendor/symfony-cmf/routing-bundle/Resources/config/validation.xml')));
        $instance->addYamlMappings(array(0 => ($this->targetDirs[3].'/src/AppBundle/Resources/config/validation.yml')));
        $instance->enableAnnotationMapping($this->get('annotation_reader'));
        $instance->addMethodMapping('loadValidatorMetadata');
        $instance->addObjectInitializers(array(0 => $this->get('doctrine.orm.validator_initializer'), 1 => new \FOS\UserBundle\Validator\Initializer($this->get('fos_user.user_manager'))));
        $instance->addXmlMapping(($this->targetDirs[3].'/vendor/friendsofsymfony/user-bundle/FOS/UserBundle/DependencyInjection/Compiler/../../Resources/config/storage-validation/orm.xml'));
        return $instance;
    }
    protected function getValidator_EmailService()
    {
        return $this->services['validator.email'] = new \Symfony\Component\Validator\Constraints\EmailValidator(false);
    }
    protected function getValidator_ExpressionService()
    {
        return $this->services['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator($this->get('property_accessor'));
    }
    protected function getVideoListService()
    {
        $this->services['video_list'] = $instance = new \AppBundle\Block\VideoListBlock('video_list', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setRequestStack($this->get('request_stack'));
        return $instance;
    }
    protected function getVideoPicksService()
    {
        $this->services['video_picks'] = $instance = new \AppBundle\Block\VideoPicksBlock('video_picks', $this->get('templating'));
        $instance->setEntityManager($this->get('doctrine.orm.default_entity_manager'));
        $instance->setModelManager($this->get('sonata.media.admin.media.manager'));
        $instance->setRequestStack($this->get('request_stack'));
        return $instance;
    }
    protected function synchronizeRequestService()
    {
        if ($this->initialized('monolog.handler.main.not_found_strategy')) {
            $this->get('monolog.handler.main.not_found_strategy')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        if ($this->initialized('fos_elastica.paginator.subscriber')) {
            $this->get('fos_elastica.paginator.subscriber')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
    }
    protected function getAnnotations_ReaderService()
    {
        return $this->services['annotations.reader'] = new \Doctrine\Common\Annotations\AnnotationReader();
    }
    protected function getAssetic_AssetFactoryService()
    {
        $this->services['assetic.asset_factory'] = $instance = new \Symfony\Bundle\AsseticBundle\Factory\AssetFactory($this->get('kernel'), $this, $this->getParameterBag(), ($this->targetDirs[2].'/../web'), false);
        $instance->addWorker(new \Assetic\Factory\Worker\EnsureFilterWorker('/\\.less$/', $this->get('assetic.filter.lessphp')));
        return $instance;
    }
    protected function getControllerNameConverterService()
    {
        return $this->services['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser($this->get('kernel'));
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_AdministrativeUnitService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.administrative_unit'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\AdministrativeUnit', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_ConstructionService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.construction'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\Construction', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_DecisionDocumentService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.decision_document'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\DecisionDocument', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_DraftDocumentService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.draft_document'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\DraftDocument', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_GalleryService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.gallery'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\Gallery', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_InfographicsService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.infographics'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\Infographics', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_LawDocumentService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.law_document'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\LawDocument', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_MetroService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.metro'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\MetroStation', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_PageService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.page'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\Page', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_PostService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.post'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\Post', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_RoadService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.road'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\Road', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_SubordinatePublicationService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.subordinate_publication'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\Post', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosElastica_ElasticaToModelTransformer_App_VideoService()
    {
        $this->services['fos_elastica.elastica_to_model_transformer.app.video'] = $instance = new \FOS\ElasticaBundle\Doctrine\ORM\ElasticaToModelTransformer($this->get('doctrine'), 'AppBundle\\Entity\\Video', array('ignore_missing' => true, 'hydrate' => true, 'query_builder_method' => 'createQueryBuilder', 'identifier' => 'id'));
        $instance->setPropertyAccessor($this->get('fos_elastica.property_accessor'));
        return $instance;
    }
    protected function getFosUser_EntityManagerService()
    {
        return $this->services['fos_user.entity_manager'] = $this->get('doctrine')->getManager(NULL);
    }
    protected function getJmsSerializer_MetadataFactoryService()
    {
        $this->services['jms_serializer.metadata_factory'] = $instance = new \Metadata\MetadataFactory(new \Metadata\Driver\LazyLoadingDriver($this, 'jms_serializer.metadata_driver'), 'Metadata\\ClassHierarchyMetadata', false);
        $instance->setCache(new \Metadata\Cache\FileCache((__DIR__.'/jms_serializer')));
        return $instance;
    }
    protected function getJmsSerializer_UnserializeObjectConstructorService()
    {
        return $this->services['jms_serializer.unserialize_object_constructor'] = new \JMS\Serializer\Construction\UnserializeObjectConstructor();
    }
    protected function getKnpMenu_HelperService()
    {
        return $this->services['knp_menu.helper'] = new \Knp\Menu\Twig\Helper($this->get('knp_menu.renderer_provider'), $this->get('knp_menu.menu_provider'));
    }
    protected function getMonolog_Handler_Swift_MailPrototypeService($lazyLoad = true)
    {
        $this->services['monolog.handler.swift.mail_prototype'] = $instance = $this->get('swiftmailer.mailer.default')->createMessage();
        $instance->setFrom('info-stroi@mos.ru');
        $instance->setTo(array(0 => 'stroi@demo-room.ru'));
        $instance->setSubject('Stroi error');
        return $instance;
    }
    protected function getRouter_DefaultService()
    {
        return $this->services['router.default'] = new \Symfony\Bundle\FrameworkBundle\Routing\Router($this, ($this->targetDirs[2].'/config/routing.yml'), array('cache_dir' => __DIR__, 'debug' => false, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper', 'generator_cache_class' => 'appProdUrlGenerator', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper', 'matcher_cache_class' => 'appProdUrlMatcher', 'strict_requirements' => NULL), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getRouter_RequestContextService()
    {
        return $this->services['router.request_context'] = new \Symfony\Component\Routing\RequestContext('', 'GET', 'stroi.mos.ru', 'https', 80, 443);
    }
    protected function getSecurity_Access_DecisionManagerService()
    {
        $a = $this->get('security.role_hierarchy');
        $b = $this->get('security.authentication.trust_resolver');
        return $this->services['security.access.decision_manager'] = new \Symfony\Component\Security\Core\Authorization\AccessDecisionManager(array(0 => new \Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter($a), 1 => new \Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter(new \Symfony\Component\Security\Core\Authorization\ExpressionLanguage(), $b, $a), 2 => new \Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter($b)), 'affirmative', false, true);
    }
    protected function getSecurity_AccessListenerService()
    {
        return $this->services['security.access_listener'] = new \Symfony\Component\Security\Http\Firewall\AccessListener($this->get('security.token_storage'), $this->get('security.access.decision_manager'), $this->get('security.access_map'), $this->get('security.authentication.manager'));
    }
    protected function getSecurity_AccessMapService()
    {
        $this->services['security.access_map'] = $instance = new \Symfony\Component\Security\Http\AccessMap();
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/efconnect'), array(0 => 'ROLE_USER'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/elfinder'), array(0 => 'ROLE_USER'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/login$'), array(0 => 'IS_AUTHENTICATED_ANONYMOUSLY'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/logout$'), array(0 => 'IS_AUTHENTICATED_ANONYMOUSLY'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/login_check$'), array(0 => 'IS_AUTHENTICATED_ANONYMOUSLY'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/admin/'), array(0 => 'ROLE_ADMIN', 1 => 'ROLE_SONATA_ADMIN'), NULL);
        $instance->add(new \Symfony\Component\HttpFoundation\RequestMatcher('^/.*'), array(0 => 'IS_AUTHENTICATED_ANONYMOUSLY'), NULL);
        return $instance;
    }
    protected function getSecurity_Authentication_ManagerService()
    {
        $a = $this->get('security.user_checker');
        $this->services['security.authentication.manager'] = $instance = new \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager(array(0 => new \Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider($this->get('fos_user.user_manager'), $a, 'admin', $this->get('security.encoder_factory'), true), 1 => new \Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider($a, 'dfloiuygHJNKL-----------3hfdasfghghasdhfkfffffffffff', 'admin'), 2 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('67a35ce69de908.18988818'), 3 => new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider('67a35ce69de908.18988818')), true);
        $instance->setEventDispatcher($this->get('event_dispatcher'));
        return $instance;
    }
    protected function getSecurity_Authentication_SessionStrategyService()
    {
        return $this->services['security.authentication.session_strategy'] = new \Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy('migrate');
    }
    protected function getSecurity_Authentication_TrustResolverService()
    {
        return $this->services['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver('Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken', 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken');
    }
    protected function getSecurity_ChannelListenerService()
    {
        return $this->services['security.channel_listener'] = new \Symfony\Component\Security\Http\Firewall\ChannelListener($this->get('security.access_map'), new \Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint(80, 443), $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSecurity_ContextListener_0Service()
    {
        return $this->services['security.context_listener.0'] = new \Symfony\Component\Security\Http\Firewall\ContextListener($this->get('security.token_storage'), array(0 => $this->get('fos_user.user_manager')), 'user', $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSecurity_HttpUtilsService()
    {
        $a = $this->get('cmf_routing.router', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        return $this->services['security.http_utils'] = new \Symfony\Component\Security\Http\HttpUtils($a, $a);
    }
    protected function getSecurity_LogoutUrlGeneratorService()
    {
        $this->services['security.logout_url_generator'] = $instance = new \Symfony\Component\Security\Http\Logout\LogoutUrlGenerator($this->get('request_stack', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('cmf_routing.router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.token_storage', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->registerListener('admin', '/admin/logout', 'logout', '_csrf_token', NULL);
        return $instance;
    }
    protected function getSecurity_RoleHierarchyService()
    {
        return $this->services['security.role_hierarchy'] = new \Symfony\Component\Security\Core\Role\RoleHierarchy(array('ROLE_ADMIN' => array(0 => 'ROLE_USER', 1 => 'ROLE_SONATA_ADMIN'), 'ROLE_SUPER_ADMIN' => array(0 => 'ROLE_ADMIN', 1 => 'ROLE_ALLOWED_TO_SWITCH', 2 => 'ROLE_NOTIFICATION_SENDER'), 'ROLE_VIP_JOURNALIST' => array(0 => 'ROLE_JOURNALIST'), 'ROLE_JOURNALIST' => array(), 'ROLE_EVENT_MODERATOR' => array(), 'ROLE_NOTIFICATION_SENDER' => array()));
    }
    protected function getSecurity_UserCheckerService()
    {
        return $this->services['security.user_checker'] = new \Symfony\Component\Security\Core\User\UserChecker();
    }
    protected function getSession_Storage_MetadataBagService()
    {
        return $this->services['session.storage.metadata_bag'] = new \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag('_sf2_meta', '0');
    }
    protected function getSonata_Block_ManagerService()
    {
        $this->services['sonata.block.manager'] = $instance = new \Sonata\BlockBundle\Block\BlockServiceManager($this, false, $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->add('post_list', 'post_list', array(0 => 'cms'));
        $instance->add('last_posts', 'last_posts', array(0 => 'cms'));
        $instance->add('news_of_the_day', 'news_of_the_day', array(0 => 'cms'));
        $instance->add('animated_banner', 'animated_banner', array(0 => 'cms'));
        $instance->add('homepage_news', 'homepage_news', array(0 => 'cms'));
        $instance->add('more_like_this', 'more_like_this', array(0 => 'cms'));
        $instance->add('gallery_list', 'gallery_list', array(0 => 'cms'));
        $instance->add('video_list', 'video_list', array(0 => 'cms'));
        $instance->add('metro_vitdeo_tour', 'metro_vitdeo_tour', array(0 => 'cms'));
        $instance->add('infographics_list', 'infographics_list', array(0 => 'cms'));
        $instance->add('gallery_pick', 'gallery_pick', array(0 => 'cms'));
        $instance->add('video_picks', 'video_picks', array(0 => 'cms'));
        $instance->add('infographics_picks', 'infographics_picks', array(0 => 'cms'));
        $instance->add('rubrics_list', 'rubrics_list', array(0 => 'cms'));
        $instance->add('document_list', 'document_list', array(0 => 'cms'));
        $instance->add('construction_list', 'construction_list', array(0 => 'cms'));
        $instance->add('organization_list', 'organization_list', array(0 => 'cms'));
        $instance->add('contact_person_list', 'contact_person_list', array(0 => 'cms'));
        $instance->add('recent_page', 'recent_page', array(0 => 'cms'));
        $instance->add('metro_constructed_stations_block', 'metro_constructed_stations_block', array(0 => 'cms', 1 => 'custom'));
        $instance->add('hot_news_block', 'hot_news_block', array(0 => 'cms', 1 => 'custom'));
        $instance->add('banner_announcements_dk', 'banner_announcements_dk', array(0 => 'cms', 1 => 'custom'));
        $instance->add('service_banner', 'service_banner', array(0 => 'cms', 1 => 'custom'));
        $instance->add('road_construction_map_banner', 'road_construction_map_banner', array(0 => 'cms', 1 => 'custom'));
        $instance->add('road_interchange_banner', 'road_interchange_banner', array(0 => 'cms', 1 => 'custom'));
        $instance->add('destruction_banner', 'destruction_banner', array(0 => 'cms', 1 => 'custom'));
        $instance->add('renovation_banner', 'renovation_banner', array(0 => 'cms', 1 => 'custom'));
        $instance->add('header_search_filters', 'header_search_filters', array(0 => 'cms'));
        $instance->add('announcement', 'announcement', array(0 => 'cms'));
        $instance->add('simple_template', 'simple_template', array(0 => 'cms'));
        $instance->add('subordinate_homepage_posts', 'subordinate_homepage_posts', array(0 => 'cms'));
        $instance->add('subordinate_smi', 'subordinate_smi', array(0 => 'cms'));
        $instance->add('subordinate_media', 'subordinate_media', array(0 => 'cms'));
        $instance->add('subordinate_publications_list', 'subordinate_publications_list', array(0 => 'cms'));
        $instance->add('subordinate_header', 'subordinate_header', array(0 => 'cms'));
        $instance->add('subordinate_direction', 'subordinate_direction', array(0 => 'cms'));
        $instance->add('material_owner_link', 'material_owner_link', array(0 => 'cms'));
        $instance->add('email_subscription_form_block', 'email_subscription_form_block', array(0 => 'cms'));
        $instance->add('sonata.block.service.container', 'sonata.block.service.container', array());
        $instance->add('sonata.block.service.empty', 'sonata.block.service.empty', array());
        $instance->add('sonata.block.service.text', 'sonata.block.service.text', array());
        $instance->add('sonata.block.service.rss', 'sonata.block.service.rss', array());
        $instance->add('sonata.block.service.menu', 'sonata.block.service.menu', array());
        $instance->add('sonata.block.service.template', 'sonata.block.service.template', array());
        $instance->add('sonata.admin_doctrine_orm.block.audit', 'sonata.admin_doctrine_orm.block.audit', array());
        $instance->add('sonata.admin.block.admin_list', 'sonata.admin.block.admin_list', array(0 => 'admin'));
        $instance->add('sonata.admin.block.search_result', 'sonata.admin.block.search_result', array());
        $instance->add('sonata.user.block.menu', 'sonata.user.block.menu', array(0 => 'admin'));
        $instance->add('sonata.user.block.account', 'sonata.user.block.account', array(0 => 'admin'));
        $instance->add('sonata.user.block.breadcrumb_index', 'sonata.user.block.breadcrumb_index', array());
        $instance->add('sonata.user.block.breadcrumb_profile', 'sonata.user.block.breadcrumb_profile', array());
        $instance->add('sonata.media.block.media', 'sonata.media.block.media', array());
        $instance->add('sonata.media.block.feature_media', 'sonata.media.block.feature_media', array());
        $instance->add('sonata.media.block.gallery', 'sonata.media.block.gallery', array());
        $instance->add('sonata.media.block.breadcrumb_view', 'sonata.media.block.breadcrumb_view', array());
        $instance->add('sonata.media.block.breadcrumb_index', 'sonata.media.block.breadcrumb_index', array());
        $instance->add('sonata.media.block.breadcrumb_view_media', 'sonata.media.block.breadcrumb_view_media', array());
        $instance->add('sonata.formatter.block.formatter', 'sonata.formatter.block.formatter', array());
        $instance->add('sonata.seo.block.email.share_button', 'sonata.seo.block.email.share_button', array());
        $instance->add('sonata.seo.block.facebook.like_box', 'sonata.seo.block.facebook.like_box', array());
        $instance->add('sonata.seo.block.facebook.like_button', 'sonata.seo.block.facebook.like_button', array());
        $instance->add('sonata.seo.block.facebook.send_button', 'sonata.seo.block.facebook.send_button', array());
        $instance->add('sonata.seo.block.facebook.share_button', 'sonata.seo.block.facebook.share_button', array());
        $instance->add('sonata.seo.block.twitter.share_button', 'sonata.seo.block.twitter.share_button', array());
        $instance->add('sonata.seo.block.twitter.follow_button', 'sonata.seo.block.twitter.follow_button', array());
        $instance->add('sonata.seo.block.twitter.hashtag_button', 'sonata.seo.block.twitter.hashtag_button', array());
        $instance->add('sonata.seo.block.twitter.mention_button', 'sonata.seo.block.twitter.mention_button', array());
        $instance->add('sonata.seo.block.twitter.embed', 'sonata.seo.block.twitter.embed', array());
        $instance->add('sonata.seo.block.pinterest.pin_button', 'sonata.seo.block.pinterest.pin_button', array());
        $instance->add('sonata.seo.block.breadcrumb.homepage', 'sonata.seo.block.breadcrumb.homepage', array());
        $instance->add('mobile_block_post_list', 'mobile_block_post_list', array(0 => 'cms'));
        $instance->add('mobile_block_construction_list', 'mobile_block_construction_list', array(0 => 'cms'));
        return $instance;
    }
    protected function getStofDoctrineExtensions_Listener_LoggableService()
    {
        $this->services['stof_doctrine_extensions.listener.loggable'] = $instance = new \Gedmo\Loggable\LoggableListener();
        $instance->setAnnotationReader($this->get('annotation_reader'));
        return $instance;
    }
    protected function getSwiftmailer_Mailer_Default_Transport_EventdispatcherService()
    {
        return $this->services['swiftmailer.mailer.default.transport.eventdispatcher'] = new \Swift_Events_SimpleEventDispatcher();
    }
    protected function getTemplating_LocatorService()
    {
        return $this->services['templating.locator'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator($this->get('file_locator'), __DIR__);
    }
    protected function getValidator_ValidatorFactoryService()
    {
        return $this->services['validator.validator_factory'] = new \Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory($this, array('validator.newsletter_post_collection' => 'app.validator.newsletter_post_collection', 'validator.expression' => 'validator.expression', 'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => 'validator.email', 'security.validator.user_password' => 'security.validator.user_password', 'doctrine.orm.validator.unique' => 'doctrine.orm.validator.unique', 'sonata.core.validator.inline' => 'sonata.core.validator.inline', 'sonata.admin.validator.inline' => 'sonata.admin.validator.inline', 'sonata.media.validator.format' => 'sonata.media.validator.format', 'sonata.formatter.validator.formatter' => 'sonata.formatter.validator.formatter'));
    }
    public function getParameter($name)
    {
        $name = strtolower($name);
        if (!(isset($this->parameters[$name]) || array_key_exists($name, $this->parameters))) {
            throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
        }
        return $this->parameters[$name];
    }
    public function hasParameter($name)
    {
        $name = strtolower($name);
        return isset($this->parameters[$name]) || array_key_exists($name, $this->parameters);
    }
    public function setParameter($name, $value)
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }
    public function getParameterBag()
    {
        if (null === $this->parameterBag) {
            $this->parameterBag = new FrozenParameterBag($this->parameters);
        }
        return $this->parameterBag;
    }
    protected function getDefaultParameters()
    {
        return array(
            'kernel.root_dir' => $this->targetDirs[2],
            'kernel.environment' => 'prod',
            'kernel.debug' => false,
            'kernel.name' => 'ap_',
            'kernel.cache_dir' => __DIR__,
            'kernel.logs_dir' => ($this->targetDirs[2].'/logs'),
            'kernel.bundles' => array(
                'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle',
                'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle',
                'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle',
                'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle',
                'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle',
                'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle',
                'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle',
                'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle',
                'FOSUserBundle' => 'FOS\\UserBundle\\FOSUserBundle',
                'SonataCoreBundle' => 'Sonata\\CoreBundle\\SonataCoreBundle',
                'SonataBlockBundle' => 'Sonata\\BlockBundle\\SonataBlockBundle',
                'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle',
                'SonataDoctrineORMAdminBundle' => 'Sonata\\DoctrineORMAdminBundle\\SonataDoctrineORMAdminBundle',
                'SonataAdminBundle' => 'Sonata\\AdminBundle\\SonataAdminBundle',
                'SonataEasyExtendsBundle' => 'Sonata\\EasyExtendsBundle\\SonataEasyExtendsBundle',
                'SonataUserBundle' => 'Sonata\\UserBundle\\SonataUserBundle',
                'SonataMediaBundle' => 'Sonata\\MediaBundle\\SonataMediaBundle',
                'ApplicationSonataUserBundle' => 'Application\\Sonata\\UserBundle\\ApplicationSonataUserBundle',
                'SonataIntlBundle' => 'Sonata\\IntlBundle\\SonataIntlBundle',
                'ApplicationSonataMediaBundle' => 'Application\\Sonata\\MediaBundle\\ApplicationSonataMediaBundle',
                'ApplicationSonataFormatterBundle' => 'Application\\Sonata\\FormatterBundle\\ApplicationSonataFormatterBundle',
                'SimpleThingsEntityAuditBundle' => 'SimpleThings\\EntityAudit\\SimpleThingsEntityAuditBundle',
                'StofDoctrineExtensionsBundle' => 'Stof\\DoctrineExtensionsBundle\\StofDoctrineExtensionsBundle',
                'JMSSerializerBundle' => 'JMS\\SerializerBundle\\JMSSerializerBundle',
                'KnpMarkdownBundle' => 'Knp\\Bundle\\MarkdownBundle\\KnpMarkdownBundle',
                'IvoryCKEditorBundle' => 'Ivory\\CKEditorBundle\\IvoryCKEditorBundle',
                'SonataFormatterBundle' => 'Sonata\\FormatterBundle\\SonataFormatterBundle',
                'SonataSeoBundle' => 'Sonata\\SeoBundle\\SonataSeoBundle',
                'PrestaSitemapBundle' => 'Presta\\SitemapBundle\\PrestaSitemapBundle',
                'CmfRoutingBundle' => 'Symfony\\Cmf\\Bundle\\RoutingBundle\\CmfRoutingBundle',
                'AmgPageBundle' => 'Amg\\Bundle\\PageBundle\\AmgPageBundle',
                'AmgAdminBundle' => 'Amg\\Bundle\\AdminBundle\\AmgAdminBundle',
                'FOSElasticaBundle' => 'FOS\\ElasticaBundle\\FOSElasticaBundle',
                'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle',
                'AppBundle' => 'AppBundle\\AppBundle',
                'AmgFormBundle' => 'Amg\\Bundle\\FormBundle\\AmgFormBundle',
                'AmgTagBundle' => 'Amg\\Bundle\\TagBundle\\AmgTagBundle',
                'SncRedisBundle' => 'Snc\\RedisBundle\\SncRedisBundle',
                'DoctrineMigrationsBundle' => 'Doctrine\\Bundle\\MigrationsBundle\\DoctrineMigrationsBundle',
                'SonataCacheBundle' => 'Sonata\\CacheBundle\\SonataCacheBundle',
                'CrawlerDetectBundle' => 'Nmure\\CrawlerDetectBundle\\CrawlerDetectBundle',
                'StroiMobileBundle' => 'Stroi\\MobileBundle\\StroiMobileBundle',
                'ApiBundle' => 'ApiBundle\\ApiBundle',
                'SentryBundle' => 'Sentry\\SentryBundle\\SentryBundle',
            ),
            'kernel.charset' => 'UTF-8',
            'kernel.container_class' => 'appProdProjectContainer',
            'cache_namespace' => '202502051543177ba7075289c156c71599c9687a21904f',
            'knp.doctrine_behaviors.reflection.class_analyzer.class' => 'Knp\\DoctrineBehaviors\\Reflection\\ClassAnalyzer',
            'knp.doctrine_behaviors.reflection.is_recursive' => true,
            'knp.doctrine_behaviors.translatable_subscriber.class' => 'Knp\\DoctrineBehaviors\\ORM\\Translatable\\TranslatableSubscriber',
            'knp.doctrine_behaviors.translatable_subscriber.current_locale_callable.class' => 'Knp\\DoctrineBehaviors\\ORM\\Translatable\\CurrentLocaleCallable',
            'knp.doctrine_behaviors.translatable_subscriber.default_locale_callable.class' => 'Knp\\DoctrineBehaviors\\ORM\\Translatable\\DefaultLocaleCallable',
            'knp.doctrine_behaviors.translatable_subscriber.translatable_trait' => 'Knp\\DoctrineBehaviors\\Model\\Translatable\\Translatable',
            'knp.doctrine_behaviors.translatable_subscriber.translation_trait' => 'Knp\\DoctrineBehaviors\\Model\\Translatable\\Translation',
            'knp.doctrine_behaviors.translatable_subscriber.translatable_fetch_method' => 'LAZY',
            'knp.doctrine_behaviors.translatable_subscriber.translation_fetch_method' => 'LAZY',
            'knp.doctrine_behaviors.softdeletable_subscriber.class' => 'Knp\\DoctrineBehaviors\\ORM\\SoftDeletable\\SoftDeletableSubscriber',
            'knp.doctrine_behaviors.softdeletable_subscriber.softdeletable_trait' => 'Knp\\DoctrineBehaviors\\Model\\SoftDeletable\\SoftDeletable',
            'knp.doctrine_behaviors.timestampable_subscriber.class' => 'Knp\\DoctrineBehaviors\\ORM\\Timestampable\\TimestampableSubscriber',
            'knp.doctrine_behaviors.timestampable_subscriber.timestampable_trait' => 'Knp\\DoctrineBehaviors\\Model\\Timestampable\\Timestampable',
            'knp.doctrine_behaviors.blameable_subscriber.class' => 'Knp\\DoctrineBehaviors\\ORM\\Blameable\\BlameableSubscriber',
            'knp.doctrine_behaviors.blameable_subscriber.blameable_trait' => 'Knp\\DoctrineBehaviors\\Model\\Blameable\\Blameable',
            'knp.doctrine_behaviors.blameable_subscriber.user_callable.class' => 'Knp\\DoctrineBehaviors\\ORM\\Blameable\\UserCallable',
            'knp.doctrine_behaviors.blameable_subscriber.user_entity' => NULL,
            'knp.doctrine_behaviors.loggable_subscriber.class' => 'Knp\\DoctrineBehaviors\\ORM\\Loggable\\LoggableSubscriber',
            'knp.doctrine_behaviors.loggable_subscriber.logger_callable.class' => 'Knp\\DoctrineBehaviors\\ORM\\Loggable\\LoggerCallable',
            'knp.doctrine_behaviors.geocodable_subscriber.class' => 'Knp\\DoctrineBehaviors\\ORM\\Geocodable\\GeocodableSubscriber',
            'knp.doctrine_behaviors.geocodable_subscriber.geocodable_trait' => 'Knp\\DoctrineBehaviors\\Model\\Geocodable\\Geocodable',
            'knp.doctrine_behaviors.sluggable_subscriber.class' => 'Knp\\DoctrineBehaviors\\ORM\\Sluggable\\SluggableSubscriber',
            'knp.doctrine_behaviors.sluggable_subscriber.sluggable_trait' => 'Knp\\DoctrineBehaviors\\Model\\Sluggable\\Sluggable',
            'knp.doctrine_behaviors.tree_subscriber.class' => 'Knp\\DoctrineBehaviors\\ORM\\Tree\\TreeSubscriber',
            'knp.doctrine_behaviors.tree_subscriber.tree_trait' => 'Knp\\DoctrineBehaviors\\Model\\Tree\\Node',
            'knp.doctrine_behaviors.sortable_subscriber.class' => 'Knp\\DoctrineBehaviors\\ORM\\Sortable\\SortableSubscriber',
            'knp.doctrine_behaviors.sortable_subscriber.sortable_trait' => 'Knp\\DoctrineBehaviors\\Model\\Sortable\\Sortable',
            'database_driver' => 'pdo_mysql',
            'database_host' => 'mysql',
            'database_port' => NULL,
            'database_name' => 'stroi_mos_ru_prod',
            'database_user' => 'stroi_mos_ru',
            'database_password' => 'password',
            'mailer_transport' => 'smtp',
            'mailer_host' => '127.0.0.1',
            'mailer_port' => 25,
            'mailer_user' => NULL,
            'mailer_password' => NULL,
            'mailer_encryption' => NULL,
            'mailer_delivery_address' => NULL,
            'mailer_sender_address' => 'info-stroi@mos.ru',
            'mailer_sender_name' => 'stroi.mos.ru',
            'mailer_spool_path' => '/var/www/html/main/shared/swiftmailer_spool',
            'secret' => 'dfloiuygHJNKL-----------3hfdasfghghasdhfkfffffffffff',
            'router.request_context.host' => 'stroimos.local',
            'router.request_context.scheme' => 'https',
            'elasticsearch_host' => 'elasticsearch',
            'elasticsearch_port' => 9200,
            'elasticsearch_index_name' => 'stroi_mos_ru',
            'bus_ugd_mos_ru.username' => 'apostol',
            'bus_ugd_mos_ru.password' => 'Bw632a',
            'bus_ugd_mos_ru.location' => 'http://10.127.5.105/prod/soap/S_006_006_02',
            'e_moscow_hpsm.username' => 'Portal_SM',
            'e_moscow_hpsm.password' => '6bmkWGdm',
            'full_frontend' => true,
            'vkontakte.client_id' => 4979755,
            'vkontakte.client_secret' => 'adqNUSeGRJZg5Gxw7pW1',
            'facebook.client_id' => 724760997567562,
            'facebook.client_secret' => '7c01a6d3726c4dda81e2abaa3686dffc',
            'google.client_id' => '628316188406-1q5hkl7bojscc6muph4ksbputdjdc4gi.apps.googleusercontent.com',
            'google.client_secret' => 'MlGpggMSbXJWzTYS7aO--zv9',
            'login_mos_ru.client_id' => 'stroi.mos.ru',
            'login_mos_ru.client_secret' => '7e47a6f1-8e27-4a89-8ddb-8b9a20192dea',
            'import.database_host' => 'mysql',
            'import.database_name' => 'old_stroi_mos_ru',
            'import.database_user' => 'root',
            'import.database_password' => NULL,
            'import.file_cache_path' => '/tmp/',
            'redis_host' => '127.0.0.1',
            'redis_db' => 7,
            'redis_password' => 'WhicDiotgagHakjidagpheim',
            'redis_dsn' => 'redis://WhicDiotgagHakjidagpheim@127.0.0.1/7',
            'redis_dsn_construction' => 'redis://WhicDiotgagHakjidagpheim@127.0.0.1/1',
            'uploaded_media_dir' => '/uploads/media',
            'activity_collection_enable' => false,
            'session_memcached_host' => 'memcached',
            'session_memcached_port' => 11211,
            'session_memcached_prefix' => 'sess',
            'session_memcached_expire' => 3600,
            'stroi_admin_email' => 'stroi@demo-room.ru',
            'sendpulse_id' => '190c0f7f92c3cb5dd9e9ab0e3fecf4d8',
            'sendpulse_secret' => '420e99c801a58f04f4d4025ee01615ac',
            'sendpulse_website_id' => 64683,
            'sendsay_account' => 'x_1682426891713939',
            'sendsay_key' => '1_HviYhLyIby-VFplJ8E5_-QKwL1LoRbDlywxwSnjAoq515aTnbKO5d3SD63ko5bO3hVX',
            'sendsay_group' => 'pl82416',
            'trusted_proxies' => NULL,
            'newsletter_production' => true,
            'newsletter_debug_users_list' => array(
                0 => 'oksion@gmail.com',
                1 => 'tanyaggreet@mail.ru',
                2 => 'nikabulgakova@mail.ru',
                3 => 'valent.rus@gmail.com',
                4 => 'valent-ex@mail.ru',
                5 => 'valent-ex@live.ru',
                6 => 'valent-ex@yandex.ru',
                7 => 'klimov.anton@yahoo.com',
                8 => 'anton.klimov@flant.com',
                9 => 'alexandr.batalov@gmail.com',
                10 => 'konstantin.axenov@gmail.com',
                11 => 'igor.krokhalevskiy@flant.com',
                12 => 'alena.cherrr@yandex.ru',
                13 => 'afalina741@gmail.com',
                14 => 'sinkova.nastena@yandex.ru',
            ),
            'subordinate_cache' => false,
            'mobile_version_redirect' => false,
            'sentry_dsn' => 'https://e704cea0cdd646c88f5a7cf40c970ac1@sentry.io/1551556',
            'kernel.web_dir' => ($this->targetDirs[2].'/../web/'),
            'google_recaptcha_site_key' => '6LfciQ0eAAAAACmU275GNEwq3sRqZfawqjY1rtCs',
            'google_recaptcha_secret_key' => '6LfciQ0eAAAAAJXgAPo8ZQ8g42FFDLd2G7epas4x',
            'yandex_captcha_site_key' => 'pa5HzaIaNvURE823drHhexcxVX7N8mVEY8s8uCFu',
            'yandex_captcha_secret_key' => 'pa5HzaIaNvURE823drHhGxujvdvwmpG9Kyuzb4yb',
            'bus_ugd_smart.base_url' => 'https://smart.mos.ru/',
            'bus_ugd_smart.login' => 'external_ugd_ps_oks',
            'bus_ugd_smart.password' => '7gp1jbEEC',
            'admin.groupname.comment' => 'Комментарии и обр. связь',
            'admin.groupname.email_subscriptions' => 'Рассылки',
            'admin.groupname.constructions' => 'Объекты строительства',
            'admin.groupname.embedded_content' => 'Встраиваемый контент',
            'sonata.media.admin.media.class' => 'Application\\Sonata\\MediaBundle\\Admin\\MediaAdmin',
            'sonata.media.admin.media.controller' => 'ApplicationSonataMediaBundle:MediaAdmin',
            'hwi_oauth.user.provider.fosub_bridge.class' => 'AppBundle\\Security\\OAuthFOSUBUserProvider',
            'sonata.media.provider.image.class' => 'Application\\Sonata\\MediaBundle\\Provider\\ImageProvider',
            'sonata.media.provider.file.class' => 'Application\\Sonata\\MediaBundle\\Provider\\FileProvider',
            'sonata.media.provider.youtube.class' => 'Application\\Sonata\\MediaBundle\\Provider\\YouTubeProvider',
            'domain_canonical_title' => 'Комплекс градостроительной политики и строительства города Москвы',
            'sonata.seo.page.default.class' => 'AppBundle\\Seo\\SeoPage',
            'autoadmin.image.media_context_map' => array(
                'default' => array(
                    'image' => array(
                        'context' => 'main_image',
                        'lock_context' => array(
                            0 => 'main_image',
                            1 => 'gallery_media',
                        ),
                    ),
                ),
                'AppBundle\\Entity\\Post' => array(
                    'image' => array(
                        'context' => 'gallery_media',
                        'editable_formats' => array(
                            0 => 'page_header_700',
                            1 => 'thumb210',
                            2 => 'thumb300',
                            3 => 'thumb960x470',
                            4 => 'thumb465x548',
                            5 => 'thumb340x340',
                            6 => 'thumb271x125',
                            7 => 'thumb295x345',
                        ),
                        'lock_context' => array(
                            0 => 'main_image',
                            1 => 'gallery_media',
                        ),
                        'image_admin_extra_key' => 'page_header_700',
                    ),
                    'heroImage' => array(
                        'context' => 'gallery_media',
                        'help' => 'Требуется только если изображение на странице публикации должно отличаться от основного изображения',
                        'editable_formats' => array(
                            0 => 'page_header_700',
                            1 => 'thumb465x548',
                        ),
                        'lock_context' => array(
                            0 => 'main_image',
                            1 => 'gallery_media',
                        ),
                        'image_admin_extra_key' => 'page_header_700',
                    ),
                ),
                'AppBundle\\Entity\\EmbeddedContent\\Banner' => array(
                    'templateImage' => array(
                        'context' => 'main_image',
                        'editable_formats' => array(
                            0 => 'thumb589',
                        ),
                        'lock_context' => array(
                            0 => 'main_image',
                            1 => 'gallery_media',
                        ),
                        'image_admin_extra_key' => 'thumb589',
                        'required' => true,
                    ),
                ),
                'AppBundle\\Entity\\EmbeddedContent\\Faq\\FaqBlock' => array(
                    'image' => array(
                        'context' => 'main_image',
                        'editable_formats' => array(
                            0 => 'thumb589',
                        ),
                        'lock_context' => array(
                            0 => 'main_image',
                            1 => 'gallery_media',
                        ),
                        'image_admin_extra_key' => 'thumb589',
                        'required' => true,
                    ),
                ),
                'AppBundle\\Entity\\GalleryMedia' => array(
                    'image' => 'gallery_media',
                ),
                'AppBundle\\Entity\\Person' => array(
                    'image' => array(
                        'context' => 'person',
                        'editable_formats' => array(
                            0 => 'thumb70',
                        ),
                        'lock_context' => array(
                            0 => 'person',
                        ),
                        'image_admin_extra_key' => 'thumb70',
                    ),
                    'topImage' => 'person_top',
                ),
                'AppBundle\\Entity\\ContactPerson' => array(
                    'image' => array(
                        'context' => 'person',
                        'editable_formats' => array(
                            0 => 'direction',
                            1 => 'direction_main',
                        ),
                        'lock_context' => array(
                            0 => 'person',
                        ),
                        'image_admin_extra_key' => 'thumb589',
                    ),
                ),
                'AppBundle\\Entity\\MetroTimelineYear' => array(
                    'image' => array(
                        'context' => 'metro_timeline',
                        'lock_context' => 'metro_timeline',
                    ),
                ),
                'AppBundle\\Entity\\Video' => array(
                    'image' => array(
                        'context' => 'main_image',
                        'editable_formats' => array(
                            0 => 'thumb300',
                            1 => 'thumb680x495',
                            2 => 'thumb300x90',
                        ),
                        'lock_context' => array(
                            0 => 'video',
                            1 => 'main_image',
                            2 => 'gallery_media',
                        ),
                        'image_admin_extra_key' => 'thumb680x495',
                    ),
                ),
                'AppBundle\\Entity\\Infographics' => array(
                    'image' => array(
                        'context' => 'main_image',
                        'editable_formats' => array(
                            0 => 'thumb630x338',
                        ),
                        'lock_context' => array(
                            0 => 'main_image',
                            1 => 'gallery_media',
                        ),
                        'image_admin_extra_key' => 'thumb630x338',
                    ),
                ),
                'AppBundle\\Entity\\Road' => array(
                    'image' => array(
                        'context' => 'main_image',
                        'editable_formats' => array(
                            0 => 'thumb1440',
                            1 => 'thumb300',
                        ),
                        'lock_context' => array(
                            0 => 'main_image',
                            1 => 'gallery_media',
                        ),
                        'image_admin_extra_key' => 'thumb1440',
                    ),
                ),
                'AppBundle\\Entity\\Construction' => array(
                    'image' => array(
                        'context' => 'main_image',
                        'editable_formats' => array(
                            0 => 'thumb1440',
                            1 => 'thumb300',
                        ),
                        'lock_context' => array(
                            0 => 'main_image',
                            1 => 'gallery_media',
                        ),
                        'image_admin_extra_key' => 'thumb1440',
                    ),
                ),
                'AppBundle\\Entity\\MetroStation' => array(
                    'image' => array(
                        'context' => 'main_image',
                        'editable_formats' => array(
                            0 => 'thumb1440',
                            1 => 'thumb300',
                        ),
                        'lock_context' => array(
                            0 => 'main_image',
                            1 => 'gallery_media',
                        ),
                        'image_admin_extra_key' => 'thumb1440',
                    ),
                ),
            ),
            'fos_elastica.default_tag_mapping' => array(
                'type' => 'object',
                'index' => 'not_analyzed',
                'properties' => array(
                    'id' => NULL,
                    'title' => NULL,
                ),
            ),
            'fos_elastica.default_owner_mapping' => array(
                'type' => 'object',
                'index' => 'not_analyzed',
                'properties' => array(
                    'id' => NULL,
                    'search_name' => NULL,
                ),
            ),
            'assets_version' => 20250205154133,
            'locale' => 'ru',
            'controller_resolver.class' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\ControllerResolver',
            'controller_name_converter.class' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\ControllerNameParser',
            'response_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener',
            'streamed_response_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\StreamedResponseListener',
            'locale_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\LocaleListener',
            'event_dispatcher.class' => 'Symfony\\Component\\EventDispatcher\\ContainerAwareEventDispatcher',
            'http_kernel.class' => 'Symfony\\Component\\HttpKernel\\DependencyInjection\\ContainerAwareHttpKernel',
            'filesystem.class' => 'Symfony\\Component\\Filesystem\\Filesystem',
            'cache_warmer.class' => 'Symfony\\Component\\HttpKernel\\CacheWarmer\\CacheWarmerAggregate',
            'cache_clearer.class' => 'Symfony\\Component\\HttpKernel\\CacheClearer\\ChainCacheClearer',
            'file_locator.class' => 'Symfony\\Component\\HttpKernel\\Config\\FileLocator',
            'uri_signer.class' => 'Symfony\\Component\\HttpKernel\\UriSigner',
            'request_stack.class' => 'Symfony\\Component\\HttpFoundation\\RequestStack',
            'fragment.handler.class' => 'Symfony\\Component\\HttpKernel\\DependencyInjection\\LazyLoadingFragmentHandler',
            'fragment.renderer.inline.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\InlineFragmentRenderer',
            'fragment.renderer.hinclude.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\HIncludeFragmentRenderer',
            'fragment.renderer.hinclude.global_template' => NULL,
            'fragment.renderer.esi.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\EsiFragmentRenderer',
            'fragment.path' => '/_fragment',
            'translator.class' => 'Symfony\\Bundle\\FrameworkBundle\\Translation\\Translator',
            'translator.identity.class' => 'Symfony\\Component\\Translation\\IdentityTranslator',
            'translator.selector.class' => 'Symfony\\Component\\Translation\\MessageSelector',
            'translation.loader.php.class' => 'Symfony\\Component\\Translation\\Loader\\PhpFileLoader',
            'translation.loader.yml.class' => 'Symfony\\Component\\Translation\\Loader\\YamlFileLoader',
            'translation.loader.xliff.class' => 'Symfony\\Component\\Translation\\Loader\\XliffFileLoader',
            'translation.loader.po.class' => 'Symfony\\Component\\Translation\\Loader\\PoFileLoader',
            'translation.loader.mo.class' => 'Symfony\\Component\\Translation\\Loader\\MoFileLoader',
            'translation.loader.qt.class' => 'Symfony\\Component\\Translation\\Loader\\QtFileLoader',
            'translation.loader.csv.class' => 'Symfony\\Component\\Translation\\Loader\\CsvFileLoader',
            'translation.loader.res.class' => 'Symfony\\Component\\Translation\\Loader\\IcuResFileLoader',
            'translation.loader.dat.class' => 'Symfony\\Component\\Translation\\Loader\\IcuDatFileLoader',
            'translation.loader.ini.class' => 'Symfony\\Component\\Translation\\Loader\\IniFileLoader',
            'translation.loader.json.class' => 'Symfony\\Component\\Translation\\Loader\\JsonFileLoader',
            'translation.dumper.php.class' => 'Symfony\\Component\\Translation\\Dumper\\PhpFileDumper',
            'translation.dumper.xliff.class' => 'Symfony\\Component\\Translation\\Dumper\\XliffFileDumper',
            'translation.dumper.po.class' => 'Symfony\\Component\\Translation\\Dumper\\PoFileDumper',
            'translation.dumper.mo.class' => 'Symfony\\Component\\Translation\\Dumper\\MoFileDumper',
            'translation.dumper.yml.class' => 'Symfony\\Component\\Translation\\Dumper\\YamlFileDumper',
            'translation.dumper.qt.class' => 'Symfony\\Component\\Translation\\Dumper\\QtFileDumper',
            'translation.dumper.csv.class' => 'Symfony\\Component\\Translation\\Dumper\\CsvFileDumper',
            'translation.dumper.ini.class' => 'Symfony\\Component\\Translation\\Dumper\\IniFileDumper',
            'translation.dumper.json.class' => 'Symfony\\Component\\Translation\\Dumper\\JsonFileDumper',
            'translation.dumper.res.class' => 'Symfony\\Component\\Translation\\Dumper\\IcuResFileDumper',
            'translation.extractor.php.class' => 'Symfony\\Bundle\\FrameworkBundle\\Translation\\PhpExtractor',
            'translation.loader.class' => 'Symfony\\Bundle\\FrameworkBundle\\Translation\\TranslationLoader',
            'translation.extractor.class' => 'Symfony\\Component\\Translation\\Extractor\\ChainExtractor',
            'translation.writer.class' => 'Symfony\\Component\\Translation\\Writer\\TranslationWriter',
            'property_accessor.class' => 'Symfony\\Component\\PropertyAccess\\PropertyAccessor',
            'kernel.secret' => 'dfloiuygHJNKL-----------3hfdasfghghasdhfkfffffffffff',
            'kernel.http_method_override' => true,
            'kernel.trusted_hosts' => array(
            ),
            'kernel.trusted_proxies' => array(
            ),
            'kernel.default_locale' => 'ru',
            'session.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Session',
            'session.flashbag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Flash\\FlashBag',
            'session.attribute_bag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag',
            'session.storage.metadata_bag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\MetadataBag',
            'session.metadata.storage_key' => '_sf2_meta',
            'session.storage.native.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\NativeSessionStorage',
            'session.storage.php_bridge.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\PhpBridgeSessionStorage',
            'session.storage.mock_file.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\MockFileSessionStorage',
            'session.handler.native_file.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\NativeFileSessionHandler',
            'session.handler.write_check.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\WriteCheckSessionHandler',
            'session_listener.class' => 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\SessionListener',
            'session.storage.options' => array(
                'gc_probability' => 1,
            ),
            'session.save_path' => (__DIR__.'/sessions'),
            'session.metadata.update_threshold' => '0',
            'security.secure_random.class' => 'Symfony\\Component\\Security\\Core\\Util\\SecureRandom',
            'form.resolved_type_factory.class' => 'Symfony\\Component\\Form\\ResolvedFormTypeFactory',
            'form.registry.class' => 'Symfony\\Component\\Form\\FormRegistry',
            'form.factory.class' => 'Symfony\\Component\\Form\\FormFactory',
            'form.extension.class' => 'Symfony\\Component\\Form\\Extension\\DependencyInjection\\DependencyInjectionExtension',
            'form.type_guesser.validator.class' => 'Symfony\\Component\\Form\\Extension\\Validator\\ValidatorTypeGuesser',
            'form.type_extension.form.request_handler.class' => 'Symfony\\Component\\Form\\Extension\\HttpFoundation\\HttpFoundationRequestHandler',
            'form.type_extension.csrf.enabled' => true,
            'form.type_extension.csrf.field_name' => '_token',
            'security.csrf.token_generator.class' => 'Symfony\\Component\\Security\\Csrf\\TokenGenerator\\UriSafeTokenGenerator',
            'security.csrf.token_storage.class' => 'Symfony\\Component\\Security\\Csrf\\TokenStorage\\SessionTokenStorage',
            'security.csrf.token_manager.class' => 'Symfony\\Component\\Security\\Csrf\\CsrfTokenManager',
            'templating.engine.delegating.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\DelegatingEngine',
            'templating.name_parser.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\TemplateNameParser',
            'templating.filename_parser.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\TemplateFilenameParser',
            'templating.cache_warmer.template_paths.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\TemplatePathsCacheWarmer',
            'templating.locator.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Loader\\TemplateLocator',
            'templating.loader.filesystem.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Loader\\FilesystemLoader',
            'templating.loader.cache.class' => 'Symfony\\Component\\Templating\\Loader\\CacheLoader',
            'templating.loader.chain.class' => 'Symfony\\Component\\Templating\\Loader\\ChainLoader',
            'templating.finder.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\TemplateFinder',
            'templating.helper.assets.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\AssetsHelper',
            'templating.helper.router.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\RouterHelper',
            'templating.helper.code.file_link_format' => NULL,
            'templating.loader.cache.path' => NULL,
            'templating.engines' => array(
                0 => 'twig',
            ),
            'validator.class' => 'Symfony\\Component\\Validator\\Validator\\ValidatorInterface',
            'validator.builder.class' => 'Symfony\\Component\\Validator\\ValidatorBuilderInterface',
            'validator.builder.factory.class' => 'Symfony\\Component\\Validator\\Validation',
            'validator.mapping.cache.apc.class' => 'Symfony\\Component\\Validator\\Mapping\\Cache\\ApcCache',
            'validator.mapping.cache.prefix' => '',
            'validator.validator_factory.class' => 'Symfony\\Bundle\\FrameworkBundle\\Validator\\ConstraintValidatorFactory',
            'validator.expression.class' => 'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator',
            'validator.email.class' => 'Symfony\\Component\\Validator\\Constraints\\EmailValidator',
            'validator.translation_domain' => 'validators',
            'validator.api' => '2.5-bc',
            'fragment.listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\FragmentListener',
            'translator.logging' => false,
            'data_collector.templates' => array(
            ),
            'router.class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\Router',
            'router.request_context.class' => 'Symfony\\Component\\Routing\\RequestContext',
            'routing.loader.class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\DelegatingLoader',
            'routing.resolver.class' => 'Symfony\\Component\\Config\\Loader\\LoaderResolver',
            'routing.loader.xml.class' => 'Symfony\\Component\\Routing\\Loader\\XmlFileLoader',
            'routing.loader.yml.class' => 'Symfony\\Component\\Routing\\Loader\\YamlFileLoader',
            'routing.loader.php.class' => 'Symfony\\Component\\Routing\\Loader\\PhpFileLoader',
            'router.options.generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper',
            'router.options.matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper',
            'router.cache_warmer.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\RouterCacheWarmer',
            'router.options.matcher.cache_class' => 'appProdUrlMatcher',
            'router.options.generator.cache_class' => 'appProdUrlGenerator',
            'router_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener',
            'router.request_context.base_url' => '',
            'router.resource' => ($this->targetDirs[2].'/config/routing.yml'),
            'router.cache_class_prefix' => 'appProd',
            'request_listener.http_port' => 80,
            'request_listener.https_port' => 443,
            'annotations.reader.class' => 'Doctrine\\Common\\Annotations\\AnnotationReader',
            'annotations.cached_reader.class' => 'Doctrine\\Common\\Annotations\\CachedReader',
            'annotations.file_cache_reader.class' => 'Doctrine\\Common\\Annotations\\FileCacheReader',
            'debug.debug_handlers_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\DebugHandlersListener',
            'debug.stopwatch.class' => 'Symfony\\Component\\Stopwatch\\Stopwatch',
            'debug.error_handler.throw_at' => 0,
            'security.context.class' => 'Symfony\\Component\\Security\\Core\\SecurityContext',
            'security.user_checker.class' => 'Symfony\\Component\\Security\\Core\\User\\UserChecker',
            'security.encoder_factory.generic.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory',
            'security.encoder.digest.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder',
            'security.encoder.plain.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\PlaintextPasswordEncoder',
            'security.encoder.pbkdf2.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\Pbkdf2PasswordEncoder',
            'security.encoder.bcrypt.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\BCryptPasswordEncoder',
            'security.user.provider.in_memory.class' => 'Symfony\\Component\\Security\\Core\\User\\InMemoryUserProvider',
            'security.user.provider.in_memory.user.class' => 'Symfony\\Component\\Security\\Core\\User\\User',
            'security.user.provider.chain.class' => 'Symfony\\Component\\Security\\Core\\User\\ChainUserProvider',
            'security.authentication.trust_resolver.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationTrustResolver',
            'security.authentication.trust_resolver.anonymous_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken',
            'security.authentication.trust_resolver.rememberme_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken',
            'security.authentication.manager.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationProviderManager',
            'security.authentication.session_strategy.class' => 'Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategy',
            'security.access.decision_manager.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManager',
            'security.access.simple_role_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\RoleVoter',
            'security.access.authenticated_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\AuthenticatedVoter',
            'security.access.role_hierarchy_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\RoleHierarchyVoter',
            'security.access.expression_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\ExpressionVoter',
            'security.firewall.class' => 'Symfony\\Component\\Security\\Http\\Firewall',
            'security.firewall.map.class' => 'Symfony\\Bundle\\SecurityBundle\\Security\\FirewallMap',
            'security.firewall.context.class' => 'Symfony\\Bundle\\SecurityBundle\\Security\\FirewallContext',
            'security.matcher.class' => 'Symfony\\Component\\HttpFoundation\\RequestMatcher',
            'security.expression_matcher.class' => 'Symfony\\Component\\HttpFoundation\\ExpressionRequestMatcher',
            'security.role_hierarchy.class' => 'Symfony\\Component\\Security\\Core\\Role\\RoleHierarchy',
            'security.http_utils.class' => 'Symfony\\Component\\Security\\Http\\HttpUtils',
            'security.validator.user_password.class' => 'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator',
            'security.expression_language.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\ExpressionLanguage',
            'security.authentication.retry_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\RetryAuthenticationEntryPoint',
            'security.channel_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ChannelListener',
            'security.authentication.form_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\FormAuthenticationEntryPoint',
            'security.authentication.listener.form.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\UsernamePasswordFormAuthenticationListener',
            'security.authentication.listener.simple_form.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SimpleFormAuthenticationListener',
            'security.authentication.listener.simple_preauth.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SimplePreAuthenticationListener',
            'security.authentication.listener.basic.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\BasicAuthenticationListener',
            'security.authentication.basic_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\BasicAuthenticationEntryPoint',
            'security.authentication.listener.digest.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\DigestAuthenticationListener',
            'security.authentication.digest_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\DigestAuthenticationEntryPoint',
            'security.authentication.listener.x509.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\X509AuthenticationListener',
            'security.authentication.listener.anonymous.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\AnonymousAuthenticationListener',
            'security.authentication.switchuser_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SwitchUserListener',
            'security.logout_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\LogoutListener',
            'security.logout.handler.session.class' => 'Symfony\\Component\\Security\\Http\\Logout\\SessionLogoutHandler',
            'security.logout.handler.cookie_clearing.class' => 'Symfony\\Component\\Security\\Http\\Logout\\CookieClearingLogoutHandler',
            'security.logout.success_handler.class' => 'Symfony\\Component\\Security\\Http\\Logout\\DefaultLogoutSuccessHandler',
            'security.access_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\AccessListener',
            'security.access_map.class' => 'Symfony\\Component\\Security\\Http\\AccessMap',
            'security.exception_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ExceptionListener',
            'security.context_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ContextListener',
            'security.authentication.provider.dao.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\DaoAuthenticationProvider',
            'security.authentication.provider.simple.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\SimpleAuthenticationProvider',
            'security.authentication.provider.pre_authenticated.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\PreAuthenticatedAuthenticationProvider',
            'security.authentication.provider.anonymous.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\AnonymousAuthenticationProvider',
            'security.authentication.success_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationSuccessHandler',
            'security.authentication.failure_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationFailureHandler',
            'security.authentication.simple_success_failure_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\SimpleAuthenticationHandler',
            'security.authentication.provider.rememberme.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\RememberMeAuthenticationProvider',
            'security.authentication.listener.rememberme.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\RememberMeListener',
            'security.rememberme.token.provider.in_memory.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\InMemoryTokenProvider',
            'security.authentication.rememberme.services.persistent.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\PersistentTokenBasedRememberMeServices',
            'security.authentication.rememberme.services.simplehash.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\TokenBasedRememberMeServices',
            'security.rememberme.response_listener.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener',
            'templating.helper.logout_url.class' => 'Symfony\\Bundle\\SecurityBundle\\Templating\\Helper\\LogoutUrlHelper',
            'templating.helper.security.class' => 'Symfony\\Bundle\\SecurityBundle\\Templating\\Helper\\SecurityHelper',
            'twig.extension.logout_url.class' => 'Symfony\\Bridge\\Twig\\Extension\\LogoutUrlExtension',
            'twig.extension.security.class' => 'Symfony\\Bridge\\Twig\\Extension\\SecurityExtension',
            'data_collector.security.class' => 'Symfony\\Bundle\\SecurityBundle\\DataCollector\\SecurityDataCollector',
            'security.access.denied_url' => NULL,
            'security.authentication.manager.erase_credentials' => true,
            'security.authentication.session_strategy.strategy' => 'migrate',
            'security.access.always_authenticate_before_granting' => false,
            'security.authentication.hide_user_not_found' => true,
            'security.role_hierarchy.roles' => array(
                'ROLE_ADMIN' => array(
                    0 => 'ROLE_USER',
                    1 => 'ROLE_SONATA_ADMIN',
                ),
                'ROLE_SUPER_ADMIN' => array(
                    0 => 'ROLE_ADMIN',
                    1 => 'ROLE_ALLOWED_TO_SWITCH',
                    2 => 'ROLE_NOTIFICATION_SENDER',
                ),
                'ROLE_VIP_JOURNALIST' => array(
                    0 => 'ROLE_JOURNALIST',
                ),
                'ROLE_JOURNALIST' => array(
                ),
                'ROLE_EVENT_MODERATOR' => array(
                ),
                'ROLE_NOTIFICATION_SENDER' => array(
                ),
            ),
            'twig.class' => 'Twig_Environment',
            'twig.loader.filesystem.class' => 'Symfony\\Bundle\\TwigBundle\\Loader\\FilesystemLoader',
            'twig.loader.chain.class' => 'Twig_Loader_Chain',
            'templating.engine.twig.class' => 'Symfony\\Bundle\\TwigBundle\\TwigEngine',
            'twig.cache_warmer.class' => 'Symfony\\Bundle\\TwigBundle\\CacheWarmer\\TemplateCacheCacheWarmer',
            'twig.extension.trans.class' => 'Symfony\\Bridge\\Twig\\Extension\\TranslationExtension',
            'twig.extension.actions.class' => 'Symfony\\Bundle\\TwigBundle\\Extension\\ActionsExtension',
            'twig.extension.code.class' => 'Symfony\\Bridge\\Twig\\Extension\\CodeExtension',
            'twig.extension.routing.class' => 'Symfony\\Bridge\\Twig\\Extension\\RoutingExtension',
            'twig.extension.yaml.class' => 'Symfony\\Bridge\\Twig\\Extension\\YamlExtension',
            'twig.extension.form.class' => 'Symfony\\Bridge\\Twig\\Extension\\FormExtension',
            'twig.extension.httpkernel.class' => 'Symfony\\Bridge\\Twig\\Extension\\HttpKernelExtension',
            'twig.extension.debug.stopwatch.class' => 'Symfony\\Bridge\\Twig\\Extension\\StopwatchExtension',
            'twig.extension.expression.class' => 'Symfony\\Bridge\\Twig\\Extension\\ExpressionExtension',
            'twig.form.engine.class' => 'Symfony\\Bridge\\Twig\\Form\\TwigRendererEngine',
            'twig.form.renderer.class' => 'Symfony\\Bridge\\Twig\\Form\\TwigRenderer',
            'twig.translation.extractor.class' => 'Symfony\\Bridge\\Twig\\Translation\\TwigExtractor',
            'twig.exception_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener',
            'twig.controller.exception.class' => 'Symfony\\Bundle\\TwigBundle\\Controller\\ExceptionController',
            'twig.controller.preview_error.class' => 'Symfony\\Bundle\\TwigBundle\\Controller\\PreviewErrorController',
            'twig.exception_listener.controller' => 'twig.controller.exception:showAction',
            'twig.form.resources' => array(
                0 => 'IvoryCKEditorBundle:Form:ckeditor_widget.html.twig',
                1 => 'form_div_layout.html.twig',
                2 => 'AmgPageBundle:Admin:Form/page_tree_widget.html.twig',
                3 => ':Admin:Form/hyperlink.html.twig',
                4 => ':Admin:Form/address.html.twig',
                5 => ':Admin:Form/copy_content_button.html.twig',
                6 => ':Admin:Form/geopoint.html.twig',
                7 => ':Admin:Form/construction_data_text.html.twig',
                8 => ':Admin:Form/construction_data_choice.html.twig',
                9 => ':Admin:Form/construction_data_geo_point.html.twig',
                10 => ':Admin:Form/construction_data_geo_polygon.html.twig',
                11 => ':Admin:Form/menu_tree_widget.html.twig',
                12 => ':Admin:Form/media_category_tree.html.twig',
                13 => ':Admin:Form/media_collection.html.twig',
                14 => ':Admin:Form/media_list.html.twig',
                15 => ':Admin:Form/secret_link.html.twig',
                16 => ':Admin:Form/image_type_extension.html.twig',
                17 => ':Admin:Form/collection_list.html.twig',
                18 => 'SonataCoreBundle:Form:datepicker.html.twig',
                19 => 'SonataMediaBundle:Form:media_widgets.html.twig',
                20 => ':Admin:Form/gif_generator.html.twig',
                21 => ':Form:re_captcha.html.twig',
                22 => 'SonataUserBundle:Form:form_admin_fields.html.twig',
                23 => 'LiipImagineBundle:Form:form_div_layout.html.twig',
            ),
            'monolog.logger.class' => 'Symfony\\Bridge\\Monolog\\Logger',
            'monolog.gelf.publisher.class' => 'Gelf\\MessagePublisher',
            'monolog.gelfphp.publisher.class' => 'Gelf\\Publisher',
            'monolog.handler.stream.class' => 'Monolog\\Handler\\StreamHandler',
            'monolog.handler.console.class' => 'Symfony\\Bridge\\Monolog\\Handler\\ConsoleHandler',
            'monolog.handler.group.class' => 'Monolog\\Handler\\GroupHandler',
            'monolog.handler.buffer.class' => 'Monolog\\Handler\\BufferHandler',
            'monolog.handler.rotating_file.class' => 'Monolog\\Handler\\RotatingFileHandler',
            'monolog.handler.syslog.class' => 'Monolog\\Handler\\SyslogHandler',
            'monolog.handler.syslogudp.class' => 'Monolog\\Handler\\SyslogUdpHandler',
            'monolog.handler.null.class' => 'Monolog\\Handler\\NullHandler',
            'monolog.handler.test.class' => 'Monolog\\Handler\\TestHandler',
            'monolog.handler.gelf.class' => 'Monolog\\Handler\\GelfHandler',
            'monolog.handler.rollbar.class' => 'Monolog\\Handler\\RollbarHandler',
            'monolog.handler.flowdock.class' => 'Monolog\\Handler\\FlowdockHandler',
            'monolog.handler.browser_console.class' => 'Monolog\\Handler\\BrowserConsoleHandler',
            'monolog.handler.firephp.class' => 'Symfony\\Bridge\\Monolog\\Handler\\FirePHPHandler',
            'monolog.handler.chromephp.class' => 'Symfony\\Bridge\\Monolog\\Handler\\ChromePhpHandler',
            'monolog.handler.debug.class' => 'Symfony\\Bridge\\Monolog\\Handler\\DebugHandler',
            'monolog.handler.swift_mailer.class' => 'Symfony\\Bridge\\Monolog\\Handler\\SwiftMailerHandler',
            'monolog.handler.native_mailer.class' => 'Monolog\\Handler\\NativeMailerHandler',
            'monolog.handler.socket.class' => 'Monolog\\Handler\\SocketHandler',
            'monolog.handler.pushover.class' => 'Monolog\\Handler\\PushoverHandler',
            'monolog.handler.raven.class' => 'Monolog\\Handler\\RavenHandler',
            'monolog.handler.newrelic.class' => 'Monolog\\Handler\\NewRelicHandler',
            'monolog.handler.hipchat.class' => 'Monolog\\Handler\\HipChatHandler',
            'monolog.handler.slack.class' => 'Monolog\\Handler\\SlackHandler',
            'monolog.handler.cube.class' => 'Monolog\\Handler\\CubeHandler',
            'monolog.handler.amqp.class' => 'Monolog\\Handler\\AmqpHandler',
            'monolog.handler.error_log.class' => 'Monolog\\Handler\\ErrorLogHandler',
            'monolog.handler.loggly.class' => 'Monolog\\Handler\\LogglyHandler',
            'monolog.handler.logentries.class' => 'Monolog\\Handler\\LogEntriesHandler',
            'monolog.handler.whatfailuregroup.class' => 'Monolog\\Handler\\WhatFailureGroupHandler',
            'monolog.activation_strategy.not_found.class' => 'Symfony\\Bundle\\MonologBundle\\NotFoundActivationStrategy',
            'monolog.handler.fingers_crossed.class' => 'Monolog\\Handler\\FingersCrossedHandler',
            'monolog.handler.fingers_crossed.error_level_activation_strategy.class' => 'Monolog\\Handler\\FingersCrossed\\ErrorLevelActivationStrategy',
            'monolog.handler.filter.class' => 'Monolog\\Handler\\FilterHandler',
            'monolog.handler.mongo.class' => 'Monolog\\Handler\\MongoDBHandler',
            'monolog.mongo.client.class' => 'MongoClient',
            'monolog.handler.elasticsearch.class' => 'Monolog\\Handler\\ElasticSearchHandler',
            'monolog.elastica.client.class' => 'Elastica\\Client',
            'monolog.swift_mailer.handlers' => array(
                0 => 'monolog.handler.swift',
            ),
            'monolog.handlers_to_channels' => array(
                'monolog.handler.main' => NULL,
            ),
            'swiftmailer.class' => 'Swift_Mailer',
            'swiftmailer.transport.sendmail.class' => 'Swift_Transport_SendmailTransport',
            'swiftmailer.transport.mail.class' => 'Swift_Transport_MailTransport',
            'swiftmailer.transport.failover.class' => 'Swift_Transport_FailoverTransport',
            'swiftmailer.plugin.redirecting.class' => 'Swift_Plugins_RedirectingPlugin',
            'swiftmailer.plugin.impersonate.class' => 'Swift_Plugins_ImpersonatePlugin',
            'swiftmailer.plugin.messagelogger.class' => 'Swift_Plugins_MessageLogger',
            'swiftmailer.plugin.antiflood.class' => 'Swift_Plugins_AntiFloodPlugin',
            'swiftmailer.transport.smtp.class' => 'Swift_Transport_EsmtpTransport',
            'swiftmailer.plugin.blackhole.class' => 'Swift_Plugins_BlackholePlugin',
            'swiftmailer.spool.file.class' => 'Swift_FileSpool',
            'swiftmailer.spool.memory.class' => 'Swift_MemorySpool',
            'swiftmailer.email_sender.listener.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener',
            'swiftmailer.data_collector.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\DataCollector\\MessageDataCollector',
            'swiftmailer.mailer.default.transport.name' => 'smtp',
            'swiftmailer.mailer.default.delivery.enabled' => true,
            'swiftmailer.mailer.default.transport.smtp.encryption' => NULL,
            'swiftmailer.mailer.default.transport.smtp.port' => 25,
            'swiftmailer.mailer.default.transport.smtp.host' => '127.0.0.1',
            'swiftmailer.mailer.default.transport.smtp.username' => NULL,
            'swiftmailer.mailer.default.transport.smtp.password' => NULL,
            'swiftmailer.mailer.default.transport.smtp.auth_mode' => NULL,
            'swiftmailer.mailer.default.transport.smtp.timeout' => 30,
            'swiftmailer.mailer.default.transport.smtp.source_ip' => NULL,
            'swiftmailer.spool.default.file.path' => '/var/www/html/main/shared/swiftmailer_spool/default',
            'swiftmailer.mailer.default.spool.enabled' => true,
            'swiftmailer.mailer.default.sender_address' => 'info-stroi@mos.ru',
            'swiftmailer.sender_address' => 'info-stroi@mos.ru',
            'swiftmailer.mailer.default.single_address' => NULL,
            'swiftmailer.spool.enabled' => true,
            'swiftmailer.delivery.enabled' => true,
            'swiftmailer.single_address' => NULL,
            'swiftmailer.mailers' => array(
                'default' => 'swiftmailer.mailer.default',
            ),
            'swiftmailer.default_mailer' => 'default',
            'assetic.asset_factory.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\AssetFactory',
            'assetic.asset_manager.class' => 'Assetic\\Factory\\LazyAssetManager',
            'assetic.asset_manager_cache_warmer.class' => 'Symfony\\Bundle\\AsseticBundle\\CacheWarmer\\AssetManagerCacheWarmer',
            'assetic.cached_formula_loader.class' => 'Assetic\\Factory\\Loader\\CachedFormulaLoader',
            'assetic.config_cache.class' => 'Assetic\\Cache\\ConfigCache',
            'assetic.config_loader.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Loader\\ConfigurationLoader',
            'assetic.config_resource.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Resource\\ConfigurationResource',
            'assetic.coalescing_directory_resource.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Resource\\CoalescingDirectoryResource',
            'assetic.directory_resource.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Resource\\DirectoryResource',
            'assetic.filter_manager.class' => 'Symfony\\Bundle\\AsseticBundle\\FilterManager',
            'assetic.worker.ensure_filter.class' => 'Assetic\\Factory\\Worker\\EnsureFilterWorker',
            'assetic.worker.cache_busting.class' => 'Assetic\\Factory\\Worker\\CacheBustingWorker',
            'assetic.value_supplier.class' => 'Symfony\\Bundle\\AsseticBundle\\DefaultValueSupplier',
            'assetic.node.paths' => array(
            ),
            'assetic.cache_dir' => (__DIR__.'/assetic'),
            'assetic.bundles' => array(
            ),
            'assetic.twig_extension.class' => 'Symfony\\Bundle\\AsseticBundle\\Twig\\AsseticExtension',
            'assetic.twig_formula_loader.class' => 'Assetic\\Extension\\Twig\\TwigFormulaLoader',
            'assetic.helper.dynamic.class' => 'Symfony\\Bundle\\AsseticBundle\\Templating\\DynamicAsseticHelper',
            'assetic.helper.static.class' => 'Symfony\\Bundle\\AsseticBundle\\Templating\\StaticAsseticHelper',
            'assetic.php_formula_loader.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Loader\\AsseticHelperFormulaLoader',
            'assetic.debug' => false,
            'assetic.use_controller' => false,
            'assetic.enable_profiler' => false,
            'assetic.read_from' => ($this->targetDirs[2].'/../web'),
            'assetic.write_to' => ($this->targetDirs[2].'/../web'),
            'assetic.variables' => array(
            ),
            'assetic.java.bin' => '/usr/bin/java',
            'assetic.node.bin' => '/usr/bin/node',
            'assetic.ruby.bin' => '/usr/bin/ruby',
            'assetic.sass.bin' => '/usr/bin/sass',
            'assetic.filter.cssrewrite.class' => 'Assetic\\Filter\\CssRewriteFilter',
            'assetic.filter.lessphp.class' => 'Assetic\\Filter\\LessphpFilter',
            'assetic.filter.lessphp.presets' => array(
            ),
            'assetic.filter.lessphp.paths' => array(
            ),
            'assetic.filter.lessphp.formatter' => 'compressed',
            'assetic.filter.lessphp.preserve_comments' => false,
            'assetic.twig_extension.functions' => array(
            ),
            'doctrine_cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine_cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine_cache.file_system.class' => 'Doctrine\\Common\\Cache\\FilesystemCache',
            'doctrine_cache.php_file.class' => 'Doctrine\\Common\\Cache\\PhpFileCache',
            'doctrine_cache.mongodb.class' => 'Doctrine\\Common\\Cache\\MongoDBCache',
            'doctrine_cache.mongodb.collection.class' => 'MongoCollection',
            'doctrine_cache.mongodb.connection.class' => 'MongoClient',
            'doctrine_cache.mongodb.server' => 'localhost:27017',
            'doctrine_cache.riak.class' => 'Doctrine\\Common\\Cache\\RiakCache',
            'doctrine_cache.riak.bucket.class' => 'Riak\\Bucket',
            'doctrine_cache.riak.connection.class' => 'Riak\\Connection',
            'doctrine_cache.riak.bucket_property_list.class' => 'Riak\\BucketPropertyList',
            'doctrine_cache.riak.host' => 'localhost',
            'doctrine_cache.riak.port' => 8087,
            'doctrine_cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine_cache.memcache.connection.class' => 'Memcache',
            'doctrine_cache.memcache.host' => 'memcached',
            'doctrine_cache.memcache.port' => 11211,
            'doctrine_cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine_cache.memcached.connection.class' => 'Memcached',
            'doctrine_cache.memcached.host' => 'memcached',
            'doctrine_cache.memcached.port' => 11211,
            'doctrine_cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine_cache.redis.connection.class' => 'Redis',
            'doctrine_cache.redis.host' => 'redis',
            'doctrine_cache.redis.port' => 6379,
            'doctrine_cache.couchbase.class' => 'Doctrine\\Common\\Cache\\CouchbaseCache',
            'doctrine_cache.couchbase.connection.class' => 'Couchbase',
            'doctrine_cache.couchbase.hostnames' => 'localhost:8091',
            'doctrine_cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine_cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine_cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine_cache.security.acl.cache.class' => 'Doctrine\\Bundle\\DoctrineCacheBundle\\Acl\\Model\\AclCache',
            'doctrine.dbal.logger.chain.class' => 'Doctrine\\DBAL\\Logging\\LoggerChain',
            'doctrine.dbal.logger.profiling.class' => 'Doctrine\\DBAL\\Logging\\DebugStack',
            'doctrine.dbal.logger.class' => 'Symfony\\Bridge\\Doctrine\\Logger\\DbalLogger',
            'doctrine.dbal.configuration.class' => 'Doctrine\\DBAL\\Configuration',
            'doctrine.data_collector.class' => 'Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector',
            'doctrine.dbal.connection.event_manager.class' => 'Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager',
            'doctrine.dbal.connection_factory.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory',
            'doctrine.dbal.events.mysql_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit',
            'doctrine.dbal.events.oracle_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit',
            'doctrine.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Registry',
            'doctrine.entity_managers' => array(
                'default' => 'doctrine.orm.default_entity_manager',
            ),
            'doctrine.default_entity_manager' => 'default',
            'doctrine.dbal.connection_factory.types' => array(
                'json' => array(
                    'class' => 'Sonata\\Doctrine\\Types\\JsonType',
                    'commented' => true,
                ),
                'multipolygon' => array(
                    'class' => 'CrEOF\\Spatial\\DBAL\\Types\\Geometry\\MultiPolygonType',
                    'commented' => true,
                ),
                'geometry' => array(
                    'class' => 'CrEOF\\Spatial\\DBAL\\Types\\GeometryType',
                    'commented' => true,
                ),
                'point' => array(
                    'class' => 'CrEOF\\Spatial\\DBAL\\Types\\Geometry\\PointType',
                    'commented' => true,
                ),
            ),
            'doctrine.connections' => array(
                'default' => 'doctrine.dbal.default_connection',
            ),
            'doctrine.default_connection' => 'default',
            'doctrine.orm.configuration.class' => 'Doctrine\\ORM\\Configuration',
            'doctrine.orm.entity_manager.class' => 'Doctrine\\ORM\\EntityManager',
            'doctrine.orm.manager_configurator.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ManagerConfigurator',
            'doctrine.orm.cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine.orm.cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine.orm.cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine.orm.cache.memcache_host' => 'localhost',
            'doctrine.orm.cache.memcache_port' => 11211,
            'doctrine.orm.cache.memcache_instance.class' => 'Memcache',
            'doctrine.orm.cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine.orm.cache.memcached_host' => 'memcached',
            'doctrine.orm.cache.memcached_port' => 11211,
            'doctrine.orm.cache.memcached_instance.class' => 'Memcached',
            'doctrine.orm.cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine.orm.cache.redis_host' => 'redis',
            'doctrine.orm.cache.redis_port' => 6379,
            'doctrine.orm.cache.redis_instance.class' => 'Redis',
            'doctrine.orm.cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine.orm.cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine.orm.cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine.orm.metadata.driver_chain.class' => 'Doctrine\\Common\\Persistence\\Mapping\\Driver\\MappingDriverChain',
            'doctrine.orm.metadata.annotation.class' => 'Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver',
            'doctrine.orm.metadata.xml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver',
            'doctrine.orm.metadata.yml.class' => 'Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver',
            'doctrine.orm.metadata.php.class' => 'Doctrine\\ORM\\Mapping\\Driver\\PHPDriver',
            'doctrine.orm.metadata.staticphp.class' => 'Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver',
            'doctrine.orm.proxy_cache_warmer.class' => 'Symfony\\Bridge\\Doctrine\\CacheWarmer\\ProxyCacheWarmer',
            'form.type_guesser.doctrine.class' => 'Symfony\\Bridge\\Doctrine\\Form\\DoctrineOrmTypeGuesser',
            'doctrine.orm.validator.unique.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntityValidator',
            'doctrine.orm.validator_initializer.class' => 'Symfony\\Bridge\\Doctrine\\Validator\\DoctrineInitializer',
            'doctrine.orm.security.user.provider.class' => 'Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider',
            'doctrine.orm.listeners.resolve_target_entity.class' => 'Doctrine\\ORM\\Tools\\ResolveTargetEntityListener',
            'doctrine.orm.listeners.attach_entity_listeners.class' => 'Doctrine\\ORM\\Tools\\AttachEntityListenersListener',
            'doctrine.orm.naming_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultNamingStrategy',
            'doctrine.orm.naming_strategy.underscore.class' => 'Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy',
            'doctrine.orm.quote_strategy.default.class' => 'Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy',
            'doctrine.orm.quote_strategy.ansi.class' => 'Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy',
            'doctrine.orm.entity_listener_resolver.class' => 'Doctrine\\ORM\\Mapping\\DefaultEntityListenerResolver',
            'doctrine.orm.second_level_cache.default_cache_factory.class' => 'Doctrine\\ORM\\Cache\\DefaultCacheFactory',
            'doctrine.orm.second_level_cache.default_region.class' => 'Doctrine\\ORM\\Cache\\Region\\DefaultRegion',
            'doctrine.orm.second_level_cache.filelock_region.class' => 'Doctrine\\ORM\\Cache\\Region\\FileLockRegion',
            'doctrine.orm.second_level_cache.logger_chain.class' => 'Doctrine\\ORM\\Cache\\Logging\\CacheLoggerChain',
            'doctrine.orm.second_level_cache.logger_statistics.class' => 'Doctrine\\ORM\\Cache\\Logging\\StatisticsCacheLogger',
            'doctrine.orm.second_level_cache.cache_configuration.class' => 'Doctrine\\ORM\\Cache\\CacheConfiguration',
            'doctrine.orm.second_level_cache.regions_configuration.class' => 'Doctrine\\ORM\\Cache\\RegionsConfiguration',
            'doctrine.orm.auto_generate_proxy_classes' => false,
            'doctrine.orm.proxy_dir' => (__DIR__.'/doctrine/orm/Proxies'),
            'doctrine.orm.proxy_namespace' => 'Proxies',
            'sensio_framework_extra.view.guesser.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Templating\\TemplateGuesser',
            'sensio_framework_extra.controller.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ControllerListener',
            'sensio_framework_extra.routing.loader.annot_dir.class' => 'Symfony\\Component\\Routing\\Loader\\AnnotationDirectoryLoader',
            'sensio_framework_extra.routing.loader.annot_file.class' => 'Symfony\\Component\\Routing\\Loader\\AnnotationFileLoader',
            'sensio_framework_extra.routing.loader.annot_class.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Routing\\AnnotatedRouteControllerLoader',
            'sensio_framework_extra.converter.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ParamConverterListener',
            'sensio_framework_extra.converter.manager.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\ParamConverterManager',
            'sensio_framework_extra.converter.doctrine.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\DoctrineParamConverter',
            'sensio_framework_extra.converter.datetime.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\DateTimeParamConverter',
            'sensio_framework_extra.view.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\TemplateListener',
            'fos_user.validator.password.class' => 'FOS\\UserBundle\\Validator\\PasswordValidator',
            'fos_user.validator.unique.class' => 'FOS\\UserBundle\\Validator\\UniqueValidator',
            'fos_user.security.interactive_login_listener.class' => 'FOS\\UserBundle\\Security\\InteractiveLoginListener',
            'fos_user.security.login_manager.class' => 'FOS\\UserBundle\\Security\\LoginManager',
            'fos_user.resetting.email.template' => 'FOSUserBundle:Resetting:email.txt.twig',
            'fos_user.registration.confirmation.template' => 'FOSUserBundle:Registration:email.txt.twig',
            'fos_user.storage' => 'orm',
            'fos_user.firewall_name' => 'admin',
            'fos_user.model_manager_name' => NULL,
            'fos_user.model.user.class' => 'Application\\Sonata\\UserBundle\\Entity\\User',
            'fos_user.template.engine' => 'twig',
            'fos_user.profile.form.type' => 'fos_user_profile',
            'fos_user.profile.form.name' => 'fos_user_profile_form',
            'fos_user.profile.form.validation_groups' => array(
                0 => 'Profile',
                1 => 'Default',
            ),
            'fos_user.registration.confirmation.from_email' => array(
                'webmaster@example.com' => 'webmaster',
            ),
            'fos_user.registration.confirmation.enabled' => false,
            'fos_user.registration.form.type' => 'fos_user_registration',
            'fos_user.registration.form.name' => 'fos_user_registration_form',
            'fos_user.registration.form.validation_groups' => array(
                0 => 'Registration',
                1 => 'Default',
            ),
            'fos_user.change_password.form.type' => 'fos_user_change_password',
            'fos_user.change_password.form.name' => 'fos_user_change_password_form',
            'fos_user.change_password.form.validation_groups' => array(
                0 => 'ChangePassword',
                1 => 'Default',
            ),
            'fos_user.resetting.email.from_email' => array(
                'info-stroi@mos.ru' => 'stroi.mos.ru',
            ),
            'fos_user.resetting.token_ttl' => 86400,
            'fos_user.resetting.form.type' => 'fos_user_resetting',
            'fos_user.resetting.form.name' => 'fos_user_resetting_form',
            'fos_user.resetting.form.validation_groups' => array(
                0 => 'ResetPassword',
                1 => 'Default',
            ),
            'fos_user.group_manager.class' => 'FOS\\UserBundle\\Doctrine\\GroupManager',
            'fos_user.model.group.class' => 'Application\\Sonata\\UserBundle\\Entity\\Group',
            'fos_user.group.form.type' => 'fos_user_group',
            'fos_user.group.form.name' => 'fos_user_group_form',
            'fos_user.group.form.validation_groups' => array(
                0 => 'Registration',
                1 => 'Default',
            ),
            'sonata.core.flashmessage.manager.class' => 'Sonata\\CoreBundle\\FlashMessage\\FlashManager',
            'sonata.core.twig.extension.flashmessage.class' => 'Sonata\\CoreBundle\\Twig\\Extension\\FlashMessageExtension',
            'sonata.core.form_type' => 'standard',
            'sonata.block.service.container.class' => 'Sonata\\BlockBundle\\Block\\Service\\ContainerBlockService',
            'sonata.block.service.empty.class' => 'Sonata\\BlockBundle\\Block\\Service\\EmptyBlockService',
            'sonata.block.service.text.class' => 'Sonata\\BlockBundle\\Block\\Service\\TextBlockService',
            'sonata.block.service.rss.class' => 'Sonata\\BlockBundle\\Block\\Service\\RssBlockService',
            'sonata.block.service.menu.class' => 'Sonata\\BlockBundle\\Block\\Service\\MenuBlockService',
            'sonata.block.service.template.class' => 'Sonata\\BlockBundle\\Block\\Service\\TemplateBlockService',
            'sonata.block.exception.strategy.manager.class' => 'Sonata\\BlockBundle\\Exception\\Strategy\\StrategyManager',
            'sonata.block.container.types' => array(
                0 => 'sonata.block.service.container',
                1 => 'sonata.page.block.container',
                2 => 'cmf.block.container',
                3 => 'cmf.block.slideshow',
            ),
            'sonata_block.blocks' => array(
                'sonata.admin.block.admin_list' => array(
                    'contexts' => array(
                        0 => 'admin',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'sonata.user.block.menu' => array(
                    'contexts' => array(
                        0 => 'admin',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'sonata.user.block.account' => array(
                    'contexts' => array(
                        0 => 'admin',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'post_list' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'last_posts' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'news_of_the_day' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'animated_banner' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'homepage_news' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'more_like_this' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'gallery_list' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'video_list' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'metro_vitdeo_tour' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'infographics_list' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'gallery_pick' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'video_picks' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'infographics_picks' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'rubrics_list' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'simple_template' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'document_list' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'construction_list' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'organization_list' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'contact_person_list' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'recent_page' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'metro_constructed_stations_block' => array(
                    'contexts' => array(
                        0 => 'cms',
                        1 => 'custom',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'hot_news_block' => array(
                    'contexts' => array(
                        0 => 'cms',
                        1 => 'custom',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'banner_announcements_dk' => array(
                    'contexts' => array(
                        0 => 'cms',
                        1 => 'custom',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'service_banner' => array(
                    'contexts' => array(
                        0 => 'cms',
                        1 => 'custom',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'road_construction_map_banner' => array(
                    'contexts' => array(
                        0 => 'cms',
                        1 => 'custom',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'road_interchange_banner' => array(
                    'contexts' => array(
                        0 => 'cms',
                        1 => 'custom',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'destruction_banner' => array(
                    'contexts' => array(
                        0 => 'cms',
                        1 => 'custom',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'renovation_banner' => array(
                    'contexts' => array(
                        0 => 'cms',
                        1 => 'custom',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'header_search_filters' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'announcement' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'subordinate_homepage_posts' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'subordinate_smi' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'subordinate_media' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'subordinate_publications_list' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'subordinate_header' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'subordinate_direction' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'material_owner_link' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'mobile_block_post_list' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'mobile_block_construction_list' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
                'email_subscription_form_block' => array(
                    'contexts' => array(
                        0 => 'cms',
                    ),
                    'cache' => 'sonata.cache.noop',
                    'settings' => array(
                    ),
                ),
            ),
            'sonata_block.blocks_by_class' => array(
                'Sonata\\BlockBundle\\Model\\Block' => array(
                    'cache' => 'sonata.cache.memcached',
                    'settings' => array(
                    ),
                ),
                'AppBundle\\Entity\\Block' => array(
                    'cache' => 'sonata.cache.memcached',
                    'settings' => array(
                    ),
                ),
            ),
            'sonata_block.cache_blocks' => array(
                'by_type' => array(
                    'sonata.admin.block.admin_list' => 'sonata.cache.noop',
                    'sonata.user.block.menu' => 'sonata.cache.noop',
                    'sonata.user.block.account' => 'sonata.cache.noop',
                    'post_list' => 'sonata.cache.noop',
                    'last_posts' => 'sonata.cache.noop',
                    'news_of_the_day' => 'sonata.cache.noop',
                    'animated_banner' => 'sonata.cache.noop',
                    'homepage_news' => 'sonata.cache.noop',
                    'more_like_this' => 'sonata.cache.noop',
                    'gallery_list' => 'sonata.cache.noop',
                    'video_list' => 'sonata.cache.noop',
                    'metro_vitdeo_tour' => 'sonata.cache.noop',
                    'infographics_list' => 'sonata.cache.noop',
                    'gallery_pick' => 'sonata.cache.noop',
                    'video_picks' => 'sonata.cache.noop',
                    'infographics_picks' => 'sonata.cache.noop',
                    'rubrics_list' => 'sonata.cache.noop',
                    'simple_template' => 'sonata.cache.noop',
                    'document_list' => 'sonata.cache.noop',
                    'construction_list' => 'sonata.cache.noop',
                    'organization_list' => 'sonata.cache.noop',
                    'contact_person_list' => 'sonata.cache.noop',
                    'recent_page' => 'sonata.cache.noop',
                    'metro_constructed_stations_block' => 'sonata.cache.noop',
                    'hot_news_block' => 'sonata.cache.noop',
                    'banner_announcements_dk' => 'sonata.cache.noop',
                    'service_banner' => 'sonata.cache.noop',
                    'road_construction_map_banner' => 'sonata.cache.noop',
                    'road_interchange_banner' => 'sonata.cache.noop',
                    'destruction_banner' => 'sonata.cache.noop',
                    'renovation_banner' => 'sonata.cache.noop',
                    'header_search_filters' => 'sonata.cache.noop',
                    'announcement' => 'sonata.cache.noop',
                    'subordinate_homepage_posts' => 'sonata.cache.noop',
                    'subordinate_smi' => 'sonata.cache.noop',
                    'subordinate_media' => 'sonata.cache.noop',
                    'subordinate_publications_list' => 'sonata.cache.noop',
                    'subordinate_header' => 'sonata.cache.noop',
                    'subordinate_direction' => 'sonata.cache.noop',
                    'material_owner_link' => 'sonata.cache.noop',
                    'mobile_block_post_list' => 'sonata.cache.noop',
                    'mobile_block_construction_list' => 'sonata.cache.noop',
                    'email_subscription_form_block' => 'sonata.cache.noop',
                ),
                'by_class' => array(
                    'Sonata\\BlockBundle\\Model\\Block' => 'sonata.cache.memcached',
                    'AppBundle\\Entity\\Block' => 'sonata.cache.memcached',
                ),
            ),
            'knp_menu.factory.class' => 'Knp\\Menu\\MenuFactory',
            'knp_menu.factory_extension.routing.class' => 'Knp\\Menu\\Integration\\Symfony\\RoutingExtension',
            'knp_menu.helper.class' => 'Knp\\Menu\\Twig\\Helper',
            'knp_menu.matcher.class' => 'Knp\\Menu\\Matcher\\Matcher',
            'knp_menu.menu_provider.chain.class' => 'Knp\\Menu\\Provider\\ChainProvider',
            'knp_menu.menu_provider.container_aware.class' => 'Knp\\Bundle\\MenuBundle\\Provider\\ContainerAwareProvider',
            'knp_menu.menu_provider.builder_alias.class' => 'Knp\\Bundle\\MenuBundle\\Provider\\BuilderAliasProvider',
            'knp_menu.renderer_provider.class' => 'Knp\\Bundle\\MenuBundle\\Renderer\\ContainerAwareProvider',
            'knp_menu.renderer.list.class' => 'Knp\\Menu\\Renderer\\ListRenderer',
            'knp_menu.renderer.list.options' => array(
            ),
            'knp_menu.listener.voters.class' => 'Knp\\Bundle\\MenuBundle\\EventListener\\VoterInitializerListener',
            'knp_menu.voter.router.class' => 'Knp\\Menu\\Matcher\\Voter\\RouteVoter',
            'knp_menu.twig.extension.class' => 'Knp\\Menu\\Twig\\MenuExtension',
            'knp_menu.renderer.twig.class' => 'Knp\\Menu\\Renderer\\TwigRenderer',
            'knp_menu.renderer.twig.options' => array(
            ),
            'knp_menu.renderer.twig.template' => 'knp_menu.html.twig',
            'knp_menu.default_renderer' => 'twig',
            'sonata_doctrine_orm_admin.audit.force' => false,
            'sonata.admin.manipulator.acl.object.orm.class' => 'Sonata\\DoctrineORMAdminBundle\\Util\\ObjectAclManipulator',
            'sonata_doctrine_orm_admin.entity_manager' => NULL,
            'sonata_doctrine_orm_admin.templates' => array(
                'types' => array(
                    'list' => array(
                        'array' => 'SonataAdminBundle:CRUD:list_array.html.twig',
                        'boolean' => 'SonataAdminBundle:CRUD:list_boolean.html.twig',
                        'date' => 'SonataIntlBundle:CRUD:list_date.html.twig',
                        'time' => 'SonataAdminBundle:CRUD:list_time.html.twig',
                        'datetime' => 'SonataIntlBundle:CRUD:list_datetime.html.twig',
                        'text' => 'SonataAdminBundle:CRUD:list_string.html.twig',
                        'textarea' => 'SonataAdminBundle:CRUD:list_string.html.twig',
                        'email' => 'SonataAdminBundle:CRUD:list_string.html.twig',
                        'trans' => 'SonataAdminBundle:CRUD:list_trans.html.twig',
                        'string' => 'SonataAdminBundle:CRUD:list_string.html.twig',
                        'smallint' => 'SonataIntlBundle:CRUD:list_decimal.html.twig',
                        'bigint' => 'SonataIntlBundle:CRUD:list_decimal.html.twig',
                        'integer' => 'SonataIntlBundle:CRUD:list_decimal.html.twig',
                        'decimal' => 'SonataIntlBundle:CRUD:list_decimal.html.twig',
                        'identifier' => 'SonataAdminBundle:CRUD:list_string.html.twig',
                        'currency' => 'SonataIntlBundle:CRUD:list_currency.html.twig',
                        'percent' => 'SonataIntlBundle:CRUD:list_percent.html.twig',
                        'choice' => 'SonataAdminBundle:CRUD:list_choice.html.twig',
                        'url' => 'SonataAdminBundle:CRUD:list_url.html.twig',
                        'html' => 'SonataAdminBundle:CRUD:list_html.html.twig',
                    ),
                    'show' => array(
                        'array' => 'SonataAdminBundle:CRUD:show_array.html.twig',
                        'boolean' => 'SonataAdminBundle:CRUD:show_boolean.html.twig',
                        'date' => 'SonataIntlBundle:CRUD:show_date.html.twig',
                        'time' => 'SonataAdminBundle:CRUD:show_time.html.twig',
                        'datetime' => 'SonataIntlBundle:CRUD:show_datetime.html.twig',
                        'text' => 'SonataAdminBundle:CRUD:base_show_field.html.twig',
                        'trans' => 'SonataAdminBundle:CRUD:show_trans.html.twig',
                        'string' => 'SonataAdminBundle:CRUD:base_show_field.html.twig',
                        'smallint' => 'SonataIntlBundle:CRUD:show_decimal.html.twig',
                        'bigint' => 'SonataIntlBundle:CRUD:show_decimal.html.twig',
                        'integer' => 'SonataIntlBundle:CRUD:show_decimal.html.twig',
                        'decimal' => 'SonataIntlBundle:CRUD:show_decimal.html.twig',
                        'currency' => 'SonataIntlBundle:CRUD:show_currency.html.twig',
                        'percent' => 'SonataIntlBundle:CRUD:show_percent.html.twig',
                        'choice' => 'SonataAdminBundle:CRUD:show_choice.html.twig',
                        'url' => 'SonataAdminBundle:CRUD:show_url.html.twig',
                        'html' => 'SonataAdminBundle:CRUD:show_html.html.twig',
                    ),
                ),
                'form' => array(
                    0 => ':SonataAdmin/Form:form_admin_fields.html.twig',
                ),
                'filter' => array(
                    0 => 'SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig',
                ),
            ),
            'sonata.admin.configuration.templates' => array(
                'history_revision_timestamp' => 'SonataIntlBundle:CRUD:history_revision_timestamp.html.twig',
                'user_block' => 'SonataUserBundle:Admin/Core:user_block.html.twig',
                'edit' => 'AmgAdminBundle::locking_edit.html.twig',
                'history' => '::SonataAdmin/history.html.twig',
                'show_compare' => '::SonataAdmin/show_compare.html.twig',
                'layout' => '::SonataAdmin/standard_layout.html.twig',
                'pager_links' => ':SonataAdmin:Pager/links.html.twig',
                'inner_list_row' => ':SonataAdmin:CRUD/list_inner_row.html.twig',
                'add_block' => 'SonataAdminBundle:Core:add_block.html.twig',
                'ajax' => 'SonataAdminBundle::ajax_layout.html.twig',
                'dashboard' => 'SonataAdminBundle:Core:dashboard.html.twig',
                'search' => 'SonataAdminBundle:Core:search.html.twig',
                'list' => 'SonataAdminBundle:CRUD:list.html.twig',
                'filter' => 'SonataAdminBundle:Form:filter_admin_fields.html.twig',
                'show' => 'SonataAdminBundle:CRUD:show.html.twig',
                'preview' => 'SonataAdminBundle:CRUD:preview.html.twig',
                'acl' => 'SonataAdminBundle:CRUD:acl.html.twig',
                'action' => 'SonataAdminBundle:CRUD:action.html.twig',
                'select' => 'SonataAdminBundle:CRUD:list__select.html.twig',
                'list_block' => 'SonataAdminBundle:Block:block_admin_list.html.twig',
                'search_result_block' => 'SonataAdminBundle:Block:block_search_result.html.twig',
                'short_object_description' => 'SonataAdminBundle:Helper:short-object-description.html.twig',
                'delete' => 'SonataAdminBundle:CRUD:delete.html.twig',
                'batch' => 'SonataAdminBundle:CRUD:list__batch.html.twig',
                'batch_confirmation' => 'SonataAdminBundle:CRUD:batch_confirmation.html.twig',
                'base_list_field' => 'SonataAdminBundle:CRUD:base_list_field.html.twig',
                'pager_results' => 'SonataAdminBundle:Pager:results.html.twig',
                'tab_menu_template' => 'SonataAdminBundle:Core:tab_menu_template.html.twig',
            ),
            'sonata.admin.configuration.admin_services' => array(
                'admin.gallery' => array(
                    'form_contractor' => 'admin.media_collection_contractor',
                ),
                'admin.newsletter' => array(
                    'form_contractor' => 'admin.media_collection_contractor',
                ),
            ),
            'sonata.admin.configuration.dashboard_groups' => array(
            ),
            'sonata.admin.configuration.dashboard_blocks' => array(
                0 => array(
                    'position' => 'left',
                    'settings' => array(
                    ),
                    'type' => 'sonata.admin.block.admin_list',
                ),
            ),
            'sonata.admin.security.acl_user_manager' => 'fos_user.user_manager',
            'sonata.admin.configuration.security.information' => array(
                'EDIT' => array(
                    0 => 'EDIT',
                ),
                'LIST' => array(
                    0 => 'LIST',
                ),
                'CREATE' => array(
                    0 => 'CREATE',
                ),
                'VIEW' => array(
                    0 => 'VIEW',
                ),
                'DELETE' => array(
                    0 => 'DELETE',
                ),
                'MASTER' => array(
                    0 => 'MASTER',
                ),
            ),
            'sonata.admin.configuration.security.admin_permissions' => array(
                0 => 'CREATE',
                1 => 'LIST',
                2 => 'DELETE',
                3 => 'UNDELETE',
                4 => 'EXPORT',
                5 => 'OPERATOR',
                6 => 'MASTER',
            ),
            'sonata.admin.configuration.security.object_permissions' => array(
                0 => 'VIEW',
                1 => 'EDIT',
                2 => 'DELETE',
                3 => 'UNDELETE',
                4 => 'OPERATOR',
                5 => 'MASTER',
                6 => 'OWNER',
            ),
            'sonata.admin.security.handler.noop.class' => 'Sonata\\AdminBundle\\Security\\Handler\\NoopSecurityHandler',
            'sonata.admin.security.handler.role.class' => 'Sonata\\AdminBundle\\Security\\Handler\\RoleSecurityHandler',
            'sonata.admin.security.handler.acl.class' => 'Sonata\\AdminBundle\\Security\\Handler\\AclSecurityHandler',
            'sonata.admin.security.mask.builder.class' => 'Sonata\\AdminBundle\\Security\\Acl\\Permission\\MaskBuilder',
            'sonata.admin.manipulator.acl.admin.class' => 'Sonata\\AdminBundle\\Util\\AdminAclManipulator',
            'sonata.admin.object.manipulator.acl.admin.class' => 'Sonata\\AdminBundle\\Util\\AdminObjectAclManipulator',
            'sonata.admin.extension.map' => array(
                'app.admin.extension.draft' => array(
                    'admins' => array(
                        0 => 'admin.post',
                        1 => 'admin.construction',
                        2 => 'amg_page.admin.page',
                    ),
                    'excludes' => array(
                    ),
                    'implements' => array(
                    ),
                    'extends' => array(
                    ),
                    'instanceof' => array(
                    ),
                ),
            ),
            'sonata.admin.configuration.filters.persist' => false,
            'sonata.user.admin.groupname' => 'sonata_user',
            'sonata.user.block.breadcrumb_index.class' => 'Sonata\\UserBundle\\Block\\Breadcrumb\\UserIndexBreadcrumbBlockService',
            'sonata.user.block.breadcrumb_profile.class' => 'Sonata\\UserBundle\\Block\\Breadcrumb\\UserProfileBreadcrumbBlockService',
            'sonata.user.admin.user.class' => 'Application\\Sonata\\UserBundle\\Admin\\UserAdmin',
            'sonata.user.admin.group.class' => 'Application\\Sonata\\UserBundle\\Admin\\GroupAdmin',
            'sonata.user.admin.user.entity' => 'Application\\Sonata\\UserBundle\\Entity\\User',
            'sonata.user.admin.group.entity' => 'Application\\Sonata\\UserBundle\\Entity\\Group',
            'sonata.user.admin.user.translation_domain' => 'SonataUserBundle',
            'sonata.user.admin.group.translation_domain' => 'SonataUserBundle',
            'sonata.user.admin.user.controller' => 'AppBundle:Admin\\UserCRUD',
            'sonata.user.admin.group.controller' => 'SonataAdminBundle:CRUD',
            'sonata.user.default_avatar' => 'bundles/sonatauser/default_avatar.png',
            'sonata.user.impersonating' => array(
                'route' => 'sonata_admin_dashboard',
                'parameters' => array(
                ),
            ),
            'sonata.user.google.authenticator.enabled' => false,
            'sonata.user.profile.form.type' => 'app_user_profile',
            'sonata.user.profile.form.name' => 'sonata_user_profile_form',
            'sonata.user.profile.form.validation_groups' => array(
                0 => 'Profile',
                1 => 'Default',
            ),
            'sonata.user.register.confirm.redirect_route' => 'sonata_user_profile_show',
            'sonata.user.register.confirm.redirect_route_params' => array(
            ),
            'sonata.user.configuration.profile_blocks' => array(
                0 => array(
                    'position' => 'left',
                    'settings' => array(
                        'content' => '<h2>Welcome!</h2> This is a sample user profile dashboard, feel free to override it in the configuration!',
                    ),
                    'type' => 'sonata.block.service.text',
                ),
            ),
            'sonata.user.registration.form.options' => array(
            ),
            'sonata.user.registration.form.type' => 'sonata_user_registration',
            'sonata.user.registration.form.name' => 'sonata_user_registration_form',
            'sonata.user.registration.form.validation_groups' => array(
                0 => 'Registration',
                1 => 'Default',
            ),
            'sonata.media.provider.dailymotion.class' => 'Sonata\\MediaBundle\\Provider\\DailyMotionProvider',
            'sonata.media.provider.vimeo.class' => 'Sonata\\MediaBundle\\Provider\\VimeoProvider',
            'sonata.media.thumbnail.format' => 'Sonata\\MediaBundle\\Thumbnail\\FormatThumbnail',
            'sonata.media.thumbnail.format.default' => 'jpg',
            'sonata.media.thumbnail.liip_imagine' => 'Sonata\\MediaBundle\\Thumbnail\\LiipImagineThumbnail',
            'sonata.media.pool.class' => 'Sonata\\MediaBundle\\Provider\\Pool',
            'sonata.media.resizer.simple.class' => 'Sonata\\MediaBundle\\Resizer\\SimpleResizer',
            'sonata.media.resizer.square.class' => 'Sonata\\MediaBundle\\Resizer\\SquareResizer',
            'sonata.media.block.media.class' => 'Sonata\\MediaBundle\\Block\\MediaBlockService',
            'sonata.media.block.feature_media.class' => 'Sonata\\MediaBundle\\Block\\FeatureMediaBlockService',
            'sonata.media.block.gallery.class' => 'Sonata\\MediaBundle\\Block\\GalleryBlockService',
            'sonata.media.metadata.proxy.class' => 'Sonata\\MediaBundle\\Metadata\\ProxyMetadataBuilder',
            'sonata.media.metadata.amazon.class' => 'Sonata\\MediaBundle\\Metadata\\AmazonMetadataBuilder',
            'sonata.media.metadata.noop.class' => 'Sonata\\MediaBundle\\Metadata\\NoopMetadataBuilder',
            'sonata.media.adapater.filesystem.opencloud.class' => '',
            'sonata.media.block.breadcrumb_view.class' => 'Sonata\\MediaBundle\\Block\\Breadcrumb\\GalleryViewBreadcrumbBlockService',
            'sonata.media.block.breadcrumb_index.class' => 'Sonata\\MediaBundle\\Block\\Breadcrumb\\GalleryIndexBreadcrumbBlockService',
            'sonata.media.block.breadcrumb_media.class' => 'Sonata\\MediaBundle\\Block\\Breadcrumb\\MediaViewBreadcrumbBlockService',
            'sonata.media.manager.media.class' => 'Sonata\\MediaBundle\\Entity\\MediaManager',
            'sonata.media.manager.gallery.class' => 'Sonata\\MediaBundle\\Entity\\GalleryManager',
            'sonata.media.admin.media.translation_domain' => 'SonataMediaBundle',
            'sonata.media.admin.gallery.class' => 'Sonata\\MediaBundle\\Admin\\GalleryAdmin',
            'sonata.media.admin.gallery.controller' => 'SonataMediaBundle:GalleryAdmin',
            'sonata.media.admin.gallery.translation_domain' => 'SonataMediaBundle',
            'sonata.media.admin.gallery_has_media.class' => 'Sonata\\MediaBundle\\Admin\\GalleryHasMediaAdmin',
            'sonata.media.admin.gallery_has_media.controller' => 'SonataAdminBundle:CRUD',
            'sonata.media.admin.gallery_has_media.translation_domain' => 'SonataMediaBundle',
            'sonata.media.resizer.simple.adapter.mode' => 'inset',
            'sonata.media.resizer.square.adapter.mode' => 'inset',
            'sonata.media.admin.media.entity' => 'Application\\Sonata\\MediaBundle\\Entity\\Media',
            'sonata.media.admin.gallery.entity' => 'Application\\Sonata\\MediaBundle\\Entity\\Gallery',
            'sonata.media.admin.gallery_has_media.entity' => 'Application\\Sonata\\MediaBundle\\Entity\\GalleryHasMedia',
            'sonata.media.media.class' => 'Application\\Sonata\\MediaBundle\\Entity\\Media',
            'sonata.media.gallery.class' => 'Application\\Sonata\\MediaBundle\\Entity\\Gallery',
            'sonata.intl.locale_detector.request.class' => 'Sonata\\IntlBundle\\Locale\\RequestDetector',
            'sonata.intl.locale_detector.session.class' => 'Sonata\\IntlBundle\\Locale\\SessionDetector',
            'sonata.intl.templating.helper.locale.class' => 'Sonata\\IntlBundle\\Templating\\Helper\\LocaleHelper',
            'sonata.intl.templating.helper.number.class' => 'Sonata\\IntlBundle\\Templating\\Helper\\NumberHelper',
            'sonata.intl.templating.helper.datetime.class' => 'Sonata\\IntlBundle\\Templating\\Helper\\DateTimeHelper',
            'sonata.intl.timezone_detector.chain.class' => 'Sonata\\IntlBundle\\Timezone\\ChainTimezoneDetector',
            'sonata.intl.timezone_detector.user.class' => 'Sonata\\IntlBundle\\Timezone\\UserBasedTimezoneDetector',
            'sonata.intl.timezone_detector.locale.class' => 'Sonata\\IntlBundle\\Timezone\\LocaleBasedTimezoneDetector',
            'sonata.intl.twig.helper.locale.class' => 'Sonata\\IntlBundle\\Twig\\Extension\\LocaleExtension',
            'sonata.intl.twig.helper.number.class' => 'Sonata\\IntlBundle\\Twig\\Extension\\NumberExtension',
            'sonata.intl.twig.helper.datetime.class' => 'Sonata\\IntlBundle\\Twig\\Extension\\DateTimeExtension',
            'sonata_intl.timezone.detectors' => array(
                0 => 'sonata.intl.timezone_detector.user',
                1 => 'sonata.intl.timezone_detector.locale',
            ),
            'simplethings.entityaudit.audited_entities' => array(
                0 => 'AppBundle\\Entity\\Post',
                1 => 'AppBundle\\Entity\\EmbeddedContent\\TextBlock\\TextBlock',
                2 => 'AppBundle\\Entity\\Infographics',
                3 => 'AppBundle\\Entity\\Page',
            ),
            'simplethings.entityaudit.global_ignore_columns' => array(
                0 => 'created_at',
                1 => 'updated_at',
                2 => 'updated_At',
                3 => 'address',
                4 => 'address_text',
                5 => 'address_geo_polygon',
                6 => 'address_geo_point',
            ),
            'simplethings.entityaudit.table_prefix' => '',
            'simplethings.entityaudit.table_suffix' => '_audit',
            'simplethings.entityaudit.revision_field_name' => 'rev',
            'simplethings.entityaudit.revision_type_field_name' => 'revtype',
            'simplethings.entityaudit.revision_table_name' => 'revisions',
            'simplethings.entityaudit.revision_id_field_type' => 'integer',
            'simplethings_entityaudit.request.current_user_listener.class' => 'SimpleThings\\EntityAudit\\Request\\CurrentUserListener',
            'stof_doctrine_extensions.event_listener.locale.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\LocaleListener',
            'stof_doctrine_extensions.event_listener.logger.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\LoggerListener',
            'stof_doctrine_extensions.event_listener.blame.class' => 'Stof\\DoctrineExtensionsBundle\\EventListener\\BlameListener',
            'stof_doctrine_extensions.uploadable.manager.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadableManager',
            'stof_doctrine_extensions.uploadable.mime_type_guesser.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\MimeTypeGuesserAdapter',
            'stof_doctrine_extensions.uploadable.default_file_info.class' => 'Stof\\DoctrineExtensionsBundle\\Uploadable\\UploadedFileInfo',
            'stof_doctrine_extensions.default_locale' => 'ru',
            'stof_doctrine_extensions.default_file_path' => NULL,
            'stof_doctrine_extensions.translation_fallback' => false,
            'stof_doctrine_extensions.persist_default_translation' => false,
            'stof_doctrine_extensions.skip_translation_on_load' => false,
            'stof_doctrine_extensions.uploadable.validate_writable_directory' => true,
            'stof_doctrine_extensions.listener.translatable.class' => 'Gedmo\\Translatable\\TranslatableListener',
            'stof_doctrine_extensions.listener.timestampable.class' => 'Gedmo\\Timestampable\\TimestampableListener',
            'stof_doctrine_extensions.listener.blameable.class' => 'Gedmo\\Blameable\\BlameableListener',
            'stof_doctrine_extensions.listener.sluggable.class' => 'Gedmo\\Sluggable\\SluggableListener',
            'stof_doctrine_extensions.listener.tree.class' => 'Gedmo\\Tree\\TreeListener',
            'stof_doctrine_extensions.listener.loggable.class' => 'Gedmo\\Loggable\\LoggableListener',
            'stof_doctrine_extensions.listener.sortable.class' => 'Gedmo\\Sortable\\SortableListener',
            'stof_doctrine_extensions.listener.softdeleteable.class' => 'Gedmo\\SoftDeleteable\\SoftDeleteableListener',
            'stof_doctrine_extensions.listener.uploadable.class' => 'Gedmo\\Uploadable\\UploadableListener',
            'stof_doctrine_extensions.listener.reference_integrity.class' => 'Gedmo\\ReferenceIntegrity\\ReferenceIntegrityListener',
            'jms_serializer.metadata.file_locator.class' => 'Metadata\\Driver\\FileLocator',
            'jms_serializer.metadata.annotation_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\AnnotationDriver',
            'jms_serializer.metadata.chain_driver.class' => 'Metadata\\Driver\\DriverChain',
            'jms_serializer.metadata.yaml_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\YamlDriver',
            'jms_serializer.metadata.xml_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\XmlDriver',
            'jms_serializer.metadata.php_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\PhpDriver',
            'jms_serializer.metadata.doctrine_type_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\DoctrineTypeDriver',
            'jms_serializer.metadata.doctrine_phpcr_type_driver.class' => 'JMS\\Serializer\\Metadata\\Driver\\DoctrinePHPCRTypeDriver',
            'jms_serializer.metadata.lazy_loading_driver.class' => 'Metadata\\Driver\\LazyLoadingDriver',
            'jms_serializer.metadata.metadata_factory.class' => 'Metadata\\MetadataFactory',
            'jms_serializer.metadata.cache.file_cache.class' => 'Metadata\\Cache\\FileCache',
            'jms_serializer.event_dispatcher.class' => 'JMS\\Serializer\\EventDispatcher\\LazyEventDispatcher',
            'jms_serializer.camel_case_naming_strategy.class' => 'JMS\\Serializer\\Naming\\CamelCaseNamingStrategy',
            'jms_serializer.serialized_name_annotation_strategy.class' => 'JMS\\Serializer\\Naming\\SerializedNameAnnotationStrategy',
            'jms_serializer.cache_naming_strategy.class' => 'JMS\\Serializer\\Naming\\CacheNamingStrategy',
            'jms_serializer.doctrine_object_constructor.class' => 'JMS\\Serializer\\Construction\\DoctrineObjectConstructor',
            'jms_serializer.unserialize_object_constructor.class' => 'JMS\\Serializer\\Construction\\UnserializeObjectConstructor',
            'jms_serializer.version_exclusion_strategy.class' => 'JMS\\Serializer\\Exclusion\\VersionExclusionStrategy',
            'jms_serializer.serializer.class' => 'JMS\\Serializer\\Serializer',
            'jms_serializer.twig_extension.class' => 'JMS\\Serializer\\Twig\\SerializerExtension',
            'jms_serializer.templating.helper.class' => 'JMS\\SerializerBundle\\Templating\\SerializerHelper',
            'jms_serializer.json_serialization_visitor.class' => 'JMS\\Serializer\\JsonSerializationVisitor',
            'jms_serializer.json_serialization_visitor.options' => 256,
            'jms_serializer.json_deserialization_visitor.class' => 'JMS\\Serializer\\JsonDeserializationVisitor',
            'jms_serializer.xml_serialization_visitor.class' => 'JMS\\Serializer\\XmlSerializationVisitor',
            'jms_serializer.xml_deserialization_visitor.class' => 'JMS\\Serializer\\XmlDeserializationVisitor',
            'jms_serializer.xml_deserialization_visitor.doctype_whitelist' => array(
            ),
            'jms_serializer.yaml_serialization_visitor.class' => 'JMS\\Serializer\\YamlSerializationVisitor',
            'jms_serializer.handler_registry.class' => 'JMS\\Serializer\\Handler\\LazyHandlerRegistry',
            'jms_serializer.datetime_handler.class' => 'JMS\\Serializer\\Handler\\DateHandler',
            'jms_serializer.array_collection_handler.class' => 'JMS\\Serializer\\Handler\\ArrayCollectionHandler',
            'jms_serializer.php_collection_handler.class' => 'JMS\\Serializer\\Handler\\PhpCollectionHandler',
            'jms_serializer.form_error_handler.class' => 'JMS\\Serializer\\Handler\\FormErrorHandler',
            'jms_serializer.constraint_violation_handler.class' => 'JMS\\Serializer\\Handler\\ConstraintViolationHandler',
            'jms_serializer.doctrine_proxy_subscriber.class' => 'JMS\\Serializer\\EventDispatcher\\Subscriber\\DoctrineProxySubscriber',
            'jms_serializer.stopwatch_subscriber.class' => 'JMS\\SerializerBundle\\Serializer\\StopwatchEventSubscriber',
            'jms_serializer.infer_types_from_doctrine_metadata' => true,
            'templating.helper.markdown.class' => 'Knp\\Bundle\\MarkdownBundle\\Helper\\MarkdownHelper',
            'ivory_ck_editor.form.type.class' => 'Ivory\\CKEditorBundle\\Form\\Type\\CKEditorType',
            'ivory_ck_editor.config_manager.class' => 'Ivory\\CKEditorBundle\\Model\\ConfigManager',
            'ivory_ck_editor.plugin_manager.class' => 'Ivory\\CKEditorBundle\\Model\\PluginManager',
            'ivory_ck_editor.styles_set_manager.class' => 'Ivory\\CKEditorBundle\\Model\\StylesSetManager',
            'ivory_ck_editor.template_manager.class' => 'Ivory\\CKEditorBundle\\Model\\TemplateManager',
            'ivory_ck_editor.templating.helper.class' => 'Ivory\\CKEditorBundle\\Templating\\CKEditorHelper',
            'ivory_ck_editor.twig_extension.class' => 'Ivory\\CKEditorBundle\\Twig\\CKEditorExtension',
            'ivory_ck_editor.form.type.enable' => true,
            'ivory_ck_editor.form.type.autoload' => true,
            'ivory_ck_editor.form.type.base_path' => 'bundles/ivoryckeditor/',
            'ivory_ck_editor.form.type.js_path' => 'bundles/ivoryckeditor/ckeditor.js',
            'sonata.formatter.text.markdown.class' => 'Sonata\\FormatterBundle\\Formatter\\MarkdownFormatter',
            'sonata.formatter.text.text.class' => 'Sonata\\FormatterBundle\\Formatter\\TextFormatter',
            'sonata.formatter.text.raw.class' => 'Sonata\\FormatterBundle\\Formatter\\RawFormatter',
            'sonata.formatter.text.twigengine.class' => 'Sonata\\FormatterBundle\\Formatter\\TwigFormatter',
            'sonata.formatter.block.formatter.class' => 'Sonata\\FormatterBundle\\Block\\FormatterBlockService',
            'sonata.formatter.ckeditor.extension.class' => 'Sonata\\FormatterBundle\\Admin\\CkeditorAdminExtension',
            'sonata.formatter.ckeditor.configuration.templates' => array(
                'browser' => ':SonataFormatter:ckeditor_browser.html.twig',
                'upload' => 'SonataFormatterBundle:Ckeditor:upload.html.twig',
            ),
            'sonata.seo.block.social.container.class' => 'Sonata\\SeoBundle\\Block\\Social\\SocialBlockContainer',
            'sonata.seo.block.email.share_button.class' => 'Sonata\\SeoBundle\\Block\\Social\\EmailShareButtonBlockService',
            'sonata.seo.block.facebook.like_box.class' => 'Sonata\\SeoBundle\\Block\\Social\\FacebookLikeBoxBlockService',
            'sonata.seo.block.facebook.like_button.class' => 'Sonata\\SeoBundle\\Block\\Social\\FacebookLikeButtonBlockService',
            'sonata.seo.block.facebook.send_button.class' => 'Sonata\\SeoBundle\\Block\\Social\\FacebookSendButtonBlockService',
            'sonata.seo.block.facebook.share_button.class' => 'Sonata\\SeoBundle\\Block\\Social\\FacebookShareButtonBlockService',
            'sonata.seo.block.twitter.share_button.class' => 'Sonata\\SeoBundle\\Block\\Social\\TwitterShareButtonBlockService',
            'sonata.seo.block.twitter.follow_button.class' => 'Sonata\\SeoBundle\\Block\\Social\\TwitterFollowButtonBlockService',
            'sonata.seo.block.twitter.hashtag_button.class' => 'Sonata\\SeoBundle\\Block\\Social\\TwitterHashtagButtonBlockService',
            'sonata.seo.block.twitter.mention_button.class' => 'Sonata\\SeoBundle\\Block\\Social\\TwitterMentionButtonBlockService',
            'sonata.seo.block.twitter.embed.class' => 'Sonata\\SeoBundle\\Block\\Social\\TwitterEmbedTweetBlockService',
            'sonata.seo.block.pinterest.pin_button.class' => 'Sonata\\SeoBundle\\Block\\Social\\PinterestPinButtonBlockService',
            'sonata.seo.block.breadcrumb.homepage.class' => 'Sonata\\SeoBundle\\Block\\Breadcrumb\\HomepageBreadcrumbBlockService',
            'sonata.seo.exporter.database_source_iterator.class' => 'Exporter\\Source\\DoctrineDBALConnectionSourceIterator',
            'sonata.seo.exporter.sitemap_source_iterator.class' => 'Exporter\\Source\\SymfonySitemapSourceIterator',
            'sonata.seo.twig.extension.class' => 'Sonata\\SeoBundle\\Twig\\Extension\\SeoExtension',
            'sonata.seo.sitemap.manager.class' => 'Sonata\\SeoBundle\\Sitemap\\SourceManager',
            'presta_sitemap.generator.class' => 'Presta\\SitemapBundle\\Service\\Generator',
            'presta_sitemap.dumper.class' => 'Presta\\SitemapBundle\\Service\\Dumper',
            'presta_sitemap.routing_loader.class' => 'Presta\\SitemapBundle\\Routing\\SitemapRoutingLoader',
            'presta_sitemap.timetolive' => 3600,
            'presta_sitemap.sitemap_file_prefix' => 'sitemap',
            'presta_sitemap.items_by_set' => 50000,
            'presta_sitemap.defaults' => array(
                'priority' => 1,
                'changefreq' => 'daily',
                'lastmod' => 'now',
            ),
            'cmf_routing.chain_router.class' => 'Symfony\\Cmf\\Component\\Routing\\ChainRouter',
            'cmf_routing.replace_symfony_router' => true,
            'cmf_routing.route_type_type.class' => 'Symfony\\Cmf\\Bundle\\RoutingBundle\\Form\\Type\\RouteTypeType',
            'amg_page.page.class' => 'AppBundle\\Entity\\Page',
            'amg_page.page.admin_class' => 'Amg\\Bundle\\PageBundle\\Admin\\PageAdmin',
            'amg_page.page.admin_controller' => 'AmgPageBundle:Admin\\Page',
            'amg_page.block.class' => 'AppBundle\\Entity\\Block',
            'amg_page.block.admin_class' => 'Amg\\Bundle\\PageBundle\\Admin\\BlockAdmin',
            'amg_page.block.admin_controller' => 'AmgPageBundle:Admin\\Block',
            'amg_page.route.name' => 'page',
            'amg_page.route.controller' => 'AmgPageBundle:Page:page',
            'amg_page.router.class' => 'Amg\\Bundle\\PageBundle\\Router\\PageRouter',
            'amg_page.manager.class' => 'Amg\\Bundle\\PageBundle\\Model\\PageManager',
            'amg_page.layout.manager.class' => 'Amg\\Bundle\\PageBundle\\Layout\\LayoutManager',
            'amg_admin.fields_mapping' => array(
                'Основное.Таймлайн метро' => array(
                    'fields' => array(
                        0 => 'year',
                    ),
                ),
                'Основное.Персона' => array(
                    'fields' => array(
                        0 => 'lastName',
                        1 => 'firstName',
                        2 => 'patronymic',
                        3 => 'biography',
                        4 => 'education',
                        5 => 'experience',
                        6 => 'awards',
                        7 => 'family',
                        8 => 'notes',
                    ),
                    'options' => array(
                        'class' => 'col-md-6',
                    ),
                ),
                'Основное.Контент' => array(
                    'fields' => array(
                        0 => 'gallery',
                        1 => 'title',
                        2 => 'fullTitle',
                        3 => 'companyType',
                        4 => 'teaser',
                        5 => 'shortPost',
                        6 => 'description',
                        7 => 'image',
                        8 => 'topImage',
                        9 => 'heroImage',
                        10 => 'file',
                        11 => 'position',
                        12 => 'lead',
                        13 => 'content',
                        14 => 'mobileContent',
                        15 => 'tags',
                        16 => 'color',
                        17 => 'templateImage',
                        18 => 'constructionType',
                        19 => 'number',
                        20 => 'filter',
                        21 => 'daily',
                    ),
                    'options' => array(
                        'class' => 'col-md-12',
                    ),
                ),
                'Основное.Источник' => array(
                    'fields' => array(
                        0 => 'author',
                        1 => 'editor',
                        2 => 'journalistWriter',
                        3 => 'source',
                    ),
                    'options' => array(
                        'class' => 'col-md-6',
                    ),
                ),
                'Основное.Характеристики' => array(
                    'fields' => array(
                        0 => 'head',
                        1 => 'headOrganization',
                        2 => 'lowerOrganization',
                        3 => 'lowerOrganizations',
                        4 => 'line',
                        5 => 'entranceHallDescription',
                        6 => 'featureDescription',
                        7 => 'capacityDescription',
                        8 => 'roadType',
                    ),
                    'options' => array(
                        'class' => 'col-md-6',
                    ),
                ),
                'Характеристики объекта строительства.' => array(
                    'fields' => array(
                        0 => 'constructionStartYear',
                        1 => 'constructionEndYear',
                        2 => 'constructionStatus',
                        3 => 'constructionStatusDescription',
                        4 => 'roadParameterValues',
                    ),
                ),
                'Основное.Параметры' => array(
                    'fields' => array(
                        0 => 'category',
                        1 => 'rubrics',
                        2 => 'organizationDirectory',
                        3 => 'link',
                        4 => 'publishable',
                        5 => 'showInStructure',
                        6 => 'feedable',
                        7 => 'publishableInRss',
                        8 => 'searchable',
                        9 => 'relevantNewsShown',
                        10 => 'publishStartDate',
                        11 => 'publishEndDate',
                        12 => 'priorityPosition',
                        13 => 'owner',
                        14 => 'owners',
                        15 => 'weight',
                        16 => 'type',
                        17 => 'url',
                        18 => 'x',
                        19 => 'y',
                    ),
                    'options' => array(
                        'class' => 'col-md-6',
                    ),
                ),
                'Основное.Пакетная загрузка' => array(
                    'fields' => array(
                        0 => 'batch_upload',
                        1 => 'copyright',
                        2 => 'batch_category',
                        3 => 'batch_create_category',
                    ),
                    'options' => array(
                        'class' => 'col-md-6',
                    ),
                ),
                'Основное.Медиа' => array(
                    'fields' => array(
                        0 => 'medias',
                        1 => 'images',
                        2 => 'infographics',
                        3 => 'video',
                    ),
                ),
                'Контактная информация.' => array(
                    'fields' => array(
                        0 => 'legalAddress',
                        1 => 'actualAddress',
                        2 => 'organization',
                        3 => 'appointment',
                        4 => 'phone',
                        5 => 'fax',
                        6 => 'email',
                        7 => 'website',
                    ),
                    'options' => array(
                        'class' => 'col-md-6',
                    ),
                ),
                'Вопросы и ответы.Вопросы и ответы' => array(
                    'fields' => array(
                    ),
                ),
                'Характеристики.Характеристики из внешних источников' => array(
                    'fields' => array(
                    ),
                ),
                'Характеристики.Прочие характеристики' => array(
                    'fields' => array(
                    ),
                ),
                'RSS.Контент для платформы "Мир тесен"' => array(
                    'fields' => array(
                        0 => 'wordIsSmallContent',
                    ),
                ),
                'Адресная информация.Адрес' => array(
                    'fields' => array(
                        0 => 'administrativeUnit',
                        1 => 'address',
                    ),
                ),
                'Прикрепленные материалы.Файлы' => array(
                    'fields' => array(
                        0 => 'attachments',
                    ),
                ),
                'Прикрепленные материалы.Прикрепленные материалы' => array(
                    'fields' => array(
                        0 => 'relatedPosts',
                        1 => 'relatedPressReleases',
                        2 => 'relatedInfographics',
                        3 => 'relatedGalleries',
                        4 => 'relatedVideos',
                        5 => 'relatedConstructions',
                        6 => 'relatedMetroStations',
                        7 => 'relatedRoads',
                        8 => 'relatedDocuments',
                    ),
                ),
                'Прикрепленные материалы.Внешние ресурсы' => array(
                    'fields' => array(
                        0 => 'panorama',
                    ),
                ),
                'SEO.Метаданные' => array(
                    'fields' => array(
                        0 => 'metaDescription',
                        1 => 'metaKeywords',
                    ),
                ),
                'Служебное.Служебные параметры' => array(
                    'fields' => array(
                        0 => 'parent',
                        1 => 'slug',
                        2 => 'layout',
                        3 => 'childrenLayout',
                    ),
                ),
                'Основное.Конференция' => array(
                    'fields' => array(
                    ),
                    'options' => array(
                        'class' => 'col-md-6',
                    ),
                ),
                'Основное.Анонс' => array(
                    'fields' => array(
                    ),
                    'options' => array(
                        'class' => 'col-md-6',
                    ),
                ),
                'Дополнительно.Социальные сети' => array(
                    'fields' => array(
                        0 => 'socialAccountUrls',
                    ),
                ),
                'Дополнительно.На данный момент' => array(
                    'fields' => array(
                        0 => 'currently',
                    ),
                ),
                'Дополнительно.Последние новости' => array(
                    'fields' => array(
                        0 => 'showLastNews',
                        1 => 'lastNewsTags',
                    ),
                ),
                'Дополнительно.Информация' => array(
                    'fields' => array(
                        0 => 'extraInformation',
                    ),
                ),
            ),
            'fos_elastica.client.class' => 'FOS\\ElasticaBundle\\Elastica\\Client',
            'fos_elastica.logger.class' => 'FOS\\ElasticaBundle\\Logger\\ElasticaLogger',
            'fos_elastica.data_collector.class' => 'FOS\\ElasticaBundle\\DataCollector\\ElasticaDataCollector',
            'fos_elastica.mapping_builder.class' => 'FOS\\ElasticaBundle\\Index\\MappingBuilder',
            'fos_elastica.property_accessor.class' => 'Symfony\\Component\\PropertyAccess\\PropertyAccessor',
            'fos_elastica.alias_processor.class' => 'FOS\\ElasticaBundle\\Index\\AliasProcessor',
            'fos_elastica.finder.class' => 'FOS\\ElasticaBundle\\Finder\\TransformedFinder',
            'fos_elastica.index.class' => 'FOS\\ElasticaBundle\\Elastica\\Index',
            'fos_elastica.indexable.class' => 'FOS\\ElasticaBundle\\Provider\\Indexable',
            'fos_elastica.index_manager.class' => 'FOS\\ElasticaBundle\\Index\\IndexManager',
            'fos_elastica.resetter.class' => 'FOS\\ElasticaBundle\\Index\\Resetter',
            'fos_elastica.type.class' => 'Elastica\\Type',
            'fos_elastica.object_persister.class' => 'FOS\\ElasticaBundle\\Persister\\ObjectPersister',
            'fos_elastica.object_serializer_persister.class' => 'FOS\\ElasticaBundle\\Persister\\ObjectSerializerPersister',
            'fos_elastica.provider_registry.class' => 'FOS\\ElasticaBundle\\Provider\\ProviderRegistry',
            'fos_elastica.elastica_to_model_transformer.collection.class' => 'FOS\\ElasticaBundle\\Transformer\\ElasticaToModelTransformerCollection',
            'fos_elastica.model_to_elastica_transformer.class' => 'FOS\\ElasticaBundle\\Transformer\\ModelToElasticaAutoTransformer',
            'fos_elastica.model_to_elastica_identifier_transformer.class' => 'FOS\\ElasticaBundle\\Transformer\\ModelToElasticaIdentifierTransformer',
            'fos_elastica.slice_fetcher.orm.class' => 'FOS\\ElasticaBundle\\Doctrine\\ORM\\SliceFetcher',
            'fos_elastica.provider.prototype.orm.class' => 'FOS\\ElasticaBundle\\Doctrine\\ORM\\Provider',
            'fos_elastica.listener.prototype.orm.class' => 'FOS\\ElasticaBundle\\Doctrine\\Listener',
            'fos_elastica.elastica_to_model_transformer.prototype.orm.class' => 'FOS\\ElasticaBundle\\Doctrine\\ORM\\ElasticaToModelTransformer',
            'fos_elastica.manager.orm.class' => 'FOS\\ElasticaBundle\\Doctrine\\RepositoryManager',
            'liip_imagine.filter.configuration.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\FilterConfiguration',
            'liip_imagine.filter.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\FilterManager',
            'liip_imagine.data.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Data\\DataManager',
            'liip_imagine.cache.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\CacheManager',
            'liip_imagine.cache.signer.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Signer',
            'liip_imagine.binary.mime_type_guesser.class' => 'Liip\\ImagineBundle\\Binary\\SimpleMimeTypeGuesser',
            'liip_imagine.controller.class' => 'Liip\\ImagineBundle\\Controller\\ImagineController',
            'liip_imagine.twig.extension.class' => 'Liip\\ImagineBundle\\Templating\\ImagineExtension',
            'liip_imagine.templating.helper.class' => 'Liip\\ImagineBundle\\Templating\\Helper\\ImagineHelper',
            'liip_imagine.gd.class' => 'Imagine\\Gd\\Imagine',
            'liip_imagine.imagick.class' => 'Imagine\\Imagick\\Imagine',
            'liip_imagine.gmagick.class' => 'Imagine\\Gmagick\\Imagine',
            'liip_imagine.filter.loader.relative_resize.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\RelativeResizeFilterLoader',
            'liip_imagine.filter.loader.resize.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ResizeFilterLoader',
            'liip_imagine.filter.loader.thumbnail.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ThumbnailFilterLoader',
            'liip_imagine.filter.loader.crop.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\CropFilterLoader',
            'liip_imagine.filter.loader.paste.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\PasteFilterLoader',
            'liip_imagine.filter.loader.watermark.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\WatermarkFilterLoader',
            'liip_imagine.filter.loader.strip.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\StripFilterLoader',
            'liip_imagine.filter.loader.background.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\BackgroundFilterLoader',
            'liip_imagine.filter.loader.upscale.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\UpscaleFilterLoader',
            'liip_imagine.filter.loader.auto_rotate.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\AutoRotateFilterLoader',
            'liip_imagine.filter.loader.rotate.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\RotateFilterLoader',
            'liip_imagine.filter.loader.interlace.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\InterlaceFilterLoader',
            'liip_imagine.binary.loader.filesystem.class' => 'Liip\\ImagineBundle\\Binary\\Loader\\FileSystemLoader',
            'liip_imagine.binary.loader.stream.class' => 'Liip\\ImagineBundle\\Binary\\Loader\\StreamLoader',
            'liip_imagine.cache.resolver.web_path.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\WebPathResolver',
            'liip_imagine.cache.resolver.no_cache_web_path.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\NoCacheWebPathResolver',
            'liip_imagine.cache.resolver.aws_s3.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\AwsS3Resolver',
            'liip_imagine.cache.resolver.cache.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\CacheResolver',
            'liip_imagine.cache.resolver.proxy.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\ProxyResolver',
            'liip_imagine.form.type.image.class' => 'Liip\\ImagineBundle\\Form\\Type\\ImageType',
            'liip_imagine.meta_data.reader.class' => 'Imagine\\Image\\Metadata\\ExifMetadataReader',
            'liip_imagine.filter.post_processor.jpegoptim.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\PostProcessor\\JpegOptimPostProcessor',
            'liip_imagine.jpegoptim.binary' => '/usr/bin/jpegoptim',
            'liip_imagine.cache.resolver.default' => 'default',
            'liip_imagine.default_image' => NULL,
            'liip_imagine.filter_sets' => array(
                'admin' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 100,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 140,
                                1 => 100,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb70' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 70,
                                1 => 70,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb210' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 210,
                                1 => 150,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb212' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 212,
                                1 => 128,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb300' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 200,
                            ),
                            'mode' => 'outbound',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb300x230' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 230,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb300x420' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 420,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb306' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 306,
                                1 => 389,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb323' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 232,
                                1 => 212,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb336' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 336,
                                1 => 280,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb385' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 385,
                                1 => 240,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb451' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 451,
                                1 => 273,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb469' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 469,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb465x548' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 465,
                                1 => 548,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb500' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 500,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb589' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 589,
                                1 => 454,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb596' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 596,
                                1 => 368,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb600x400' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 600,
                                1 => 400,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb630x338' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 630,
                                1 => 338,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb715x250' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 715,
                                1 => 250,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb960' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 960,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb960x470' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 960,
                                1 => 470,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb1440' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 1440,
                                1 => 454,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb300x90' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 90,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb340x340' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 340,
                                1 => 340,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb271x125' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 271,
                                1 => 125,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'thumb295x345' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 295,
                                1 => 345,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'full' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 1900,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'page_header_700' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 700,
                                1 => 400,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'newsletter_highlight' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 600,
                                1 => 400,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'newsletter_post_l' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 405,
                                1 => 245,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'newsletter_post' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 150,
                                1 => 150,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'newsletter_media' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 600,
                                1 => 400,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'newsletter_video_play' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 600,
                                1 => 400,
                            ),
                        ),
                        'watermark' => array(
                            'image' => 'Resources/data/overlay/play_btn.png',
                            'position' => 'center',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'web_root_thumb300' => array(
                    'data_loader' => 'web_root',
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 200,
                            ),
                            'mode' => 'outbound',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 140,
                                1 => 100,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb210' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 210,
                                1 => 150,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb212' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 212,
                                1 => 128,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb300' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 200,
                            ),
                            'mode' => 'outbound',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb300x230' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 230,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb306' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 306,
                                1 => 389,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb323' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 232,
                                1 => 212,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb336' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 336,
                                1 => 280,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb385' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 385,
                                1 => 240,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb451' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 451,
                                1 => 273,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb469' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 469,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb465x548' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 465,
                                1 => 548,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb500' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 500,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb589' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 589,
                                1 => 454,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb596' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 596,
                                1 => 368,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb715x250' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 715,
                                1 => 250,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb960' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 960,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb960x470' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 960,
                                1 => 470,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb1440' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 1440,
                                1 => 454,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb300x90' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 90,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb340x340' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 340,
                                1 => 340,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb271x125' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 271,
                                1 => 125,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_thumb295x345' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 295,
                                1 => 345,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_full' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 1900,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_page_header_700' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 700,
                                1 => 400,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_newsletter_highlight' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 600,
                                1 => 400,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_newsletter_post_l' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 405,
                                1 => 245,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_newsletter_post' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 150,
                                1 => 150,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_newsletter_media' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 600,
                                1 => 400,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_newsletter_video_play' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 600,
                                1 => 400,
                            ),
                        ),
                        'watermark' => array(
                            'image' => 'Resources/data/overlay/play_btn.png',
                            'position' => 'center',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_main_image_thumb1440' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 1440,
                                1 => 454,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_infographics_top_large' => array(
                    'filters' => array(
                        'relative_resize' => array(
                            'widen' => 630,
                        ),
                        'crop' => array(
                            'start' => array(
                                0 => 0,
                                1 => 0,
                            ),
                            'size' => array(
                                0 => 630,
                                1 => 338,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_infographics_top' => array(
                    'filters' => array(
                        'relative_resize' => array(
                            'widen' => 298,
                        ),
                        'crop' => array(
                            'start' => array(
                                0 => 0,
                                1 => 0,
                            ),
                            'size' => array(
                                0 => 298,
                                1 => 162,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'main_image_infographics_list' => array(
                    'filters' => array(
                        'relative_resize' => array(
                            'widen' => 469,
                        ),
                        'crop' => array(
                            'start' => array(
                                0 => 0,
                                1 => 0,
                            ),
                            'size' => array(
                                0 => 469,
                                1 => 275,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'infographics_thumb' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 140,
                                1 => 100,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'infographics_thumb200' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 200,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'infographics_full' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 960,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'file_thumb' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 64,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'video_thumb' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 140,
                                1 => 100,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb780' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 780,
                                1 => 580,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 140,
                                1 => 100,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb210' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 210,
                                1 => 150,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb212' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 212,
                                1 => 128,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb300' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 200,
                            ),
                            'mode' => 'outbound',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb300x230' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 230,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb300x420' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 420,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb306' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 306,
                                1 => 389,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb323' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 232,
                                1 => 212,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb336' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 336,
                                1 => 280,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb385' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 385,
                                1 => 240,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb451' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 451,
                                1 => 273,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb465x548' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 465,
                                1 => 548,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb469' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 469,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb500' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 500,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb589' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 589,
                                1 => 454,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb596' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 596,
                                1 => 368,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb715x250' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 715,
                                1 => 250,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb960' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 960,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb960x470' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 960,
                                1 => 470,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_thumb1440' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 1440,
                                1 => 454,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_image_thumb300x90' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 90,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_image_thumb340x340' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 340,
                                1 => 340,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_image_thumb271x125' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 271,
                                1 => 125,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_image_thumb295x345' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 295,
                                1 => 345,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_full' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 1900,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_newsletter_highlight' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 600,
                                1 => 400,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_newsletter_post_l' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 405,
                                1 => 245,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_newsletter_post' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 150,
                                1 => 150,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_newsletter_media' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 600,
                                1 => 400,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_newsletter_video_play' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 600,
                                1 => 400,
                            ),
                        ),
                        'watermark' => array(
                            'image' => 'Resources/data/overlay/play_btn.png',
                            'position' => 'center',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_infographics_top_large' => array(
                    'filters' => array(
                        'relative_resize' => array(
                            'widen' => 630,
                        ),
                        'crop' => array(
                            'start' => array(
                                0 => 0,
                                1 => 0,
                            ),
                            'size' => array(
                                0 => 630,
                                1 => 338,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_infographics_top' => array(
                    'filters' => array(
                        'relative_resize' => array(
                            'widen' => 298,
                        ),
                        'crop' => array(
                            'start' => array(
                                0 => 0,
                                1 => 0,
                            ),
                            'size' => array(
                                0 => 298,
                                1 => 162,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'gallery_media_infographics_list' => array(
                    'filters' => array(
                        'relative_resize' => array(
                            'widen' => 469,
                        ),
                        'crop' => array(
                            'start' => array(
                                0 => 0,
                                1 => 0,
                            ),
                            'size' => array(
                                0 => 469,
                                1 => 275,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'person_thumb' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 140,
                                1 => 100,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'person_thumb70' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 70,
                                1 => 70,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'person_direction' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 264,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'person_direction_main' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 314,
                                1 => 375,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'person_struct_list' => array(
                    'filters' => array(
                        'relative_resize' => array(
                            'widen' => 305,
                        ),
                        'thumbnail' => array(
                            'size' => array(
                                0 => 305,
                                1 => 202,
                            ),
                            'mode' => 'outbound',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'person_profile_title' => array(
                    'filters' => array(
                        'relative_resize' => array(
                            'widen' => 300,
                        ),
                        'thumbnail' => array(
                            'size' => array(
                                0 => 300,
                                1 => 210,
                            ),
                            'mode' => 'outbound',
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'person_top_thumb' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 140,
                                1 => 100,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'person_top_struct_list_top' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 320,
                                1 => 387,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'metro_timeline_thumb' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 140,
                                1 => 100,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
                'metro_timeline_thumb960' => array(
                    'filters' => array(
                        'thumbnail' => array(
                            'size' => array(
                                0 => 960,
                                1 => NULL,
                            ),
                        ),
                    ),
                    'quality' => 100,
                    'jpeg_quality' => NULL,
                    'png_compression_level' => NULL,
                    'png_compression_filter' => NULL,
                    'format' => NULL,
                    'animated' => false,
                    'cache' => NULL,
                    'data_loader' => NULL,
                    'default_image' => NULL,
                    'post_processors' => array(
                    ),
                ),
            ),
            'liip_imagine.binary.loader.default' => 'default',
            'liip_imagine.controller.filter_action' => 'liip_imagine.controller:filterAction',
            'liip_imagine.controller.filter_runtime_action' => 'liip_imagine.controller:filterRuntimeAction',
            'snc_redis.client.class' => 'Predis\\Client',
            'snc_redis.client_options.class' => 'Predis\\Configuration\\Options',
            'snc_redis.connection_parameters.class' => 'Predis\\Connection\\Parameters',
            'snc_redis.connection_factory.class' => 'Snc\\RedisBundle\\Client\\Predis\\Connection\\ConnectionFactory',
            'snc_redis.connection_wrapper.class' => 'Snc\\RedisBundle\\Client\\Predis\\Connection\\ConnectionWrapper',
            'snc_redis.phpredis_client.class' => 'Redis',
            'snc_redis.phpredis_connection_wrapper.class' => 'Snc\\RedisBundle\\Client\\Phpredis\\Client',
            'snc_redis.logger.class' => 'Snc\\RedisBundle\\Logger\\RedisLogger',
            'snc_redis.data_collector.class' => 'Snc\\RedisBundle\\DataCollector\\RedisDataCollector',
            'snc_redis.doctrine_cache.class' => 'Snc\\RedisBundle\\Doctrine\\Cache\\RedisCache',
            'snc_redis.monolog_handler.class' => 'Snc\\RedisBundle\\Monolog\\Handler\\RedisHandler',
            'snc_redis.swiftmailer_spool.class' => 'Snc\\RedisBundle\\SwiftMailer\\RedisSpool',
            'doctrine_migrations.dir_name' => ($this->targetDirs[2].'/DoctrineMigrations'),
            'doctrine_migrations.namespace' => 'Application\\Migrations',
            'doctrine_migrations.table_name' => 'migration_versions',
            'doctrine_migrations.name' => 'Application Migrations',
            'crawler_detect.class' => 'Nmure\\CrawlerDetectBundle\\CrawlerDetect\\CrawlerDetect',
            'stroi_mobile.entity_manager' => 'default',
            'sentry.dsn' => 'https://e704cea0cdd646c88f5a7cf40c970ac1@sentry.io/1551556',
            'sentry.skip_capture' => array(
                0 => 'Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException',
                1 => 'Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException',
            ),
            'sentry.app_path' => ($this->targetDirs[2].'/..'),
            'sentry.client' => 'Sentry\\SentryBundle\\SentrySymfonyClient',
            'sentry.options' => array(
                'logger' => 'php',
                'server' => NULL,
                'secret_key' => NULL,
                'public_key' => NULL,
                'project' => 1,
                'auto_log_stacks' => false,
                'name' => 'stroi-prod.passport.local',
                'site' => NULL,
                'tags' => array(
                ),
                'release' => NULL,
                'environment' => 'prod',
                'sample_rate' => 1,
                'trace' => true,
                'timeout' => 2,
                'message_limit' => 1024,
                'exclude' => array(
                ),
                'http_proxy' => NULL,
                'extra' => array(
                ),
                'curl_method' => 'sync',
                'curl_path' => 'curl',
                'curl_ipv4' => true,
                'ca_cert' => NULL,
                'verify_ssl' => true,
                'curl_ssl_version' => NULL,
                'trust_x_forwarded_proto' => false,
                'mb_detect_order' => NULL,
                'error_types' => NULL,
                'app_path' => ($this->targetDirs[2].'/..'),
                'excluded_app_paths' => array(
                    0 => ($this->targetDirs[2].'/../vendor'),
                    1 => ($this->targetDirs[2].'/../app/cache'),
                    2 => ($this->targetDirs[2].'/../var/cache'),
                ),
                'prefixes' => array(
                    0 => ($this->targetDirs[2].'/..'),
                ),
                'install_default_breadcrumb_handlers' => true,
                'install_shutdown_handler' => true,
                'processors' => array(
                    0 => 'Raven_Processor_SanitizeDataProcessor',
                ),
                'processorOptions' => array(
                ),
            ),
            'sentry.exception_listener' => 'Sentry\\SentryBundle\\EventListener\\ExceptionListener',
            'sentry.listener_priorities' => array(
                'request' => 0,
                'kernel_exception' => 0,
                'console_exception' => 0,
            ),
            'sentry.listener_priorities.request' => 0,
            'sentry.listener_priorities.kernel_exception' => 0,
            'sentry.listener_priorities.console_exception' => 0,
            'console.command.ids' => array(
            ),
        );
    }
}
