<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Organization extends \AppBundle\Entity\Organization implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Organization' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Organization' . "\0" . 'fullTitle', '' . "\0" . 'AppBundle\\Entity\\Organization' . "\0" . 'companyType', 'head', 'members', 'headOrganization', 'lowerOrganizations', 'organizationDirectory', 'legalAddress', 'actualAddress', 'website', 'titleCanonical', 'title', 'content', 'publishable', 'searchable', 'phone', 'fax', 'email', 'createdAt', 'updatedAt');
        }

        return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Organization' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Organization' . "\0" . 'fullTitle', '' . "\0" . 'AppBundle\\Entity\\Organization' . "\0" . 'companyType', 'head', 'members', 'headOrganization', 'lowerOrganizations', 'organizationDirectory', 'legalAddress', 'actualAddress', 'website', 'titleCanonical', 'title', 'content', 'publishable', 'searchable', 'phone', 'fax', 'email', 'createdAt', 'updatedAt');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Organization $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setFullTitle($fullTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFullTitle', array($fullTitle));

        return parent::setFullTitle($fullTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getFullTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullTitle', array());

        return parent::getFullTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanyType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanyType', array());

        return parent::getCompanyType();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompanyType($companyType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompanyType', array($companyType));

        return parent::setCompanyType($companyType);
    }

    /**
     * {@inheritDoc}
     */
    public function getHead()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHead', array());

        return parent::getHead();
    }

    /**
     * {@inheritDoc}
     */
    public function setHead($head)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHead', array($head));

        return parent::setHead($head);
    }

    /**
     * {@inheritDoc}
     */
    public function getMembers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMembers', array());

        return parent::getMembers();
    }

    /**
     * {@inheritDoc}
     */
    public function setMembers($members)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMembers', array($members));

        return parent::setMembers($members);
    }

    /**
     * {@inheritDoc}
     */
    public function addMember(\AppBundle\Entity\ContactPerson $member)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMember', array($member));

        return parent::addMember($member);
    }

    /**
     * {@inheritDoc}
     */
    public function delMember(\AppBundle\Entity\ContactPerson $member)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delMember', array($member));

        return parent::delMember($member);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeadOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeadOrganization', array());

        return parent::getHeadOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeadOrganization($headOrganization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeadOrganization', array($headOrganization));

        return parent::setHeadOrganization($headOrganization);
    }

    /**
     * {@inheritDoc}
     */
    public function getLowerOrganizations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLowerOrganizations', array());

        return parent::getLowerOrganizations();
    }

    /**
     * {@inheritDoc}
     */
    public function setLowerOrganizations($lowerOrganizations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLowerOrganizations', array($lowerOrganizations));

        return parent::setLowerOrganizations($lowerOrganizations);
    }

    /**
     * {@inheritDoc}
     */
    public function addLowerOrganization(\AppBundle\Entity\Organization $organization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLowerOrganization', array($organization));

        return parent::addLowerOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizationDirectory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizationDirectory', array());

        return parent::getOrganizationDirectory();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganizationDirectory($organizationDirectory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganizationDirectory', array($organizationDirectory));

        return parent::setOrganizationDirectory($organizationDirectory);
    }

    /**
     * {@inheritDoc}
     */
    public function getActualAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActualAddress', array());

        return parent::getActualAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setActualAddress($actualAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActualAddress', array($actualAddress));

        return parent::setActualAddress($actualAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getLegalAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLegalAddress', array());

        return parent::getLegalAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setLegalAddress($legalAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLegalAddress', array($legalAddress));

        return parent::setLegalAddress($legalAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebsite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebsite', array());

        return parent::getWebsite();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebsite($website)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebsite', array($website));

        return parent::setWebsite($website);
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitleCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitleCanonical', array());

        return parent::getTitleCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitleCanonical($titleCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitleCanonical', array($titleCanonical));

        return parent::setTitleCanonical($titleCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', array());

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', array($content));

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishable($publishable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishable', array($publishable));

        return parent::setPublishable($publishable);
    }

    /**
     * {@inheritDoc}
     */
    public function isPublishable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublishable', array());

        return parent::isPublishable();
    }

    /**
     * {@inheritDoc}
     */
    public function setSearchable($searchable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSearchable', array($searchable));

        return parent::setSearchable($searchable);
    }

    /**
     * {@inheritDoc}
     */
    public function isSearchable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSearchable', array());

        return parent::isSearchable();
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', array());

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', array($phone));

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getFax()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFax', array());

        return parent::getFax();
    }

    /**
     * {@inheritDoc}
     */
    public function setFax($fax)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFax', array($fax));

        return parent::setFax($fax);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function updateTimestamps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateTimestamps', array());

        return parent::updateTimestamps();
    }

}
