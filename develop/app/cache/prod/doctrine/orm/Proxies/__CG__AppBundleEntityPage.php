<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Page extends \AppBundle\Entity\Page implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Page' . "\0" . 'id', 'parent', 'children', 'description', 'root', 'level', 'left', 'right', 'pageMenuBackground', 'view_date_page', 'publishable_date_page', 'banners', 'quotes', 'faqBlocks', 'slug', 'route', 'subRoutes', 'layout', 'childrenLayout', 'blocks', 'section', 'title', 'content', 'metaDescription', 'metaKeywords', 'publishable', 'createdAt', 'updatedAt', 'createdBy', 'updatedBy', 'deletedBy', '' . "\0" . 'AppBundle\\Entity\\Page' . "\0" . 'entityLock', 'currently', 'showLastNews', 'lastNewsTags', 'image', 'owner', 'mobileContent');
        }

        return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Page' . "\0" . 'id', 'parent', 'children', 'description', 'root', 'level', 'left', 'right', 'pageMenuBackground', 'view_date_page', 'publishable_date_page', 'banners', 'quotes', 'faqBlocks', 'slug', 'route', 'subRoutes', 'layout', 'childrenLayout', 'blocks', 'section', 'title', 'content', 'metaDescription', 'metaKeywords', 'publishable', 'createdAt', 'updatedAt', 'createdBy', 'updatedBy', 'deletedBy', '' . "\0" . 'AppBundle\\Entity\\Page' . "\0" . 'entityLock', 'currently', 'showLastNews', 'lastNewsTags', 'image', 'owner', 'mobileContent');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Page $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', array());

        return parent::getLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function getViewDatePage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViewDatePage', array());

        return parent::getViewDatePage();
    }

    /**
     * {@inheritDoc}
     */
    public function setViewDatePage($viewDatePage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setViewDatePage', array($viewDatePage));

        return parent::setViewDatePage($viewDatePage);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishableDatePage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishableDatePage', array());

        return parent::getPublishableDatePage();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishableDatePage($publishable_date_page)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishableDatePage', array($publishable_date_page));

        return parent::setPublishableDatePage($publishable_date_page);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getRight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRight', array());

        return parent::getRight();
    }

    /**
     * {@inheritDoc}
     */
    public function getLeft()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeft', array());

        return parent::getLeft();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoot', array());

        return parent::getRoot();
    }

    /**
     * {@inheritDoc}
     */
    public function getPageMenuBackground()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageMenuBackground', array());

        return parent::getPageMenuBackground();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageMenuBackground($pageMenuBackground)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageMenuBackground', array($pageMenuBackground));

        return parent::setPageMenuBackground($pageMenuBackground);
    }

    /**
     * {@inheritDoc}
     */
    public function isIndexable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isIndexable', array());

        return parent::isIndexable();
    }

    /**
     * {@inheritDoc}
     */
    public function addEmbeddable($type, $embeddable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEmbeddable', array($type, $embeddable));

        return parent::addEmbeddable($type, $embeddable);
    }

    /**
     * {@inheritDoc}
     */
    public function getBanners()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBanners', array());

        return parent::getBanners();
    }

    /**
     * {@inheritDoc}
     */
    public function setBanners($banners)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBanners', array($banners));

        return parent::setBanners($banners);
    }

    /**
     * {@inheritDoc}
     */
    public function addBanner($banner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBanner', array($banner));

        return parent::addBanner($banner);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuotes', array());

        return parent::getQuotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuotes($quotes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuotes', array($quotes));

        return parent::setQuotes($quotes);
    }

    /**
     * {@inheritDoc}
     */
    public function addQuote($quote)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addQuote', array($quote));

        return parent::addQuote($quote);
    }

    /**
     * {@inheritDoc}
     */
    public function addFaqFaqBlock($faq)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFaqFaqBlock', array($faq));

        return parent::addFaqFaqBlock($faq);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEmbeddedContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEmbeddedContent', array());

        return parent::removeEmbeddedContent();
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', array());

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', array($slug));

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getLayout()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLayout', array());

        return parent::getLayout();
    }

    /**
     * {@inheritDoc}
     */
    public function setLayout($layout)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLayout', array($layout));

        return parent::setLayout($layout);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildrenLayout()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildrenLayout', array());

        return parent::getChildrenLayout();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildrenLayout($childrenLayout)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildrenLayout', array($childrenLayout));

        return parent::setChildrenLayout($childrenLayout);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', array());

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent($parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', array($parent));

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', array());

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function getBlocks($container = NULL, $type = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlocks', array($container, $type));

        return parent::getBlocks($container, $type);
    }

    /**
     * {@inheritDoc}
     */
    public function setBlocks($blocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlocks', array($blocks));

        return parent::setBlocks($blocks);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoute', array());

        return parent::getRoute();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoute($route)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoute', array($route));

        return parent::setRoute($route);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubRoutes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubRoutes', array());

        return parent::getSubRoutes();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubRoutes($subRoutes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubRoutes', array($subRoutes));

        return parent::setSubRoutes($subRoutes);
    }

    /**
     * {@inheritDoc}
     */
    public function addSubRoutes($subRoute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubRoutes', array($subRoute));

        return parent::addSubRoutes($subRoute);
    }

    /**
     * {@inheritDoc}
     */
    public function isSection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSection', array());

        return parent::isSection();
    }

    /**
     * {@inheritDoc}
     */
    public function setSection($section)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSection', array($section));

        return parent::setSection($section);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', array());

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', array($content));

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaDescription($metaDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaDescription', array($metaDescription));

        return parent::setMetaDescription($metaDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaDescription', array());

        return parent::getMetaDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaKeywords($metaKeywords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaKeywords', array($metaKeywords));

        return parent::setMetaKeywords($metaKeywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaKeywords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaKeywords', array());

        return parent::getMetaKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishable($publishable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishable', array($publishable));

        return parent::setPublishable($publishable);
    }

    /**
     * {@inheritDoc}
     */
    public function isPublishable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublishable', array());

        return parent::isPublishable();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', array($user));

        return parent::setCreatedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', array($user));

        return parent::setUpdatedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedBy($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedBy', array($user));

        return parent::setDeletedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', array());

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedBy', array());

        return parent::getDeletedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function isBlameable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isBlameable', array());

        return parent::isBlameable();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityLock()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityLock', array());

        return parent::getEntityLock();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntityLock($entityLock)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntityLock', array($entityLock));

        return parent::setEntityLock($entityLock);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrently()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrently', array());

        return parent::getCurrently();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrently($currently)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrently', array($currently));

        return parent::setCurrently($currently);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowLastNews()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowLastNews', array());

        return parent::getShowLastNews();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowLastNews($showLastNews)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowLastNews', array($showLastNews));

        return parent::setShowLastNews($showLastNews);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastNewsTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastNewsTags', array());

        return parent::getLastNewsTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastNewsTags($lastNewsTags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastNewsTags', array($lastNewsTags));

        return parent::setLastNewsTags($lastNewsTags);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', array());

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(\Application\Sonata\MediaBundle\Entity\Media $image = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', array($image));

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', array());

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner($owner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', array($owner));

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function hasStroiMosOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasStroiMosOwner', array());

        return parent::hasStroiMosOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function hasOwner(\AppBundle\Entity\Owner $owner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasOwner', array($owner));

        return parent::hasOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getMobileContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMobileContent', array());

        return parent::getMobileContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setMobileContent($mobileContent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMobileContent', array($mobileContent));

        return parent::setMobileContent($mobileContent);
    }

}
