<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class MenuNode extends \AppBundle\Entity\MenuNode implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'nodeName', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'lft', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'lvl', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'rgt', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'root', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'parent', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'children', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'type', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'uri', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'page', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'post', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'construction', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'stadium', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'route', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'routeParameters', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'extras', 'title', 'createdBy', 'updatedBy', 'deletedBy', 'createdAt', 'updatedAt', 'publishable');
        }

        return array('__isInitialized__', 'id', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'nodeName', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'lft', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'lvl', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'rgt', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'root', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'parent', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'children', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'type', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'uri', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'page', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'post', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'construction', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'stadium', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'route', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'routeParameters', '' . "\0" . 'AppBundle\\Entity\\MenuNode' . "\0" . 'extras', 'title', 'createdBy', 'updatedBy', 'deletedBy', 'createdAt', 'updatedAt', 'publishable');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (MenuNode $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNodeName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNodeName', array());

        return parent::getNodeName();
    }

    /**
     * {@inheritDoc}
     */
    public function setNodeName($nodeName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNodeName', array($nodeName));

        return parent::setNodeName($nodeName);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoot', array());

        return parent::getRoot();
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', array());

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent($parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', array($parent));

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', array());

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildren($children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildren', array($children));

        return parent::setChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function getUri()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUri', array());

        return parent::getUri();
    }

    /**
     * {@inheritDoc}
     */
    public function setUri($uri)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUri', array($uri));

        return parent::setUri($uri);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoute', array());

        return parent::getRoute();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoute($route)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoute', array($route));

        return parent::setRoute($route);
    }

    /**
     * {@inheritDoc}
     */
    public function getRouteParameters()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRouteParameters', array());

        return parent::getRouteParameters();
    }

    /**
     * {@inheritDoc}
     */
    public function setRouteParameters($routeParameters)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRouteParameters', array($routeParameters));

        return parent::setRouteParameters($routeParameters);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtras()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtras', array());

        return parent::getExtras();
    }

    /**
     * {@inheritDoc}
     */
    public function setExtras($extras)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtras', array($extras));

        return parent::setExtras($extras);
    }

    /**
     * {@inheritDoc}
     */
    public function getPage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPage', array());

        return parent::getPage();
    }

    /**
     * {@inheritDoc}
     */
    public function setPage($page)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPage', array($page));

        return parent::setPage($page);
    }

    /**
     * {@inheritDoc}
     */
    public function getStadium()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStadium', array());

        return parent::getStadium();
    }

    /**
     * {@inheritDoc}
     */
    public function setStadium($stadium)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStadium', array($stadium));

        return parent::setStadium($stadium);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getPost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPost', array());

        return parent::getPost();
    }

    /**
     * {@inheritDoc}
     */
    public function setPost($post)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPost', array($post));

        return parent::setPost($post);
    }

    /**
     * {@inheritDoc}
     */
    public function getConstruction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConstruction', array());

        return parent::getConstruction();
    }

    /**
     * {@inheritDoc}
     */
    public function setConstruction($construction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConstruction', array($construction));

        return parent::setConstruction($construction);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptions', array());

        return parent::getOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function getLvl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLvl', array());

        return parent::getLvl();
    }

    /**
     * {@inheritDoc}
     */
    public function getLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', array());

        return parent::getLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', array());

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', array($user));

        return parent::setCreatedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', array($user));

        return parent::setUpdatedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedBy($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedBy', array($user));

        return parent::setDeletedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', array());

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedBy', array());

        return parent::getDeletedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function isBlameable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isBlameable', array());

        return parent::isBlameable();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishable($publishable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishable', array($publishable));

        return parent::setPublishable($publishable);
    }

    /**
     * {@inheritDoc}
     */
    public function isPublishable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublishable', array());

        return parent::isPublishable();
    }

}
